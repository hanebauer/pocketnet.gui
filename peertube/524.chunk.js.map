{"version":3,"file":"524.chunk.js?v=2646","mappings":"qlCAoCA,IACMA,EAAAA,SAAAA,I,6rBAiBJ,WAAaC,EAAwBC,GAAuB,a,4FAAA,UAC1D,cAAMD,EAAQC,IAfhBC,gBAAkB,IAClB,EAAAC,gBAAkB,IAClB,EAAAC,SAAW,GACX,EAAAC,aAAe,IAAIC,IAAAA,aACnB,EAAAC,MAAQ,EAaN,EAAKC,WAAa,EAAKC,SAASC,QAAU,EAAKN,SAE/CJ,EAAOW,GAAG,SAAUC,IACb,EAAKH,SAASI,cAEnBb,EAAOc,SAAS,uBAChB,EAAKC,UAAUC,IACbhB,EAAOiB,YAAY,uBACnB,EAAKC,UAAUC,MAAMC,QAAU,OAC1BJ,GACH,EAAKP,SAASY,MACf,IALH,IASFrB,EAAOW,GAAG,WAAW,KACnB,EAAKN,aAAaiB,QAAQ,UAA1B,IAnBwD,CAqB3D,C,qCAED,WACE,IAAMJ,EAAY,EAAH,0CAAkB,MAAO,CACtCK,UAAW,qBACXC,WA9EoBvB,EA8EOwB,KAAKhB,SA7E7B,+EAEiCR,EAAQyB,kyBAa2CzB,EAAQ0B,gFAE1D1B,EAAQ2B,2CAlBnD,IAA0B3B,EAkGtB,OAjBAwB,KAAKP,UAAYA,EACjBA,EAAUC,MAAMC,QAAU,OAE1BK,KAAKI,aAAeX,EAAUY,uBAAuB,gCAAgC,GACrFL,KAAKM,MAAQb,EAAUY,uBAAuB,oBAAoB,GAClEL,KAAKO,aAAed,EAAUY,uBAAuB,4BAA4B,GACjFL,KAAKQ,iBAAmBf,EAAUY,uBAAuB,wBAAwB,GACjFL,KAAKS,WAAahB,EAAUY,uBAAuB,4BAA4B,GAE/EL,KAAKO,aAAaG,QAAU,KAC1BV,KAAKpB,aAAaiB,QAAQ,SAA1B,EAGFG,KAAKS,WAAWC,QAAU,KACxBV,KAAKpB,aAAaiB,QAAQ,OAA1B,EAGKJ,CACR,G,sBAED,SAAUkB,GACR,IAAI1B,EAEJe,KAAKI,aAAaQ,aAAa,mBAAoB,GAAGZ,KAAKtB,mBAC3DsB,KAAKI,aAAaQ,aAAa,oBAAqB,IAAIZ,KAAKtB,iBAE7DsB,KAAKM,MAAMP,UAAYC,KAAKhB,SAAS6B,WAErCb,KAAKpB,aAAakC,IAAI,UAAU,KAC9BC,aAAa9B,GACb0B,GAAG,EAAH,IAGFX,KAAKpB,aAAakC,IAAI,WAAW,KAC/BC,aAAa9B,GACb0B,GAAG,EAAH,IAGFX,KAAKpB,aAAakC,IAAI,QAAQ,KAC5BC,aAAa9B,GACb0B,GAAG,EAAH,IAGF,IAAMK,EAAeC,IACnB,IAAMC,EAAYC,KAAKC,KAAKpB,KAAKvB,iBAAkBuB,KAAKtB,gBAAkBuC,EAAUjB,KAAKvB,gBAAkB,EAAI,KAC/GuB,KAAKI,aAAaQ,aAAa,oBAAqB,GAAKM,EAAzD,EAGIG,EAAO,KACXL,EAA6B,IAAhBhB,KAAKlB,QAAiBkB,KAAKjB,WAAxC,EAGIuC,EAAS,KACTtB,KAAKhB,SAASuC,aAChBvB,KAAKQ,iBAAiBgB,UAAYxB,KAAKhB,SAASmB,cAChDa,EAAY,GACZhB,KAAKlB,MAAQ,EACbG,EAAUwC,WAAWH,EAAOI,KAAK1B,MAAO,MAC/BA,KAAKlB,OAASkB,KAAKjB,YAC5BgC,aAAa9B,GACb0B,GAAG,KAEHX,KAAKQ,iBAAiBgB,UAAY,GAClCH,IACApC,EAAUwC,WAAWH,EAAOI,KAAK1B,MAAOA,KAAKrB,UAC9C,EAGHqB,KAAKP,UAAUC,MAAMC,QAAU,QAC/BV,EAAUwC,WAAWH,EAAOI,KAAK1B,MAAOA,KAAKrB,SAC9C,M,yOApHGL,CADYO,IAAAA,aAAqB,c,4oBAwHvCA,IAAAA,kBAA0B,UAAWP,GCzJrC,IAEMqD,EAAAA,SAAAA,I,2rBAEJ,WAAapD,GAA6D,UAArCC,EAAqC,uDAAF,CAAC,EAAC,UACxE,IAAMoD,EAAW,CACfhC,KAAMpB,EAAQoB,KACdiB,SAAUrC,EAAQqC,SAClB5B,QAAST,EAAQS,SAAW,IAC5BiB,WAAY1B,EAAQ0B,YAAc,SAClCD,SAAUzB,EAAQyB,UAAY,UAC9BE,cAAe3B,EAAQ2B,eAAiB,wBACxCf,UAAWZ,EAAQY,UACnBmC,UAAW/C,EAAQ+C,WATmD,OAYxE,cAAMhD,IAEDA,OAAOsD,OAAM,KAChBtD,EAAOc,SAAS,aAAhB,IAGFd,EAAOuD,SAAS,UAAWF,GAlB6C,CAmBzE,C,gEArBGD,CAFS9C,IAAAA,UAAkB,WA0BjCA,IAAAA,eAAuB,SAAU8C,G,cCkBjC,SAASI,EAAWC,GAClB,IAAKA,EAAM,OAAO,EAClB,GAAoB,iBAATA,EAAmB,OAAOA,EAErC,IACMC,EAAUD,EAAKE,MADT,wCAGZ,OAAKD,EAMU,KAJDE,SAASF,EAAQ,IAAM,IAAK,IAIV,GAHhBE,SAASF,EAAQ,IAAM,IAAK,IAC5BE,SAASF,EAAQ,IAAM,IAAK,IAJvB,CAOtB,CAED,SAASG,EAAeC,GAA8C,IAA7BC,EAA6B,wDAAfC,EAAe,uCAChEP,EAAO,GAEX,GAAgB,IAAZK,IAAkBC,EAAM,MAAO,KAEnC,IAAME,EAAcD,GAAU,IACxBE,EAAgBF,GAAU,IAC1BG,EAAgBJ,EAAO,GAAK,IAE5BK,EAAQxB,KAAKyB,MAAMP,EAAU,MAC/BM,GAAS,EAAGX,EAAOW,EAAQH,EACtBF,IAAMN,EAAO,IAAMQ,GAE5BH,GAAW,KACX,IAAMQ,EAAU1B,KAAKyB,MAAMP,EAAU,IAUrC,OATIQ,GAAW,GAAKA,EAAU,IAAMP,EAAMN,GAAQ,IAAMa,EAAUJ,EACzDI,GAAW,EAAGb,GAAQa,EAAUJ,EAChCH,IAAMN,GAAQ,KAAOS,IAE9BJ,GAAW,KACI,GAAKA,EAAU,IAAMC,EAAMN,GAAQ,IAAMK,EAAUK,EACzDL,GAAW,EAAGL,GAAQK,EAAUK,EAChCJ,IAAMN,GAAQ,MAEhBA,CACR,CCxFD,SAASc,EAA4CC,EAAWC,GAC9D,IAAMC,EAAc,CAAC,EAErB,IAAK,IAAMC,KAAOF,EACZG,OAAOC,UAAUC,eAAeC,KAAKP,EAAQG,KAC/CD,EAAOC,GAAOH,EAAOG,IAIzB,OAAOD,CACR,C,cCVM,IAyCDM,EAAoB,CACxB,SAAU,KACV,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,QAAS,aACT,UAAW,aACX,UAAW,aACX,QAAS,aACT,GAAM,cA6BF,SAAUC,EAAmBC,GACjC,OAAKA,GAEDF,EAAkBE,GAAgBF,EAAkBE,GAFpCA,CAKrB,CAhC+BN,OAAOH,KAtEX,CAE1B,QAAS,UAET,GAAM,6CACN,QAAS,YACT,QAAS,oBACT,QAAS,UACT,QAAS,mDACT,GAAM,YACN,QAAS,aACT,QAAS,UACT,QAAS,QACT,QAAS,cACT,GAAM,cACN,QAAS,SACT,GAAM,WACN,QAAS,SACT,QAAS,iCACT,QAAS,WACT,QAAS,qBACT,IAAO,YACP,QAAS,aACT,GAAM,UACN,QAAS,SACT,QAAS,wBACT,QAAS,0BACT,QAAS,6CACT,GAAM,QACN,QAAS,UACT,GAAM,gBACN,QAAS,kBACT,QAAS,qBACT,QAAS,uBACT,IAAO,YACP,aAAc,mDACd,aAAc,qDAmCuBU,OAAOP,OAAOH,KAAKO,IAgBnBI,KAAIC,GAAK,IAAMA,ICzF/C,IAAMC,EAAa,CACxB,UACA,WACA,WACA,OACA,UACA,SACA,QAGWC,EAAuBD,EAAWH,OAAO,CACpD,cACA,eCVF,SAASK,EAAaC,GACpB,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,EAChD,CDW6BN,EAAWH,OAAO,CAAE,UACVI,EAAqBJ,OAAO,CAAE,UAEfA,OAAO,CAC5D,QACA,SACA,UACA,cChBF,IAAMU,EAAkB,CACtB,CAAEhD,IAAK,KAAMiD,KAAM,IAAKC,SAAU,GAClC,CAAElD,IAAK,QAASiD,KAAM,KAAMC,SAAU,GACtC,CAAElD,IAAK,WAAYiD,KAAM,KAAMC,SAAU,GACzC,CAAElD,IAAK,WAAciD,KAAM,KAAMC,SAAU,IAE7C,SAASC,EAAOC,GACd,IAAMC,EAASL,EAAgBM,MAAKC,GAAKH,EAAQG,EAAEvD,OAAQgD,EAAgBA,EAAgBQ,OAAS,GAGpG,MAAO,EAFOJ,GAASC,EAAOrD,IAAM,OAAOyD,QAAQJ,EAAOH,UAE3CG,EAAOJ,KACvB,C,w8BCaD,IACMS,EAAAA,SAAAA,I,6rBAAN,qC,2BAOEC,cAAqB,CAAC,EAEtB,EAAAC,WAAa,IACb,EAAAC,kBAAuC,CAAC,EAV1C,CAwTC,C,qCAtRC,WACEjF,KAAKkF,YAAcrG,IAAAA,IAAAA,SAAqB,MAAO,CAC7CiB,UAAW,sBAEbE,KAAKkF,YAAYxF,MAAMC,QAAU,OAEjCK,KAAKmF,WAAatG,IAAAA,IAAAA,SAAqB,MAAO,CAC5CiB,UAAW,mBAGb,IAAMsF,EAAcvG,IAAAA,IAAAA,SAAqB,SAAU,CACjDiB,UAAW,kBACXuF,SAAU,IACV/E,MAAO,cACPkB,UAAW,OACV,CAAE,aAAc,gBA6BnB,OA5BA4D,EAAY1E,QAAU,IAAMV,KAAKsF,OAEjCtF,KAAKkF,YAAYK,YAAYH,GAC7BpF,KAAKkF,YAAYK,YAAYvF,KAAKmF,YAElCnF,KAAKwF,qBAELxF,KAAKyF,QAAQvG,GAAG,WAAW,CAACwG,EAAYC,KACtC,IAAKA,EAAM,OAEX3F,KAAK4F,KAAOD,EAAKE,OAEjB,IAAMC,EAAWH,EAAKI,IAChBC,EAAYL,EAAKM,KAEvBjG,KAAKiF,kBAAkBiB,cAAgB3B,EAAMuB,EAASI,cAAgBF,EAAUE,eAAeC,KAAK,KACpGnG,KAAKiF,kBAAkBmB,YAAc7B,EAAMuB,EAASM,YAAcJ,EAAUI,aAAaD,KAAK,KAC9FnG,KAAKiF,kBAAkBoB,gBAAkB9B,EAAMuB,EAASQ,WAAaN,EAAUM,YAAYH,KAAK,KAChGnG,KAAKiF,kBAAkBsB,cAAgBhC,EAAMuB,EAASU,SAAWR,EAAUQ,UAAUL,KAAK,KAC1FnG,KAAKiF,kBAAkBwB,SAAWX,EAASW,SAC3CzG,KAAKiF,kBAAkByB,iBAAmBnC,EAAMoB,EAAKgB,mBAAmBR,KAAK,KAAO,KAEhE,qBAAhBR,EAAKE,SACP7F,KAAKiF,kBAAkB2B,qBAAuBrC,EAAMyB,EAAUM,YAAYH,KAAK,KAC/EnG,KAAKiF,kBAAkB4B,oBAAsBtC,EAAMuB,EAASQ,YAAYH,KAAK,KAC9E,IAGInG,KAAKkF,WACb,G,oBAED,WACMlF,KAAK8G,eAAgB9G,KAAKsF,OACzBtF,KAAK+G,MACX,G,kBAED,WAAI,WACF/G,KAAKkF,YAAYxF,MAAMC,QAAU,QAEjCK,KAAK8G,eAAiBE,YAAW,GAAC,YAChC,IACE,IAAMxI,EAAU,EAAKyI,kBAOnB,EAAKC,mBAAmB1I,EAK3B,CAHC,MAAO2I,GACPC,EAAAA,EAAAA,MAAa,uBAAwBD,GACrCE,cAAc,EAAKP,eACpB,CACF,IAAE9G,KAAKgF,WACT,G,kBAED,WACEqC,cAAcrH,KAAK8G,gBACnB9G,KAAKkF,YAAYxF,MAAMC,QAAU,MAClC,G,6BAEO,WACN,IAUI2H,EACAC,EAXEC,EAAiBxH,KAAKyF,QAAQ+B,iBAC9BC,EAAQD,EAAeE,kBAEvBC,GAASF,aAAK,EAALA,EAAOG,cAAcH,aAAK,EAALA,EAAOI,YACvC,IAAGJ,aAAK,EAALA,EAAOG,aAAc,SAAQH,aAAK,EAALA,EAAOI,aAAc,UACrDC,EAEEC,EAAa,GAAGN,aAAK,EAALA,EAAOO,WAAUP,aAAK,EAALA,EAAOQ,MAAM,gBAAiB,KAC/DC,EAASlI,KAAKmI,mBAAmBnI,KAAKzB,SAAS6J,YAWrD,OANIpI,KAAKhB,SAASqJ,YAChBd,EAAUnF,EAAcoF,EAAec,kBAEvChB,EAAWtH,KAAKzB,SAASgK,kBAGpB,CACLtD,kBAAmBjF,KAAKiF,kBACxB8C,aACAJ,SACAO,SACAX,UACAD,WAEH,G,gCAsCO,WACNtH,KAAKwI,WAAaxI,KAAKyI,aAAazI,KAAKzB,SAASmK,SAAS,gBAC3D1I,KAAK+F,IAAM/F,KAAKyI,aAAazI,KAAKzB,SAASmK,SAAS,QACpD1I,KAAK2I,KAAO3I,KAAKyI,aAAazI,KAAKzB,SAASmK,SAAS,eACrD1I,KAAK4I,SAAW5I,KAAKyI,aAAazI,KAAKzB,SAASmK,SAAS,sBACzD1I,KAAK+H,WAAa/H,KAAKyI,aAAazI,KAAKzB,SAASmK,SAAS,eAC3D1I,KAAK6I,OAAS7I,KAAKyI,aAAazI,KAAKzB,SAASmK,SAAS,WACvD1I,KAAK2H,OAAS3H,KAAKyI,aAAazI,KAAKzB,SAASmK,SAAS,WACvD1I,KAAK8I,MAAQ9I,KAAKyI,aAAazI,KAAKzB,SAASmK,SAAS,UACtD1I,KAAK+I,WAAa/I,KAAKyI,aAAazI,KAAKzB,SAASmK,SAAS,qBAE3D1I,KAAKgJ,QAAUhJ,KAAKyI,aAAazI,KAAKzB,SAASmK,SAAS,qBACxD1I,KAAKiJ,YAAcjJ,KAAKyI,aAAazI,KAAKzB,SAASmK,SAAS,qBAC5D1I,KAAKkJ,SAAWlJ,KAAKyI,aAAazI,KAAKzB,SAASmK,SAAS,uBAEzD1I,KAAKmJ,eAAiBnJ,KAAKyI,aAAazI,KAAKzB,SAASmK,SAAS,oBAC/D1I,KAAKoJ,YAAcpJ,KAAKyI,aAAazI,KAAKzB,SAASmK,SAAS,iBAE5D1I,KAAKqJ,YAAcrJ,KAAKyI,aAAazI,KAAKzB,SAASmK,SAAS,iBAE5D1I,KAAKmF,WAAWI,YAAYvF,KAAKwI,WAAWc,MAC5CtJ,KAAKmF,WAAWI,YAAYvF,KAAK+F,IAAIuD,MACrCtJ,KAAKmF,WAAWI,YAAYvF,KAAK2I,KAAKW,MACtCtJ,KAAKmF,WAAWI,YAAYvF,KAAK4I,SAASU,MAC1CtJ,KAAKmF,WAAWI,YAAYvF,KAAK+H,WAAWuB,MAC5CtJ,KAAKmF,WAAWI,YAAYvF,KAAK6I,OAAOS,MACxCtJ,KAAKmF,WAAWI,YAAYvF,KAAK2H,OAAO2B,MACxCtJ,KAAKmF,WAAWI,YAAYvF,KAAK8I,MAAMQ,MACvCtJ,KAAKmF,WAAWI,YAAYvF,KAAK+I,WAAWO,MAC5CtJ,KAAKmF,WAAWI,YAAYvF,KAAKgJ,QAAQM,MACzCtJ,KAAKmF,WAAWI,YAAYvF,KAAKiJ,YAAYK,MAC7CtJ,KAAKmF,WAAWI,YAAYvF,KAAKkJ,SAASI,MAC1CtJ,KAAKmF,WAAWI,YAAYvF,KAAKmJ,eAAeG,MAChDtJ,KAAKmF,WAAWI,YAAYvF,KAAKoJ,YAAYE,MAC7CtJ,KAAKmF,WAAWI,YAAYvF,KAAKqJ,YAAYC,KAC9C,G,gCAEO,SAAoB9K,GAU1B,IAAM,kBAAEyG,EAAF,SAAqBqC,EAArB,WAA+BiC,EAA/B,OAA2C5B,EAA3C,WAAmDI,EAAnD,OAA+DG,EAA/D,QAAuEX,GAAY/I,EACnFD,EAASyB,KAAKzB,SAEdiL,EAAqCjL,EAAOkL,0BAI5CC,EAAS,GAHJvI,KAAKC,IAAIuI,SAASC,gBAAgBC,aAAe,EAAGC,OAAOC,YAAc,MACzE5I,KAAKC,IAAIuI,SAASC,gBAAgBI,cAAgB,EAAGF,OAAOG,aAAe,OAC1EH,OAAOI,kBAAoB,GAAGrF,QAAQ,QACZ2E,EAAaW,iCAAiCX,EAAaY,mBAE3FC,EAAW9L,EAAO8L,WAEpBxB,EAAS,GAAG1H,KAAKmJ,MAAwB,IAAlB/L,EAAOsK,YAC9BtK,EAAOgM,UAAS1B,GAAU,YAE9B,IAAM2B,EAAkBvF,EAAkBiB,cACtC,GAAGjB,EAAkBiB,0BAA0BjB,EAAkBmB,0BACjE0B,EAEE2C,EAAmBxF,EAAkBoB,gBACvC,GAAGpB,EAAkBoB,4BAA4BpB,EAAkBsB,4BACnEuB,EACE4C,EAAoBzF,EAAkB2B,qBACxC,GAAG3B,EAAkB2B,0CAAuC3B,EAAkB4B,sCAC9EiB,EAEEqB,OAA8BrB,IAAbR,EACnB,IAAe,IAAXA,GAAgBzC,QAAQ,SAASyC,EAAW+C,GAAUxF,QAAQ,YAClEiD,EAEJ9H,KAAK2K,aAAa3K,KAAKwI,WAAYxI,KAAK4F,MAAQ,QAChD5F,KAAK2K,aAAa3K,KAAK+F,IAAKxH,EAAOmK,SAAS1I,KAAKhB,SAAS4L,WAAa,UAAY,aACnF5K,KAAK2K,aAAa3K,KAAK2I,KAAM3I,KAAKhB,SAAS6L,WAE3C7K,KAAK2K,aAAa3K,KAAK4I,SAAUc,GACjC1J,KAAK2K,aAAa3K,KAAK+H,WAAYA,GACnC/H,KAAK2K,aAAa3K,KAAK6I,OAAQA,GAC/B7I,KAAK2K,aAAa3K,KAAK2H,OAAQA,GAC/B3H,KAAK2K,aAAa3K,KAAK8I,MAAOS,GAC9BvJ,KAAK2K,aAAa3K,KAAK+I,WAAY9D,EAAkByB,kBAErD1G,KAAK2K,aAAa3K,KAAKgJ,QAASwB,GAChCxK,KAAK2K,aAAa3K,KAAKiJ,YAAawB,GACpCzK,KAAK2K,aAAa3K,KAAKkJ,SAAUwB,GAEjC1K,KAAK2K,aAAa3K,KAAKmJ,eAAgBA,GACvCnJ,KAAK2K,aAAa3K,KAAKoJ,YAAalB,GAEpClI,KAAK2K,aAAa3K,KAAKqJ,YAAa9B,EACrC,G,0BAEO,SAAcuD,EAAiBtG,GAChCA,GAKLsG,EAAGxB,KAAK5J,MAAMC,QAAU,QAEpBmL,EAAGtG,MAAMzE,YAAcyE,IAC3BsG,EAAGtG,MAAMzE,UAAYyE,IAPnBsG,EAAGxB,KAAK5J,MAAMC,QAAU,MAQ3B,G,0BAEO,SAAcoL,EAAmBC,GACvC,IAAM1B,EAAOzK,IAAAA,IAAAA,SAAqB,OAClCyK,EAAK5J,MAAMC,QAAU,OAErB,IAAMsL,EAAQpM,IAAAA,IAAAA,SAAqB,MAAO,CAAE2C,UAAWuJ,IACjDvG,EAAQ3F,IAAAA,IAAAA,SAAqB,OAAQ,CAAEkB,UAAWiL,IAKxD,OAHA1B,EAAK/D,YAAY0F,GACjB3B,EAAK/D,YAAYf,GAEV,CAAE8E,OAAM9E,QAChB,G,gCAEO,SAAoB0G,GAC1B,IAAIjI,EAAS,GAEb,IAAK,IAAIkI,EAAI,EAAGA,EAAID,EAAEtG,OAAQuG,IAAK,CACjC,IAAMC,EAAQjK,KAAKyB,MAAMsI,EAAEE,MAAMD,IAC3BE,EAAMlK,KAAKyB,MAAMsI,EAAEG,IAAIF,IAE7BlI,GAAU,IAAIb,EAAcgJ,OAAWhJ,EAAciJ,MACtD,CAED,OAAOpI,CACR,M,yOAvTG6B,CADYjG,IAAAA,aAAqB,c,8iBA2TvCA,IAAAA,kBAA0B,YAAaiG,GCtVvC,IAEMwG,EAAAA,SAAAA,I,6rBAGJ,WAAa/M,EAAwBC,GAAyB,O,4FAAA,SAC5D,IAAMoD,EAAW,OAAH,UACTpD,GAFuD,OAK5D,cAAMD,IAEDA,OAAOsD,OAAM,KAChBtD,EAAOc,SAAS,sBAAhB,IAGF,EAAKkM,UAAY,IAAIzG,EAAUvG,EAAQC,GAEvCD,EAAOuD,SAAS,EAAKyJ,UAAW3J,GAb4B,CAc7D,C,iCAED,WACE5B,KAAKuL,UAAUxE,MAChB,M,yOArBGuE,CAFSzM,IAAAA,UAAkB,WCYjC,SAAS2M,IACP,MAAO,4BAA4BC,KAAKC,UAAUC,UACnD,C,43BDYD9M,IAAAA,eAAuB,QAASyM,GEIhC,IACMM,EAAAA,SAAAA,I,6rBAGJ,WAAarN,EAAwBC,GAAkC,MAIrE,O,4FAJqE,SACrE,cAAMD,EAAQC,GAGVgN,IAAY,MAEhBjN,EAAOW,GAAG,SAAUC,IACdZ,EAAOsN,WAAatN,EAAOuN,UAC/B,EAAKrM,UAAUM,UAzCZ,wcA0CH,EAAKgM,YAAL,IAGFxN,EAAOW,GAAG,QAASC,IACbZ,EAAOsN,YACX,EAAKpM,UAAUM,UAhCZ,8cAiCH,EAAKgM,YAAL,IAfmE,EAiBtE,C,qCAED,WAOE,OANA/L,KAAKP,UAAL,4BAAAO,MAAA,KAAAA,KAAgC,MAAO,CACrCF,UAAW,uBAGbE,KAAKP,UAAUC,MAAMC,QAAU,OAExBK,KAAKP,SACb,G,uBAED,WACEO,KAAKP,UAAUC,MAAMC,QAAU,UAE/B8B,YAAW,KACTzB,KAAKP,UAAUC,MAAMC,QAAU,MAA/B,GACC,IACJ,M,yOAtCGiM,CADY/M,IAAAA,aAAqB,c,8iBA0CvCA,IAAAA,kBAA0B,aAAc+M,GCxExC,IAEMI,EAAAA,SAAAA,I,2rBAEJ,WAAazN,EAAwBC,GAAkC,a,4FAAA,UACrE,cAAMD,IAEDA,OAAOsD,OAAM,KAChBtD,EAAOc,SAAS,aAAhB,IAGFd,EAAOuD,SAAS,aAActD,GAPuC,CAQtE,C,gEAVGwN,CAFSnN,IAAAA,UAAkB,WAejCA,IAAAA,eAAuB,SAAUmN,G,uBCqHjC,IAAMC,EAAa,oBAEnB,SAASC,EAAiBhJ,GACxB,IACE,OAAOiJ,aAAaC,QAAQH,EAAa/I,EAG1C,CAFC,SACA,MACD,CACF,CAED,SAASmJ,GAAiBnJ,EAAasB,GACrC,IACE2H,aAAaG,QAAQL,EAAa/I,EAAKsB,EAExC,CADC,MAAmB+H,GACpB,CACF,C,0jBCpID,IAAMC,GAAcC,IAAM,4BAIpBC,GAAAA,SAAAA,I,isBAqBJ,WAAanO,EAAwBC,GAA+B,a,4FAAA,UAClE,cAAMD,IAfSoO,UAAY,CAC3BC,yBAA0B,KAQpB,EAAAC,YAAa,EACb,EAAAC,mBAAoB,EACpB,EAAAC,iBAAkB,EAMxB,EAAKC,aAAexO,EAAQwO,aAC5B,EAAKC,oBAAsBzO,EAAQyO,oBACnC,EAAKpC,UAAYrM,EAAQqM,UACzB,EAAKqC,UAAYnL,EAAUvD,EAAQ0O,WAGnC,EAAKC,yBAA2B,EAAK5O,OAAOS,SAASoO,kBAEjD5O,EAAQ6O,UAAU,EAAK9O,OAAOc,SAAS,oBAE3C,EAAKd,OAAOW,GAAG,oBAAoB,KACjC,EAAKX,OAAOiB,YAAY,mBAAxB,IAGF,EAAKjB,OAAOsD,OAAM,KAChB,IAAMyL,EAAgB,EAAK/O,OAAOS,SAE5B6J,ED7DZ,WACE,IAAMrE,EAAQ0H,EAAgB,UAC9B,GAAI1H,QAAuC,CACzC,IAAM+I,EAAcC,WAAWhJ,GAC/B,GAAIiJ,MAAMF,GAAc,OAExB,OAAOA,CACR,CAGF,CCmDoBG,QACA5F,IAAXe,GAAsB,EAAKtK,OAAOsK,OAAOA,GAE7C,IAAM0B,OAAgCzC,IAAxBwF,EAAc/C,MAAsB+C,EAAc/C,MDpDtE,WACE,IAAM/F,EAAQ0H,EAAgB,QAC9B,GAAI1H,QAAuC,MAAiB,SAAVA,CAGnD,CC+C6EmJ,GAUxE,QATc7F,IAAVyC,GAAqB,EAAKhM,OAAOgM,MAAMA,GAE3C,EAAKqD,gBAAkBpP,EAAQqP,UDP5B3B,EAAgB,iBCSnB,EAAK3N,OAAOW,GAAG,gBAAgB,KD1C5BmN,GAAgB,SC2CC,EAAK9N,OAAOsK,SD3CGiF,YAIhCzB,GAAgB,OCwCD,EAAK9N,OAAOgM,QDxCGuD,WCwC/B,IAGEtP,EAAQuP,SAAU,CACpB,IAAMA,EAAWhM,EAAUvD,EAAQuP,UAC7BC,EAAO,MAEb,EAAKzP,OAAOW,GAAG,cAAc,SAAS+O,IAChCD,EAAKzP,OAAO2P,cAAgBH,IAC9BC,EAAKzP,OAAO4P,QACZH,EAAKzP,OAAOsB,QAAQ,WAEpBmO,EAAKzP,OAAO6P,IAAI,aAAcH,GAEjC,GACF,CAED,EAAK1P,OAAO8P,aAAaC,iBAAiB,UAAU,KAClD,IAAMC,EAAU,EAAKhQ,OAAO8P,aAAaG,QAAQ9J,MAAK+J,GAClC,aAAXA,EAAEC,MAAkC,YAAXD,EAAE7I,ODlCnCyG,GAAgB,gBCqCZkC,EAKYA,EAAQI,SAJN,MAInB,IAKF,EAAKpQ,OAAO8L,SAAS7L,EAAQoQ,eAE7B,EAAKC,mBACL,EAAKC,gBAAL,IAjEgE,CAmEnE,C,oCAED,WACM9O,KAAK+O,mBAAmB1H,cAAcrH,KAAK+O,kBAChD,G,0BAED,WACE/O,KAAK6M,YAAa,EAClB7M,KAAKgP,iBACN,G,0BAED,WACEhP,KAAK6M,YAAa,EAClB7M,KAAKgP,iBACN,G,+BAED,WACEhP,KAAKzB,OAAOc,SAAS,4BACtB,G,4BAED,WACEW,KAAKzB,OAAOiB,YAAY,4BACzB,G,8BAEO,WACFgM,KAAYxL,KAAKzB,OAAOc,SAAS,iBAMrCW,KAAKiP,wBAELjP,KAAKkP,wBACN,G,4BAEO,WACN,IACIC,EADAC,EAAkBpP,KAAKkN,UAG3BlN,KAAKzB,OAAOuC,IAAI,QAAQ,KACtBd,KAAKqP,qBAAqBlO,KAAKmJ,MAAMtK,KAAKkN,WAAYiC,EAAtD,IAGFnP,KAAKzB,OAAOW,GAAG,UAAU,KAEnBiC,KAAKmO,IAAItP,KAAKzB,OAAO2P,cAAgBkB,GAAmB,IAE5DD,EAAgB,OAAhB,IAKFnP,KAAKzB,OAAOuC,IAAI,SAAS,KAEvB,IAAMoN,EAAc/M,KAAKmJ,MAAMtK,KAAKzB,OAAO8L,YAC3C+E,EAAkBlB,EAElBlO,KAAKqP,qBAAqBnB,EAAaiB,GAEvCA,OAAgBrH,CAAhB,IAGF9H,KAAK+O,kBAAoB/H,aAAY,KACnC,IAAMkH,EAAc/M,KAAKmJ,MAAMtK,KAAKzB,OAAO2P,eD7GjD,IAAgCrD,EAAmBR,ECgHzC6D,IAAgBkB,IAEpBA,EAAkBlB,EAElBlO,KAAKqP,qBAAqBnB,EAAaiB,GACpCI,OAAMpI,GAAOC,EAAAA,EAAAA,MAAa,kCAAmCD,KAEhEgI,OAAgBrH,EAGX9H,KAAKiN,sBD1HgBpC,EC2HF7K,KAAK6K,UD3HgBR,EC2HL6D,ED1HrC7B,GAAgB,sBAAuBmD,KAAKC,UAAStM,OAAAA,OAAAA,OAAAA,OAAAA,CAAAA,EAU9D,SAAqC0H,GACnC,IAAIlF,EAEJ,IACE,IAAMnB,EAAQ0H,EAAgB,uBAC9B,IAAK1H,EAAO,MAAO,CAAC,EAEpBmB,EAAO6J,KAAKE,MAAMlL,EAGnB,CAFC,MAAOmL,GACPvI,EAAAA,EAAAA,MAAa,uDAAwDuI,EACtE,CAID,OAFAhK,EAAOA,GAAQ,CAAC,EAITA,CACR,CA1BMiK,IAA4B,CAE/B,CAAC/E,GAAY,CACXR,WACAwF,KAAM,IAAI,IAAIC,MAAQC,sBCsHrB,GACA/P,KAAK2M,UAAUC,yBACnB,G,kCAEO,SAAsBsB,EAAqB8B,GACjD,IAAKhQ,KAAKgN,aAAc,OAAOiD,QAAQC,aAAQpI,GAE/C,IAAMqI,EAAkB,CACtBjC,cACA8B,aAGII,EAAU,IAAIC,QAAQ,CAC1B,eAAgB,oCAKlB,OAFIrQ,KAAKiN,qBAAqBmD,EAAQE,IAAI,gBAAiBtQ,KAAKiN,qBAEzDsD,MAAMvQ,KAAKgN,aAAc,CAAEwD,OAAQ,OAAQL,KAAMX,KAAKC,UAAUU,GAAOC,YAAWb,OAAMkB,GACtFR,QAAQC,WAElB,G,oCAEO,WACNlQ,KAAKzB,OAAOW,GAAG,oBAAoB,KAC7Bc,KAAKzB,OAAOmS,gBAAgB1Q,KAAKzB,OAAOoS,OAAZ,GAEnC,G,mCAEO,WACN,IAAMC,EAAa5Q,KAAKzB,OAAOqS,WACzBC,EAAkCD,EAAmBC,eAE3DD,EAAW1R,GAAG,cAAc,KAC1Bc,KAAK8M,mBAAoB,EACzB9M,KAAKgP,iBAAL,IAGF4B,EAAW1R,GAAG,cAAc,KAC1Bc,KAAK8M,mBAAoB,EACzB9M,KAAKgP,iBAAL,IAGF6B,EAAeC,OAAO5R,GAAG,cAAc,KACrCc,KAAK+M,iBAAkB,EACvB/M,KAAKgP,iBAAL,IAGF6B,EAAeC,OAAO5R,GAAG,cAAc,KACrCc,KAAK+M,iBAAkB,EACvB/M,KAAKgP,iBAAL,GAEH,G,6BAEO,WACFhP,KAAK6M,YAAc7M,KAAK+M,iBAAmB/M,KAAK8M,kBAClD9M,KAAK+Q,qBAAqB,IAI5B/Q,KAAK+Q,qBAAqB/Q,KAAKmN,0BAC/BnN,KAAKzB,OAAOyS,oBAAmB,GAChC,G,kCAEO,SAAsB/R,GAC3Be,KAAKzB,OAAe0S,OAAO7D,kBAAoBnO,EAChDe,KAAKzB,OAAOS,SAASoO,kBAAoBnO,EAEzCuN,GAAY,4BAA8BvN,EAC3C,M,yOA5OGyN,CAFS7N,IAAAA,UAAkB,W,opBAkPjCA,IAAAA,eAAuB,WAAY6N,ICnQnC,IAEMwE,GAAAA,SAAAA,I,isBAAN,sC,2BAEUC,YAAoC,GAGpC,EAAAC,uBAAwB,EALlC,CA+EC,C,gCAxEC,SAAKD,GACH,IAAK,IAAMjG,KAAKiG,EACdnR,KAAKmR,YAAYE,KAAKnG,GAGxBlL,KAAKsR,iBAAmBtR,KAAKuR,cAE7BvR,KAAKwR,OACLxR,KAAKH,QAAQ,mBACd,G,4BAED,WACE,OAAOG,KAAKmR,WACb,G,yBAED,WACE,OAAOnR,KAAKmR,YAAYzM,MAAKwG,GAAKA,EAAEuG,UACrC,G,qCAED,WACE,OAAOzR,KAAKmR,YAAYzM,MAAKwG,GAAKA,EAAEwG,KAAO1R,KAAK2R,wBACjD,G,oBAED,SAAQnT,G,MAKN,IAAM,GAAEkT,EAAF,uBAAMC,EAAN,SAA8BC,GAAapT,EAEjD,IAAyB,QAArB,EAAAwB,KAAKsR,wBAAgB/E,IAAAA,OAAA,EAAAA,EAAEmF,MAAOA,GAAM1R,KAAK2R,yBAA2BA,EAAxE,CAEA3R,KAAK2R,uBAAyBA,EAE9B,IAAK,IAAMzG,KAAKlL,KAAKmR,YACnBjG,EAAEuG,SAAWvG,EAAEwG,KAAOA,EAElBxG,EAAEuG,WACJzR,KAAKsR,iBAAmBpG,EAEnB0G,GAAU1G,EAAE2G,kBAIrB7R,KAAKH,QAAQ,oBAdyF,CAevG,G,mCAED,WACEG,KAAKoR,uBAAwB,EAC7BpR,KAAKH,QAAQ,+BACd,G,mCAED,WACEG,KAAKoR,uBAAwB,EAC7BpR,KAAKH,QAAQ,+BACd,G,qCAED,WACE,OAAOG,KAAKoR,qBACb,G,kBAEO,WACNpR,KAAKmR,YAAYK,MAAK,CAACM,EAAGC,KACV,IAAVD,EAAEJ,GAAkB,GACV,IAAVK,EAAEL,IAEFI,EAAE9J,OAAS+J,EAAE/J,QAFQ,EAGrB8J,EAAE9J,SAAW+J,EAAE/J,OAAe,EAC3B,GAEV,M,yOA7EGkJ,CAFSrS,IAAAA,UAAkB,W,qjBAmFjCA,IAAAA,eAAuB,sBAAuBqS,ICnF9C,IAEMc,GAAAA,SAAAA,I,isBAGJ,WAAazT,EAAwBC,GAAwC,a,4FAAA,UAC3E,cAAMD,EAAQC,IAETyT,+BAAiCzT,EAEtC,EAAK8C,SALsE,CAM5E,C,qCAED,WACE,IAAM+C,EAAQrE,KAAKhB,SAA4CqF,KAEzD6N,EAASrT,IAAAA,IAAAA,SAAqB,SAAU,CAC5CiB,UAAW,OAASuE,EAAO,WAEvB8N,EAAWtT,IAAAA,IAAAA,SAAqB,OAAQ,CAC5CiB,UAAW,aAAeuE,IAU5B,OARA6N,EAAO3M,YAAY4M,GAGjBD,EAAO5R,MAAQN,KAAKyF,QAAQiD,SADjB,SAATrE,EACmC,aAEA,kBAGhC6N,CACR,G,yBAED,WACElS,KAAKiS,+BAA+BG,SACrC,G,oBAED,WACmBpS,KAAKiS,+BAA+BI,aAEvCrS,KAAKX,SAAS,gBACvBW,KAAKR,YAAY,eACvB,M,yOAxCGwS,CAFSnT,IAAAA,aAAqB,W,qjBA6CpCA,IAAAA,kBAA0B,kBAAmBmT,IAC7CnT,IAAAA,kBAA0B,sBAAuBmT,IC7CjD,IACMM,GAAAA,SAAAA,I,isBAEJ,WAAa/T,EAAwBC,GAAsC,O,4FAAA,qBACnED,EAAQC,EACf,C,qCAED,WACE,IAAM+T,EAAM1T,IAAAA,IAAAA,SAAqB,MAAO,CACtCiB,UAAW,iBAEP0S,EAAmB3T,IAAAA,IAAAA,SAAqB,MAAO,CACnDiB,UAAW,wBAMb,GAJAyS,EAAIhN,YAAYiN,IAGIxS,KAAKhB,SAA0C4L,WAClD,OAAO2H,EAExB,IAAME,EAAe5T,IAAAA,IAAAA,SAAqB,OAAQ,CAChDiB,UAAW,uBAEb0S,EAAiBjN,YAAYkN,GAE7B,IAAMC,EAAoB7T,IAAAA,IAAAA,SAAqB,OAAQ,CACrDiB,UAAW,wBAEP6S,EAAsB9T,IAAAA,IAAAA,SAAqB,OAAQ,CACvDiB,UAAW,0BAEP8S,EAAoB/T,IAAAA,IAAAA,SAAqB,QAC/C6T,EAAkBnN,YAAYoN,GAC9BD,EAAkBnN,YAAYqN,GAC9BJ,EAAiBjN,YAAYmN,GAE7B,IAAMG,EAAahU,IAAAA,IAAAA,SAAqB,OAAQ,CAC9CiB,UAAW,qBAEb0S,EAAiBjN,YAAYsN,GAE7B,IAAMC,EAAkBjU,IAAAA,IAAAA,SAAqB,OAAQ,CACnDiB,UAAW,sBAEPiT,EAAoBlU,IAAAA,IAAAA,SAAqB,OAAQ,CACrDiB,UAAW,wBAEPkT,EAAkBnU,IAAAA,IAAAA,SAAqB,QAC7CiU,EAAgBvN,YAAYwN,GAC5BD,EAAgBvN,YAAYyN,GAC5BR,EAAiBjN,YAAYuN,GAE7B,IAAMG,EAAYpU,IAAAA,IAAAA,SAAqB,OAAQ,CAC7CiB,UAAW,eAEPoT,EAAcrU,IAAAA,IAAAA,SAAqB,OAAQ,CAC/CiB,UAAW,iBAEb0S,EAAiBjN,YAAY2N,GAC7BV,EAAiBjN,YAAY0N,GAE7B,IAAME,EAAatU,IAAAA,IAAAA,SAAqB,MAAO,CAC7CiB,UAAW,wBAEPsT,EAAiBvU,IAAAA,IAAAA,SAAqB,OAAQ,CAClDiB,UAAW,gBACXuT,YAAa,SAiDf,OA9CAF,EAAW5N,YAAY6N,GACvBb,EAAIhN,YAAY4N,GAEhBnT,KAAKyF,QAAQvG,GAAG,WAAW,CAACwG,EAAYC,KAEtC,IAAKA,EAIH,OAHAwN,EAAWrT,UAAY,8BACvB0S,EAAiB1S,UAAY,uBAK/B,IAAMgG,EAAWH,EAAKI,IAChBC,EAAYL,EAAKM,KAEjBC,EAAgB3B,EAAMuB,EAASI,cAAgBF,EAAUE,eACzDE,EAAc7B,EAAMuB,EAASM,YAAcJ,EAAUI,aACrDC,EAAkB9B,EAAMuB,EAASQ,WAAaN,EAAUM,YACxDC,EAAgBhC,EAAMuB,EAASU,SAAWR,EAAUQ,UACpDC,EAAWX,EAASW,SAI1B,GAFA+L,EAAiBlS,MAAQN,KAAKzB,SAASmK,SAAS,sBAAwBrC,EAAgBF,KAAK,KAAO,KAEhF,qBAAhBR,EAAKE,OAA+B,CACtC,IAAMe,EAAuBrC,EAAMyB,EAAUM,YAAYH,KAAK,KACxDU,EAAsBtC,EAAMuB,EAASQ,YAAYH,KAAK,KAE5DqM,EAAiBlS,OACf,MAAQN,KAAKzB,SAASmK,SAAS,kBAAoB9B,EAAnD,QACQ5G,KAAKzB,SAASmK,SAAS,gBAAkB7B,EAAsB,IAC1E,CACD2L,EAAiBlS,OAASN,KAAKzB,SAASmK,SAAS,oBAAsBnC,EAAcJ,KAAK,KAE1FwM,EAAoBU,YAAcnN,EAAc,GAChD0M,EAAkBS,YAAc,IAAMnN,EAAc,GAEpD6M,EAAkBM,YAAcjN,EAAY,GAC5C4M,EAAgBK,YAAc,IAAMjN,EAAY,GAEhD8M,EAAYG,YAAc5M,EAASqH,WACnCmF,EAAUI,YAAc,KAAO5M,EAAW,EAAIzG,KAAKzB,SAASmK,SAAS,SAAW1I,KAAKyF,QAAQiD,SAAS,SAEtGyK,EAAWrT,UAAY,sBACvB0S,EAAiB1S,UAAY,wBAA7B,IAGKyS,CACR,M,yOAnHGD,CADSzT,IAAAA,aAAqB,W,y4BAuHpCA,IAAAA,kBAA0B,gBAAiByT,IClH3BzT,IAAAA,aAAqB,UAApC,IAQOyU,GAAAA,SAAAA,I,isBAGJ,WAAY/U,EAAcC,GAAa,a,4FAAA,UACrC,cAAMD,EAAQC,IAET+U,YAAY,eAHoB,CAItC,C,qCAED,WACC,OAAOvT,KAAKwT,cACZ,G,yBAED,SAAY9N,GACX1F,KAAKyF,QAAQ5F,QAAQ,0BAA2B6F,EAChD,G,0BAEO,WAEP,IAAMoF,EAAK,+CAIX,OAFAA,EAAG2I,UAAUC,IAAI,kCAEV5I,CACR,M,yOAxBIwI,CAPYzU,IAAAA,aAAqB,e,y4BAmCvCA,IAAAA,kBAA0B,0BAA2ByU,IC3CvD,IAAMK,GAAY9U,IAAAA,aAAqB,a,y4BAmCvC8U,GAAUC,kBAAkB,0BAjCtBC,SAAAA,I,isBAEJ,WAAatV,EAAwBC,GAAkC,a,4FAAA,UACrE,cAAMD,EAAQC,IAETU,GAAGX,EAAQ,WAAY,EAAK+C,QAHoC,CAItE,C,qCAED,WACE,OAAO,8CAAe,MAAO,CAC3BxB,UAAW,oBACXC,UAAW,wCAAwCC,KAAK0I,SAAS,+BAEpE,G,qBAED,WACE,6CACD,G,oBAED,WAUC,M,yOA7BGmL,CAAgCF,KCDtC,IACMG,GAAAA,SAAAA,I,isBAIJ,WAAavV,EAAwBC,GAAiC,O,4FAAA,SACpE,cAAMD,EAAQC,GAEd,IAAMuV,EPUV,WACE,IAAMvP,EAAQ0H,EAAgB,mBAC9B,OAAI1H,SAAwD,SAAVA,CAGnD,COfmBwP,GAHoD,OAIpD,IAAZD,IACF,EAAKxV,SAASc,SAASyU,EAAcG,oBAErC,EAAKC,uBAGP,EAAKX,YAAY,gBAEjB,EAAKhV,SAAS4V,eAAiBJ,EAZqC,CAarE,C,0CAED,WACE,MAAO,uBAAuB,qDAC/B,G,iCAED,WACE,IAAMI,EAAiBnU,KAAKoU,mBAG1BpU,KAAKuT,YADHY,EACe,cAEA,gBPId9H,GAAgB,kBODF8H,EPC6BrG,YOChD9N,KAAKyF,QAAQ5F,QAAQ,gBAAiBsU,EACvC,G,yBAED,WACEnU,KAAKyF,QAAQ4O,YAAYP,EAAcG,oBAEvCjU,KAAKkU,qBACN,G,8BAEO,WACN,OAAOlU,KAAKyF,QAAQ6O,SAASR,EAAcG,mBAC5C,M,yOA7CGH,CADSjV,IAAAA,aAAqB,W,y4BAGViV,GAAAA,mBAAqB,sBA8C/CjV,IAAAA,kBAA0B,gBAAiBiV,IClD3C,IAMMS,GAAAA,SAAAA,I,isBAOJ,WAAahW,EAAwBC,GAAmC,a,4FAAA,SACtEA,EAAQgW,YAAa,GAErB,cAAMjW,EAAQC,IAET4S,uBAAwB,EAC7B,EAAKqD,qBAAuB,GAE5B,EAAKC,aAAelW,EAAQkW,aAC5B,EAAKzJ,MAAQzM,EAAQyM,MAErB1M,EAAOoW,sBAAsBzV,GAAG,qBAAqB,IAAM,EAAK0V,qBAGrC,IAAvB,EAAKF,cACPnW,EAAOoW,sBAAsBzV,GAAG,gCAAgC,IAAM,EAAK2V,yBAfP,CAiBvE,C,wCAED,SAAanP,IAEwB,IAA/B1F,KAAKoR,wBAA0D,IAAvBpR,KAAK0U,eAEjD,iDAAkBhP,GAElB1F,KAAKzB,SAASoW,sBAAsBG,OAAO,CAAEpD,GAAI1R,KAAK0U,aAAc9C,UAAU,IAC/E,G,6BAED,W,MACE,IAAMmD,EAAqB/U,KAAKzB,SAASoW,sBAAsBpD,eAEpC,IAAvBvR,KAAK0U,eACP1U,KAAKyU,qBAAoF,QAA7D,EAAAzU,KAAKzB,SAASoW,sBAAsBK,iCAAyBzI,IAAAA,OAAA,EAAAA,EAAEtB,OAG7FjL,KAAKyR,SAASzR,KAAK0U,eAAiBK,EAAmBrD,GACxD,G,kCAED,WACE,IAAMqC,EAAU/T,KAAKzB,SAASoW,sBAAsBM,2BAGpC,IAAZlB,EACF/T,KAAKX,SAAS,YAEdW,KAAKR,YAAY,YAGnBQ,KAAKoR,sBAAwB2C,CAC9B,G,sBAED,WACE,OAA2B,IAAvB/T,KAAK0U,aACA1U,KAAKiL,MAAQ,WAAajL,KAAKyU,qBAAuB,WAGxDzU,KAAKiL,KACb,M,yOAhEGsJ,CANW1V,IAAAA,aAAqB,a,y4BAwEtCA,IAAAA,kBAA0B,qBAAsB0V,ICvEhD,IAAMW,GAAOrW,IAAAA,aAAqB,QAE5BsW,GAAAA,SAAAA,I,isBAGJ,WAAa5W,EAAwBC,GAAmC,a,4FAAA,UACtE,cAAMD,EAAQC,IAET+U,YAAY,WAEjBhV,EAAOoW,sBAAsBzV,GAAG,oBAAoB,IAAM,EAAKkW,mBAG/D7W,EAAOoW,sBAAsBzV,GAAG,qBAAqB,KACnDuC,YAAW,IAAM,EAAK5B,QAAQ,iBAA9B,IAToE,CAWvE,C,oCAED,WACE,IAAMiL,EAAK,+CAQX,OANA9K,KAAKqV,SAAWxW,IAAAA,IAAAA,SAAqB,MAAO,CAC1CiB,UAAW,yBAGbgL,EAAGvF,YAAYvF,KAAKqV,UAEbvK,CACR,G,kCAED,WACE9K,KAAK8K,KAAKlK,aAAa,aAAc,UACtC,G,wBAED,WACE,OAAO,IAAIsU,GAAKlV,KAAKyF,QACtB,G,2BAED,WACE,OAAO,oDAAwB,wBAChC,G,kCAED,WACE,MAAO,0BAA4B,0DACpC,G,8BAEO,SAAkB6P,GACxBA,EAAUpW,GAAG,SAAS,KACpB,IAAMqW,EAAWvV,KAAKwV,KAAKD,WAE3B,IAAK,IAAME,KAASF,EACdD,IAAcG,GACfA,EAA2BhE,UAAS,EAExC,GAEJ,G,4BAEO,WACN,IAAK,IAAM9M,KAAK3E,KAAKzB,SAASoW,sBAAsBe,iBAAkB,CACpE,IAAMzK,EAAoB,OAAZtG,EAAEsG,MACZjL,KAAKzB,SAASmK,SAAS,cACvB/D,EAAEsG,MAENjL,KAAKwV,KAAK1T,SAAS,IAAIyS,GACrBvU,KAAKyF,QACL,CACEiM,GAAI/M,EAAE+M,GAAK,GACXgD,aAAc/P,EAAE+M,GAChBzG,QACAwG,SAAU9M,EAAE8M,WAGjB,CAED,IAAK,IAAMkE,KAAK3V,KAAKwV,KAAKD,WACxBvV,KAAK4V,iBAAiBD,GAGxB3V,KAAKH,QAAQ,cACd,I,4OA9EGsV,CADatW,IAAAA,aAAqB,e,y4BAkFxCA,IAAAA,kBAA0B,uBAAwBsW,ICpFlD,IAAMxB,GAAY9U,IAAAA,aAAqB,a,84BA8BvC8U,GAAUC,kBAAkB,iBA5BtBiC,SAAAA,I,isBACJ,WAAatX,GAAsB,a,4FAAA,UACjC,cAAMA,IAED+G,OAH4B,CAIlC,C,qCAMD,WACE,IAAMwQ,EAAW9V,KAAK0R,KAChBqE,EAAgB,yBAA2BD,EAC3CE,EAAsB,+BAAiCF,EAE7D,OAAO,8CAAe,MAAO,CAC3BhW,UAAW,wCACXC,UAAW,GACXkW,UAAW,GACV,CACDC,KAAM,SACN,kBAAmBH,EACnB,mBAAoBC,GAEvB,M,yOAzBGH,CAAuBlC,KCG7B,IAAMwC,GAAWtX,IAAAA,aAAqB,YAChCyW,GAAYzW,IAAAA,aAAqB,aAOjCuX,GAAAA,SAAAA,I,isBAkBJ,WAAa7X,EAAwBC,GAAiC,O,4FAAA,UACpE,cAAMD,EAAQC,IAETqS,eAAiBrS,EAAQ6X,WAC9B,EAAKvF,OAAS,EAAKD,eAAeC,OAClC,EAAKwF,SAAW,EAAKzF,eAAe2E,KACpC,EAAKe,MAAQ,EAAKzF,OAAO0F,SAAS,iBAClC,EAAKC,WAAa,EAAKF,MAAMC,SAAS,sBACtC,EAAKE,aAAe,EAAKD,WAAW3L,KAEpC,EAAK6L,KAAO,KAGZ,EAAKC,WAAa,WAElB,IAAMC,EAAc9S,EAAYvF,EAAQsY,OAClCC,EAAmBlY,IAAAA,aAAqBgY,GAE9C,IAAKE,EACH,MAAM,IAAIC,MAAM,aAAaH,oBAG/B,IAAMI,EAAa9T,OAAO+T,OAAO,CAAC,EAAG1Y,EAAS,CAAEsY,MAAOtY,EAAQ6X,WAAYA,WAAY,QAEvF,EAAKc,QAAU,IAAIJ,EAAiB,EAAKxY,SAAU0Y,GACnD,IAAMG,EAAe,EAAKD,QAAQE,gBAAgBC,MAAM,KAAK,GAzBO,OA0BpE,EAAKC,mBAAmBzX,WAAa,IAAMsX,EAE3C,EAAKI,gBAELjZ,EAAOsD,OAAM,KAEXJ,YAAW,KAEJ,EAAKgE,UAEV,EAAKgS,QAGLlZ,EAAOW,GAAG,aAAc,EAAKwY,qBAET,mBAAhBb,GAEFtY,EAAOW,GAAG,mBAAmB,KAC3BuC,YAAW,KACT,EAAK8V,mBAAmBxX,UAAY,GACpC,EAAKwX,mBAAmBhS,YAAY,EAAK4R,QAAQ3B,KAAK1K,MACtD,EAAKxJ,SACL,EAAKqW,iBAAL,GACC,EALH,IASJ,EAAKC,QAAL,GACC,EAtBH,IAhCkE,CAwDrE,C,yCAED,WACE5X,KAAK0X,oBAAsB1X,KAAK6X,eAAenW,KAAK1B,MACpDA,KAAK8X,qBAAuB9X,KAAK+X,gBAAgBrW,KAAK1B,KACvD,G,4BAED,SAAgB0F,GACd,IAAIsS,EAAS,KAGXA,EADiB,QAAftS,EAAMrB,KACCqB,EAAMsS,OAENtS,EAAMuS,eAAiBvS,EAAMsS,QAGpCA,aAAM,EAANA,EAAQvE,UAAUyE,SAAS,oBAC7BlY,KAAKmY,gBAMP1W,YAAW,IAAMzB,KAAKsB,OAAOoE,IAAQ,GAIrC1F,KAAKmX,QAAQ3B,KAAKhW,YAAY,cAC/B,G,sBAMD,WACE,IAAMsL,EAAKjM,IAAAA,IAAAA,SAAqB,KAAM,CACpCiB,UAAW,gBACXmW,UAAW,IAmBb,OAhBAjW,KAAKoY,wBAA0BvZ,IAAAA,IAAAA,SAAqB,MAAO,CACzDiB,UAAW,gCAGbgL,EAAGvF,YAAYvF,KAAKoY,yBAEpBpY,KAAKqY,wBAA0BxZ,IAAAA,IAAAA,SAAqB,MAAO,CACzDiB,UAAW,gCAGbgL,EAAGvF,YAAYvF,KAAKqY,yBAEpBrY,KAAKuX,mBAAqB1Y,IAAAA,IAAAA,SAAqB,MAAO,CACpDiB,UAAW,0BAGNgL,CACR,G,yBAOD,SAAapF,GASX,GARA1F,KAAK4W,WAAa,UAElB/X,IAAAA,IAAAA,YAAwBmB,KAAK8K,KAAM,QAEnC,iDAAkBpF,GAEjB1F,KAAKsW,SAASxL,KAAqBpL,MAAM4Y,QAAU,IAEhDzZ,IAAAA,IAAAA,SAAqBmB,KAAKuX,mBAAoB,cAAe,CAC/D1Y,IAAAA,IAAAA,YAAwBmB,KAAKuX,mBAAoB,cAGjD9V,YAAW,KACTzB,KAAKuX,mBAAmB7X,MAAM4Y,QAAU,IACxCtY,KAAKuX,mBAAmB7X,MAAM6Y,YAAc,KAA5C,GACC,GAEHvY,KAAK6Q,eAAe2H,cAAcxY,KAAK2W,MAEvC,IAAM8B,EAAazY,KAAKmX,QAAQ3B,KAAKD,WAAW,GAC5CkD,GAAYA,EAAW9H,OAC5B,MACC9R,IAAAA,IAAAA,SAAqBmB,KAAKuX,mBAAoB,aAEjD,G,8BAOD,WACE,IAAMrF,EAASlS,KAAKmX,QAAQ3B,KAAK1T,SAAS,WAAY,CAAC,EAAG,GAE1DoQ,EAAO7S,SAAS,mBACf6S,EAAOpH,KAAqB/K,UAAYC,KAAKzB,SAASmK,SAAS1I,KAAKmX,QAAQ5D,cAC9E,G,2BAOD,SAAemF,EAAcrU,EAAWsU,GAAkC,IAAnBC,EAAmB,uDAAV,WACxDC,EAAS,CAAE,SAAU,MAAO,KAAM,IAAK,IAE7C,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAOjU,OAAQkU,IAC5BD,EAAOC,KACVzU,EAAOA,EAAK0U,eAGC,aAAXH,EACFF,EAAQpK,iBAAiBuK,EAAOC,GAAKzU,EAAMsU,GAAU,GACjC,gBAAXC,GACTF,EAAQM,oBAAoBH,EAAOC,GAAKzU,EAAMsU,GAAU,EAG7D,G,6BAED,SAAiBjT,GACY,iBAAvBA,EAAMuT,cAIc,aAApBjZ,KAAK4W,aAEP/X,IAAAA,IAAAA,SAAqBmB,KAAKuX,mBAAoB,cAG9CvX,KAAKuX,mBAAmB7X,MAAM4Y,QAAU,IAE3C,G,mBAED,WACEzZ,IAAAA,IAAAA,SAAqBmB,KAAKuX,mBAAoB,cAC9CvX,KAAKuX,mBAAmB7X,MAAM4Y,QAAU,IACxCtY,KAAKkZ,WACN,G,0BAED,WACE,IAAMC,EAAanZ,KAAKsW,SAASxL,KACjC9K,KAAK4W,WAAa,WAClB5W,KAAKsW,SAASvP,OACdoS,EAAWzZ,MAAM4Y,QAAU,IAG3B,IAAMc,EAAcpZ,KAAKsW,SACzBtW,KAAK6Q,eAAe2H,cAAc,CAAEY,EAAYC,MAAOD,EAAYpR,SAGnEvG,YAAW,KAGTzB,KAAKkZ,YACLC,EAAWzZ,MAAM4Y,QAAU,IAE3B,IAAMG,EAAazY,KAAKsW,SAASf,WAAW,GACxCkD,GAAYA,EAAW9H,OAAX,GACf,EACJ,G,mBAED,WACE3Q,KAAKmX,QAAQjY,GAAG,gBAAgB,KAC9Bc,KAAKsB,QAAL,IAEFtB,KAAKmX,QAAQjY,GAAG,eAAe,KAC7Bc,KAAK2X,kBACL3X,KAAKsZ,UACLtZ,KAAKsB,QAAL,IAGFtB,KAAKoY,wBAAwBrY,UAAYC,KAAKzB,SAASmK,SAAS1I,KAAKmX,QAAQ5D,eAC7EvT,KAAKuX,mBAAmBhS,YAAYvF,KAAKmX,QAAQ3B,KAAK1K,MACtD9K,KAAK0W,aAAanR,YAAYvF,KAAKuX,oBACnCvX,KAAKsB,SAELtB,KAAKuZ,mBACLvZ,KAAKsZ,UACLtZ,KAAK2X,kBAGL3X,KAAKwZ,cACHxZ,KAAKuX,mBACL,gBACAvX,KAAK8X,qBACL,WAEH,G,oBAED,SAAQpS,GACN,IAAIsS,EAAsB,KACpBb,EAAUnX,KAAKmX,QAAQsC,OAW7B,GATI/T,GAAwB,QAAfA,EAAMrB,KACjB2T,EAAStS,EAAMsS,OACNtS,IACTsS,EAAStS,EAAMuS,eAMD,2BAAZd,EAAsC,CACxC,IAAMuC,EAAQ1Z,KAAKmX,QAAgB9B,SAAStV,UAE5C0B,YAAW,KACTzB,KAAKqY,wBAAwBtY,UAAY2Z,CAAzC,GACC,IACJ,MAEC,IAAK,IAAMC,KAAe3Z,KAAKmX,QAAQ3B,KAAKoE,UAC1C,GAAMD,aAAuBrE,IAIzBqE,EAAYrF,SAAS,gBAAiB,CACxC,IAAMuF,EAAqBF,EAG3B,GAA2C,mBAAhCE,EAAmBC,SAAyB,CACrD9Z,KAAKqY,wBAAwBtY,UAAY8Z,EAAmBC,WAC5D,KACD,CAED9Z,KAAKqY,wBAAwBtY,UAAYC,KAAKzB,SAASmK,SAASmR,EAAmB7a,SAASiM,MAC7F,CAID+M,IAAWA,EAAOvE,UAAUyE,SAAS,oBACvClY,KAAK6Q,eAAekJ,YAEvB,G,6BAED,WACE,IAAK,IAAMC,KAAQha,KAAKmX,QAAQ3B,KAAKD,WAC7ByE,aAAgB1E,IAGtB0E,EAAK9a,GAAG,CAAE,MAAO,SAAWc,KAAK0X,oBAEpC,G,qBAID,WACE1X,KAAK8Q,OAAOtR,YAAY,cACxBX,IAAAA,IAAAA,YAAwBmB,KAAKuX,mBAAoB,cACjDvX,KAAK2W,KAAO3W,KAAK6Q,eAAeoJ,iBAAiBja,KAAKuX,oBACtDvX,KAAKkZ,YACLlZ,KAAK8Q,OAAOzR,SAAS,cACrBR,IAAAA,IAAAA,SAAqBmB,KAAKuX,mBAAoB,aAC/C,G,uBAED,WACE,IAAKvX,KAAK2W,KAAM,OAEhB,IAAQ0C,GAAUrZ,KAAK2W,KAEvB3W,KAAKuX,mBAAmB7X,MAAM6Y,YAAc,IAAIc,KACjD,G,yBAKD,WAEOrZ,KAAK8K,MAINjM,IAAAA,IAAAA,SAAqBmB,KAAK8K,KAAM,UAClCjM,IAAAA,IAAAA,SAAqBmB,KAAKuX,mBAAoB,cAC9C1Y,IAAAA,IAAAA,YAAwBmB,KAAK8K,KAAM,QAEtC,I,4OAlWGsL,CAAyBD,I,84BAsW9BC,GAAyBhT,UAAU8W,cAAgB,SACpDrb,IAAAA,kBAA0B,mBAAoBuX,IC/W9C,IAAM+D,GAAStb,IAAAA,aAAqB,UAC9BqW,GAAOrW,IAAAA,aAAqB,QAC5B8U,GAAY9U,IAAAA,aAAqB,a,w+BAyQvC8U,GAAUC,kBAAkB,iBAhQtBwG,SAAAA,I,isBAcJ,WAAa7b,EAAwBC,GAA+B,a,4FAAA,UAClE,cAAMD,EAAQC,IAET6b,sBAAwB7b,EAE7B,EAAK+U,YAAY,YAEjB,EAAKzC,OAAS,EAAKvS,SAASuD,SAAS,kBACrC,EAAKwY,SAAW,EAAKxJ,OAAOhG,KAC5B,EAAK0K,KAAO,KACZ,EAAKe,MAAQ,EAAKzF,OAAOhP,SAAS,iBAClC,EAAK2U,WAAa,EAAKF,MAAMzU,SAAS,sBAEtC,EAAKzC,SAAS,gBACd,EAAKyL,KAAKlK,aAAa,aAAc,mBAGrC,EAAK2Z,uBAAyB,EAAKC,kBAAkB9Y,KAAvB,OAC9B,EAAK+Y,2BAA6B,EAAKC,sBAAsBhZ,KAA3B,OAClC,EAAKiZ,qBAAuB,EAAKC,gBAAgBlZ,KAArB,OAC5B,EAAKmZ,oBAAsB,EAAKC,eAAepZ,KAApB,OAE3B,EAAKqZ,YACL,EAAKC,aAGL,EAAKzc,SAASuC,IAAI,QAAQ,IAAM,EAAKiZ,eA1B6B,CA2BnE,C,4CAED,SAAiBrU,G,UACf,IAAMgT,EAAUhT,EAAMsS,QAEA,QAAlB,EAAAU,aAAO,EAAPA,EAASjF,iBAASlH,IAAAA,OAAA,EAAAA,EAAE2L,SAAS,mBAAoD,QAAjC,EAAsB,QAAtB,EAAAQ,aAAO,EAAPA,EAASuC,qBAAaC,IAAAA,OAAA,EAAAA,EAAEzH,iBAAS0H,IAAAA,OAAA,EAAAA,EAAEjD,SAAS,kBAI3FlY,KAAK8Q,OAAOwD,SAAS,eACxBtU,KAAK+Z,YAER,G,mCAED,SAAuBrU,EAAY+T,GACjC,QAAa3R,IAAT2R,EAAoB,CACtB,IAAMlE,EAAWvV,KAAKwV,KAAKD,WAE3B,KAAOA,EAAS3Q,OAAS,GACvB2Q,EAAS,GAAG6F,UACZpb,KAAKwV,KAAK6F,YAAY9F,EAAS,IAGjCvV,KAAKX,SAAS,aACf,KAAM,CACL,IAAM2a,EAAOha,KAAKwV,KAAKgB,SAASiD,GAE5BO,IACFA,EAAKoB,UACLpb,KAAKwV,KAAK6F,YAAYrB,GAEzB,CAEDha,KAAK+Z,aAE6C,IAA9C/Z,KAAKqa,sBAAsBiB,QAAQ1W,QACrC5E,KAAKX,SAAS,aAEjB,G,qBAED,WACEsK,SAASqP,oBAAoB,QAAShZ,KAAK2a,sBAEvC3a,KAAKub,cACPzR,OAAOkP,oBAAoB,OAAQhZ,KAAK2a,qBAE3C,G,+BAED,SAAmBjV,EAAYC,GAC7B,IAAQmR,EAAOtY,GAAYmH,EAE3B3F,KAAKwb,YAAY1E,EAAOtY,GACxBwB,KAAKR,YAAY,aAClB,G,4BAED,WACOQ,KAAK8Q,OAAOwD,SAAS,eACxBtU,KAAK+Z,YAER,G,wBAED,WACEpQ,SAAS2E,iBAAiB,QAAStO,KAAK2a,sBACpC3a,KAAKub,cACPzR,OAAOwE,iBAAiB,OAAQtO,KAAK2a,sBAGvC3a,KAAKzB,SAASW,GAAG,kBAAmBc,KAAKua,wBACzCva,KAAKzB,SAASW,GAAG,sBAAuBc,KAAKya,4BAC7Cza,KAAKzB,SAASW,GAAG,eAAgBc,KAAK6a,oBACvC,G,2BAED,WACE,MAAO,qBAAqB,qDAC7B,G,yBAED,WACM7a,KAAK8Q,OAAOwD,SAAS,cACvBtU,KAAKyb,aAELzb,KAAK+Z,YAER,G,wBAED,WACE/Z,KAAKzB,SAASmd,WAAWC,eAExB3b,KAAKwV,KAAK1K,KAAqBpL,MAAM4Y,QAAU,IAEhDtY,KAAK8Q,OAAO/J,OACZ/G,KAAK8K,KAAKlK,aAAa,gBAAiB,QAExCZ,KAAKwY,cAAcxY,KAAKia,iBAAiBja,KAAKwV,OAE9C,IAAMiD,EAAazY,KAAKwV,KAAKD,WAAW,GACpCkD,GAAYA,EAAW9H,OAC5B,G,wBAED,WACE3Q,KAAKyF,QAAQiW,WAAWE,eAExB5b,KAAK8Q,OAAOxL,OACZtF,KAAK8K,KAAKlK,aAAa,gBAAiB,SAExCZ,KAAKwY,cAAcxY,KAAKia,iBAAiBja,KAAKwV,OAC7CxV,KAAKwV,KAAK1K,KAAqBpL,MAAM4Y,QAAU,IAChDtY,KAAK6b,eACN,G,8BAED,SAAkBnD,GAChB,IAAIW,EAAgB,KAChBrR,EAAiB,KAGrB,GAAI0Q,aAAmB/E,GAAW,CAChC,IAAM7I,EAAK4N,EAAQ5N,KAEnBuO,EAAQvO,EAAGgR,YACX9T,EAAS8C,EAAGiR,aAEXrD,EAAgBW,MAAQA,EACxBX,EAAgB1Q,OAASA,CAC3B,MACCqR,EAAQX,EAAQoD,YAChB9T,EAAS0Q,EAAQqD,aAGnB,MAAO,CAAE1C,EAAOrR,EACjB,G,2BAED,YAA0C,IAAzBqR,EAAOrR,GAAkB,EACxC,GAAsB,iBAAXA,EACT,OAGF,IAAMgU,EAAShc,KAAKqa,sBAAsB4B,MAAMC,gBAC1CC,EAAanc,KAAKzB,SAASuM,KAAqBiR,aAAeC,EAE/DI,EAAUpc,KAAKuW,MAAMzL,KAEvB9C,EAASmU,GACXnU,EAASmU,EACT9C,GAAS,GACT+C,EAAQ1c,MAAMyc,UAAY,GAAGnU,OACQ,KAA5BoU,EAAQ1c,MAAMyc,YACvBC,EAAQ1c,MAAMyc,UAAY,IAG5Bnc,KAAKsa,SAAS5a,MAAM2Z,MAAQ,GAAGA,MAC/BrZ,KAAKsa,SAAS5a,MAAMsI,OAAS,GAAGA,KACjC,G,uBAED,WACEhI,KAAKwV,KAAO,IAAIN,GAAKlV,KAAKzB,UAC1ByB,KAAKwV,KAAKnW,SAAS,iBACnB,IAAMic,EAAUtb,KAAKqa,sBAAsBiB,QAE3C,GAAuB,IAAnBA,EAAQ1W,OAGV,OAFA5E,KAAKX,SAAS,mBACdW,KAAKyW,WAAW3U,SAAS9B,KAAKwV,MAIhC,IAAK,IAAMsB,KAASwE,EAClBtb,KAAKwb,YAAY1E,EAAO9W,KAAKqa,uBAG/Bra,KAAKyW,WAAW3U,SAAS9B,KAAKwV,KAC/B,G,yBAED,SAAasB,EAAYtY,GASvBA,EAAQib,KAAO1V,EAAY+S,GAE3B,IAAMG,EAAa9T,OAAO+T,OAAO,CAAC,EAAG1Y,EAAS,CAAEsY,QAAOT,WAAYrW,OAC7Dqc,EAAmB,IAAIjG,GAAiBpW,KAAKzB,SAAU0Y,GAE7DjX,KAAKwV,KAAK1T,SAASua,GAInBA,EAAiBnd,GAAG,QAASL,IAAAA,KAAamB,KAAMA,KAAKsc,eAGrDD,EAAiBnd,GAAG,SApBA,WACdL,IAAAA,IAAAA,SAAqBmB,KAAKuc,IAAK,QACjC1d,IAAAA,IAAAA,YAAwBmB,KAAKuc,IAAK,QAElC1d,IAAAA,IAAAA,SAAqBmB,KAAKuc,IAAK,OAElC,GAeF,G,2BAED,WACE,IAAK,IAAMC,KAAaxc,KAAKwV,KAAKD,WAC/BiH,EAA+B5E,OAEnC,G,0BAKD,WACE,IAAK,IAAM4E,KAAaxc,KAAKwV,KAAKD,WAC/BiH,EAA+BC,aAEnC,G,wBAED,WACE,OAAO3S,OAAOkE,OAASlE,OAAO4S,GAC/B,M,yOA5PGtC,CAAuBD,KChB7B,IAAMxG,GAAY9U,IAAAA,aAAqB,a,w+BAavC8U,GAAUC,kBAAkB,gBAXtB+I,SAAAA,I,6xBAEJ,WACE,OAAO,8CAAe,MAAO,CAC3B7c,UAAW,qBACXC,UAAW,GACXkW,UAAW,GAEd,M,yOARG0G,CAAsBhJ,KCF5B,IAAMA,GAAY9U,IAAAA,aAAqB,a,y4BAavC8U,GAAUC,kBAAkB,qBAXtBgJ,SAAAA,I,6xBAEJ,WACE,OAAO,8CAAe,MAAO,CAC3B9c,UAAW,2BACXC,UAAW,GACXkW,UAAW,GAEd,M,yOARG2G,CAA2BjJ,KCAjC,IAEMkJ,GAAAA,SAAAA,I,isBAIJ,WAAate,EAAwBC,GAAgE,O,4FAAA,qBAC7FD,EAAQC,EACf,C,qCAED,WACEwB,KAAK8c,QAAL,8BAAA9c,MAAA,KAAAA,KAA8B,MAAO,CACnCF,UAAW,sBACXC,UAAW,GACXkW,UAAW,IAGb,IAAM8G,EAAO,8CAAe,MAAO,CACjCjd,UAAW,oBACXC,UAAW,GACXkW,UAAW,IAcb,OAXAjW,KAAKgd,oBAAL,8BAAAhd,MAAA,KAAAA,KAA0C,MAAO,CAC/CF,UAAW,oBACXC,UAAW,GACXkW,UAAW,IAGbjW,KAAK8c,QAAQvX,YAAYwX,GACzB/c,KAAK8c,QAAQvX,YAAYvF,KAAKgd,qBAE9Bhd,KAAKsB,SAEEtB,KAAK8c,OACb,G,oBAED,WACE,IAAMte,EAAUwB,KAAKhB,SAErBgB,KAAKgd,oBAAoBjd,UAAYvB,EAAQye,qBAAuB,IAAMze,EAAQ0e,SAASC,aAC3Fnd,KAAK8c,QAAQxc,MAAQN,KAAKzB,SAASmK,SAAS,gBAAiB,CAAElK,EAAQ0e,SAASE,aACjF,G,yBAED,WACuBpd,KAAKqd,kBACbC,MACd,G,6BAEO,WACN,OAAQtd,KAAKhB,SAAiBue,YAC/B,M,yOAjDGV,CAFqBhe,IAAAA,aAAqB,uB,y4BAsDhDA,IAAAA,kBAA0B,iBAAkBge,ICrD5C,IAAMlJ,GAAY9U,IAAAA,aAAqB,aAEjC2e,GAAAA,SAAAA,I,isBAGJ,WAAajf,EAAwBC,GAA6B,a,4FAAA,UAChE,cAAMD,EAAQC,IAETif,gBAEL,EAAK/E,QAAUla,EAAQka,QAEvB,EAAKxZ,GAAG,CAAE,QAAS,QAAS,IAAM,EAAKwe,uBACvC,EAAKxe,GAAG,WAAWwG,GAAS,EAAKiY,cAAcjY,KARiB,CASjE,C,qCAED,WACE,IAAMlH,EAAUwB,KAAKhB,SAEf4e,EAAK,8CAAe,KAAM,CAC9B9d,UAAW,yBACXC,UAAW,KAGRvB,EAAQka,QAAQmF,OACnBD,EAAGnK,UAAUC,IAAI,gBAGnB,IAAMoK,EAAgB,8CAAe,MAAO,CAC1Che,UAAW,wBAGPie,EAAW,8CAAe,MAAO,CACrCje,UAAW,gBACXC,UAAWvB,EAAQka,QAAQqF,WAY7B,OATAD,EAAcvY,YAAYwY,GAC1BH,EAAGrY,YAAYuY,GAEXtf,EAAQka,QAAQmF,MAClB7d,KAAKge,oBAAoBJ,EAAIE,EAAetf,GAE5CwB,KAAKie,sBAAsBL,GAGtBA,CACR,G,yBAED,SAAanM,GACPA,EAAUzR,KAAKX,SAAS,gBACvBW,KAAKR,YAAY,eACvB,G,wBAED,WACE,OAAOQ,KAAK0Y,OACb,G,iCAEO,SAAqBkF,EAAiBE,EAA4Btf,GACxE,IAAM0f,EAAe1f,EAAQka,QAEvBna,EAAS,8CAAe,MAAO,CACnCuB,UAAW,gBAGbge,EAAcvY,YAAYhH,GAE1B,IAAM4f,EAAY,8CAAe,MAAO,CACtCC,IAAKtU,OAAOuU,SAASC,OAASJ,EAAaL,MAAMU,gBAG7CC,EAAY,8CAAe,MAAO,CACtC1e,UAAW,eAGPQ,EAAQ,8CAAe,MAAO,CAClCP,UAAWme,EAAaL,MAAMpE,KAC9B3Z,UAAW,UAGP2e,EAAU,8CAAe,MAAO,CACpC1e,UAAWme,EAAaL,MAAMY,QAAQrB,YACtCtd,UAAW,YAMb,GAHA0e,EAAUjZ,YAAYjF,GACtBke,EAAUjZ,YAAYkZ,GAElBP,EAAaQ,gBAAkBR,EAAaS,cAAe,CAC7D,IAAIjF,EAAO,GAEPwE,EAAaQ,iBAAgBhF,GAAQtX,EAAc8b,EAAaQ,iBAChER,EAAaS,gBAAejF,GAAQ,MAAQtX,EAAc8b,EAAaS,gBAE3E,IAAMC,EAAa,8CAAe,MAAO,CACvC7e,UAAW2Z,EACX5Z,UAAW,eAGb0e,EAAUK,OAAOD,EAClB,CAEDhB,EAAGiB,OAAOV,GACVP,EAAGiB,OAAOL,EACX,G,mCAEO,SAAuBZ,GAC7B,IAAMkB,EAAQ,8CAAe,MAAO,CAClChf,UAAW,mBACXC,UAAWC,KAAKzB,SAASmK,SAAS,uBAGpCkV,EAAGrY,YAAYuZ,EAChB,G,2BAEO,SAAepZ,GACF,UAAfA,EAAMqZ,MAAmC,UAAfrZ,EAAMqZ,MAClC/e,KAAK0d,oBAER,G,gCAEO,WACU1d,KAAKhB,SAEbggB,WACT,M,yOA3HGxB,CAAyB7J,I,84BA8H/BA,GAAUC,kBAAkB,mBAAoB4J,IChIhD,IAAM7J,GAAY9U,IAAAA,aAAqB,aAEjCogB,GAAAA,SAAAA,I,isBAGJ,WAAa1gB,EAAwBC,GAA+B,O,4FAAA,SAGlE,IAAMwP,EAAO,GAFb,cAAMzP,EAAQC,IAId,SAASqc,IACP7M,EAAKkR,OACN,CAPiE,OASlE,EAAKpU,KAAKwD,iBAAiB,cAAc,KACvC,EAAK/P,SAAS6P,IAAI,eAAgByM,EAAlC,IAGF,EAAK/P,KAAKwD,iBAAiB,cAAc,KACvC,EAAK/P,SAASuC,IAAI,eAAgB+Z,EAAlC,IAGF,EAAKtc,SAASW,GAAG,SAASwG,IACxB,IAAIyZ,EAAUzZ,EAAMsS,OAEpB,EAAG,CACD,GACEmH,EAAQ1L,UAAUyE,SAAS,sBAC3BiH,EAAQ1L,UAAUyE,SAAS,uBAE3B,OAGFiH,EAAUA,EAAQlE,aACnB,OAAQkE,GAET,EAAKD,OAAL,IA/BgE,CAiCnE,C,qCAED,WACElf,KAAKof,UAAY,GAEjB,IAAM5gB,EAAUwB,KAAKqf,aAEf7J,EAAO,8CAAe,MAAO,CACjC1V,UAAW,oBACXC,UAAW,GACXkW,UAAW,IAGPqJ,EAAS,8CAAe,MAAO,CACnCxf,UAAW,WAGPyf,EAAa,8CAAe,OAE5BC,EAAY,8CAAe,MAAO,CACtCzf,UAAWvB,EAAQ0e,SAASE,YAC5Btd,UAAW,UAGP2f,EAAkBjhB,EAAQ0e,SAASwC,aACnCC,EAAe,8CAAe,MAAO,CACzC5f,UAAW0f,EACPzf,KAAKzB,SAASmK,SAAS,SAAU,CAAE+W,EAAgBrC,cACnD,GACJtd,UAAW,YAGbyf,EAAWha,YAAYia,GACvBD,EAAWha,YAAYoa,GAEvB,IAAMte,EAAO,8CAAe,MAAO,CACjCvB,UAAW,UAEbuB,EAAKiN,iBAAiB,SAAS,IAAMtO,KAAKkf,UAE1CI,EAAO/Z,YAAYga,GACnBD,EAAO/Z,YAAYlE,GAEnB,IAAMue,EAAO,8CAAe,MAE5B,IAAK,IAAMC,KAAmBrhB,EAAQshB,SAAU,CAC9C,IAAM9F,EAAO,IAAIwD,GAAiBxd,KAAKzB,SAAU,CAC/Cma,QAASmH,EACTb,UAAW,IAAMhf,KAAK+f,cAAcF,KAGtCD,EAAKra,YAAYyU,EAAKlP,MAEtB9K,KAAKof,UAAU/N,KAAK2I,EACrB,CAKD,OAHAxE,EAAKjQ,YAAY+Z,GACjB9J,EAAKjQ,YAAYqa,GAEVpK,CACR,G,oBAED,WACE,IAAMhX,EAAUwB,KAAKqf,aAErBrf,KAAKggB,eAAexhB,EAAQye,qBAC7B,G,kBAED,WACEjd,KAAKzB,SAASc,SAAS,0BACxB,G,mBAED,WACEW,KAAKzB,SAASiB,YAAY,0BAC3B,G,4BAED,SAAgBygB,GACd,IAAK,IAAMjG,KAAQha,KAAKof,UACtBpF,EAAKkG,YAAYlG,EAAKmG,aAAapC,WAAakC,EAEnD,G,wBAEO,WACN,OAAOjgB,KAAKhB,QACb,G,2BAEO,SAAe0Z,GACrB1Y,KAAKqf,aAAaU,cAAcrH,EACjC,M,yOA5HGuG,CAAqBtL,I,qjBA+H3BA,GAAUC,kBAAkB,eAAgBqL,ICjI5C,IAEMmB,GAAAA,SAAAA,I,isBAKJ,WAAa7hB,EAAwBC,GAA+B,a,4FAAA,UAClE,cAAMD,EAAQC,IAETA,QAAUA,EAEf,EAAKD,OAAOsD,OAAM,KAChBtD,EAAOc,SAAS,eAAhB,IAGF,EAAKke,aAAe,IAAI0B,GAAa1gB,EAAQC,GAC7C,EAAK6hB,eAAiB,IAAIxD,GAAete,EAAM4E,OAAAA,OAAAA,OAAAA,OAAAA,CAAAA,EAAO3E,GAAO,CAAE+e,aAAc,EAAKA,gBAElFhf,EAAOuD,SAAS,EAAKyb,aAAc/e,GACnCD,EAAOuD,SAAS,EAAKue,eAAgB7hB,GAb6B,CAcnE,C,2CAED,WACEwB,KAAKud,aAAayC,eAAehgB,KAAKxB,QAAQye,qBAC/C,M,yOAvBGmD,CAFSvhB,IAAAA,UAAkB,W,qjBA4BjCA,IAAAA,eAAuB,WAAYuhB,IC5BnC,IAAM5T,GAAcC,IAAM,0BAIpB6T,GAAAA,SAAAA,I,isBAcJ,WAAa/hB,EAAwBC,GAA8B,a,4FAAA,UACjE,cAAMD,EAAQC,IATR+hB,WAAa,EAWnB,EAAKC,sBAAwBjiB,EAAOuD,SAAS,wBAAyB,CAAE2e,qBAAqB,IAEzF5hB,IAAAA,QAAAA,YAA8B6hB,OAAOC,aACvC,EAAKC,2BAGF,EAAKriB,OAAOS,SAAS6hB,cAAa,EAAKtiB,OAAOS,SAAS6hB,YAAc,CAAC,GAG1E,EAAKtiB,OAAOS,SAAS6hB,YAAoBC,OAAQ,EAClD,EAAKviB,OAAOS,SAAS6hB,YAAYE,aAAc,EAE/C,EAAKxiB,OAAOuC,IAAI,QAAQ,KACtB,EAAKkgB,sBAAL,IAhB+D,CAkBlE,C,qDAEO,WACNhhB,KAAKzB,OAAOW,GAAG,oBAAoB,KAC5Bc,KAAKzB,OAAOmS,iBAAkB1Q,KAAKihB,mBAExCP,OAAOC,YAAYO,KAAK,aACrB3R,OAAMpI,GAAOC,EAAAA,EAAAA,MAAa,mCAAoCD,IADjE,GAGH,G,6BAEO,WACN,OAAOnH,KAAKzB,OAAO4iB,aAAenhB,KAAKzB,OAAO6iB,aAC/C,G,kCAEO,WACN,IAAMC,EAAoB3b,IAMxB,GALI1F,KAAKshB,aACPvgB,aAAaf,KAAKshB,YAClBthB,KAAKshB,gBAAaxZ,GAGhB9H,KAAKuhB,cAAgB7b,EAAM8b,UAAYxhB,KAAKuhB,aAAaC,UAAYlB,EAAqBmB,oBAK5F,OAJAjV,GAAY,uBAEZxM,KAAKuhB,kBAAezZ,OACpB9H,KAAK0hB,YAAYhc,GAInB1F,KAAK2hB,gBAAkB3hB,KAAKzB,OAAOqjB,aAEnC5hB,KAAKshB,WAAa7f,YAAW,KAC3B+K,GAAY,uDAAwDxM,KAAK2hB,gBAEzE3hB,KAAKzB,OAAOqjB,WAAW5hB,KAAK2hB,eAA5B,GACCrB,EAAqBmB,qBAExBzhB,KAAKuhB,aAAe7b,CAApB,EAGF1F,KAAKzB,OAAOW,GAAG,cAAewG,IAExB1F,KAAKzB,OAAOqjB,cAEhBP,EAAiB3b,EAAjB,IAGF1F,KAAKwgB,sBAAsB1V,KAAKwD,iBAAiB,cAAe5I,IAE9DA,EAAMmc,iBAENR,EAAiB3b,EAAjB,GACC,CAAEoc,SAAS,GACf,G,yBAEO,SAAapc,GACnB,IAAMqc,EAAc/hB,KAAKzB,OAAOyjB,eAE1BC,EAAOjiB,KAAKkiB,iBAAkBxc,EAAMsS,QAAwBmK,wBAC5DC,EAAU1c,EAAM2c,cAAc,GAAGC,MAAQL,EAAKM,KAEpD/V,GAAY,+DAAgEuV,EAAaK,GAErFA,EAAU,IAAOL,GACf/hB,KAAKugB,WAAa,IAAGvgB,KAAKugB,WAAa,GAE3CvgB,KAAKugB,YAAc,GAEnB/T,GAAY,0BAA2BxM,KAAKugB,aACnC6B,EAAU,IAAOL,IACtB/hB,KAAKugB,WAAa,IAAGvgB,KAAKugB,WAAa,GAE3CvgB,KAAKugB,YAAc,GACnB/T,GAAY,yBAA0BxM,KAAKugB,aAG7CvgB,KAAKwgB,sBAAsBgC,gBAAgBxiB,KAAKugB,YAEhDvgB,KAAKyiB,wBACN,G,8BAEO,SAAkBzK,GACxB,OAAIA,EAAOvE,UAAUyE,SAAS,YAAoBF,EAE3ChY,KAAKkiB,iBAAiBlK,EAAOiD,cACrC,G,oCAEO,WACNjb,KAAKzB,OAAO4P,QACZnO,KAAKzB,OAAOc,SAAS,oBAEjBW,KAAK0iB,uBAAuB3hB,aAAaf,KAAK0iB,uBAElD1iB,KAAK0iB,sBAAwBjhB,YAAW,KACtC,IAAIkhB,EAAU3iB,KAAKzB,OAAO2P,cAAgBlO,KAAKugB,WAC/CvgB,KAAKugB,WAAa,EAElBoC,EAAUxhB,KAAKC,IAAI,EAAGuhB,GACtBA,EAAUxhB,KAAKyhB,IAAI5iB,KAAKzB,OAAO8L,WAAYsY,GAE3C3iB,KAAKzB,OAAO2P,YAAYyU,GACxB3iB,KAAKugB,WAAa,EAClBvgB,KAAKwgB,sBAAsBgC,gBAAgB,GAE3CxiB,KAAKzB,OAAOiB,YAAY,oBACxBQ,KAAKzB,OAAOqjB,YAAW,GAEvB5hB,KAAKzB,OAAOskB,MAAZ,GACCvC,EAAqBwC,uBACzB,M,yOA9IGxC,CAFSzhB,IAAAA,UAAkB,W,w+BAGPyhB,GAAAA,oBAAsB,IACtBA,GAAAA,uBAAyB,IA+InDzhB,IAAAA,eAAuB,iBAAkByhB,ICxJzC,IACMyC,GAAAA,SAAAA,I,6xBAOJ,WACE,IAAMtjB,EAAY,8CAAe,MAAO,CACtCK,UAAW,+BAGPkjB,EAAa,8CAAe,MAAO,CACvCljB,UAAW,gBAGbkjB,EAAW1U,iBAAiB,cAAcmC,IACxCA,EAAEwS,kBAEEjjB,KAAKyF,QAAQyd,UAAYljB,KAAKyF,QAAQqG,QACxC9L,KAAKyF,QAAQod,OAIf7iB,KAAKyF,QAAQ0I,OAAb,IAGFnO,KAAKmjB,OAAL,8BAAAnjB,MAAA,KAAAA,KAA6B,MAAO,CAAEF,UAAW,6BACjDE,KAAKojB,QAAL,8BAAApjB,MAAA,KAAAA,KAA8B,MAAO,CAAEF,UAAW,8BAElD,IAAK,IAAIqL,EAAI,EAAGA,EAAI,EAAGA,IACrBnL,KAAKmjB,OAAO5d,YAAZ,8BAAAvF,MAAA,KAAAA,KAAuC,OAAQ,CAAEF,UAAW,UAC5DE,KAAKojB,QAAQ7d,YAAb,8BAAAvF,MAAA,KAAAA,KAAwC,OAAQ,CAAEF,UAAW,UAU/D,OAPAE,KAAKqjB,WAAarjB,KAAKmjB,OAAO5d,YAAZ,8BAAAvF,MAAA,KAAAA,KAAuC,MAAO,CAAEF,UAAW,UAC7EE,KAAKsjB,YAActjB,KAAKojB,QAAQ7d,YAAb,8BAAAvF,MAAA,KAAAA,KAAwC,MAAO,CAAEF,UAAW,UAE/EL,EAAU8F,YAAYvF,KAAKmjB,QAC3B1jB,EAAU8F,YAAYyd,GACtBvjB,EAAU8F,YAAYvF,KAAKojB,SAEpB3jB,CACR,G,6BAED,SAAiB8jB,GACf,OAAe,IAAXA,GACFvjB,KAAKwjB,kBACLxjB,KAAKyjB,eAIHF,EAAS,GACXvjB,KAAKwjB,kBACLxjB,KAAK0jB,eAAeH,IAIlBA,EAAS,GACXvjB,KAAKyjB,mBACLzjB,KAAK2jB,cAAcJ,SAFrB,CAKD,G,wBAEO,WACNvjB,KAAKmjB,OAAO1P,UAAUC,IAAI,cAC1B1T,KAAKqjB,WAAWhQ,YAAc,EAC/B,G,2BAEO,SAAekQ,GACrBvjB,KAAKmjB,OAAO1P,UAAUmQ,OAAO,cAC7B5jB,KAAKqjB,WAAWhQ,YAAcrT,KAAKzB,SAASmK,SAAS,cAAe,CAAE6a,EAAS,IAChF,G,yBAEO,WACNvjB,KAAKojB,QAAQ3P,UAAUC,IAAI,cAC3B1T,KAAKsjB,YAAYjQ,YAAc,EAChC,G,4BAEO,SAAgBkQ,GACtBvjB,KAAKojB,QAAQ3P,UAAUmQ,OAAO,cAC9B5jB,KAAKsjB,YAAYjQ,YAAcrT,KAAKzB,SAASmK,SAAS,cAAe,CAAE6a,EAAS,IACjF,M,yOAnFGR,CADYlkB,IAAAA,aAAqB,c,qjBAuFvCA,IAAAA,kBAA0B,wBAAyBkkB,ICrFnD,IAEMc,GAAAA,SAAAA,I,isBAQJ,WAAatlB,EAAwBC,GAA8B,a,4FAAA,UACjE,cAAMD,EAAQC,IAETslB,SAAW,EAAKC,gBAErB,EAAKC,kBAAqBte,GAAyB,EAAKue,UAAUve,GAClEiE,SAAS2E,iBAAiB,UAAW,EAAK0V,mBANuB,CAOlE,C,oCAED,WACEra,SAASqP,oBAAoB,UAAWhZ,KAAKgkB,kBAC9C,G,uBAEO,SAAWte,GACjB,GAAK1F,KAAKkkB,iBAAiBxe,EAAMsS,QAEjC,IAAK,IAAM5F,KAAWpS,KAAK8jB,SACzB,GAAI1R,EAAQ+R,OAAOze,GAEjB,YADA0M,EAAQzR,GAAG+E,EAIhB,G,2BAEO,WACN,IAAMoe,EAAyB,CAE7B,CACEK,OAAQ1T,GAAgB,MAAVA,EAAEvN,KAAyB,mBAAVuN,EAAEvN,IACjCvC,GAAI8P,IACFA,EAAEoR,iBACFpR,EAAEwS,kBAEEjjB,KAAKzB,OAAO2kB,SAAUljB,KAAKzB,OAAOskB,OACjC7iB,KAAKzB,OAAO4P,OAAZ,GAKT,CACEgW,OAAQ1T,GAAKzQ,KAAKokB,QAAQ3T,EAAG,WAC7B9P,GAAI8P,IACFA,EAAEoR,iBACF7hB,KAAKzB,OAAOsK,OAAO7I,KAAKzB,OAAOsK,SAAWgb,EAAsBQ,YAAhE,GAKJ,CACEF,OAAQ1T,GAAKzQ,KAAKokB,QAAQ3T,EAAG,aAC7B9P,GAAI8P,IACFA,EAAEoR,iBACF7hB,KAAKzB,OAAOsK,OAAO7I,KAAKzB,OAAOsK,SAAWgb,EAAsBQ,YAAhE,GAKJ,CACEF,OAAQ1T,GAAKzQ,KAAKokB,QAAQ3T,EAAG,cAAgBzQ,KAAKokB,QAAQ3T,EAAG,eAC7D9P,GAAI8P,IACFA,EAAEoR,iBAEF,IAAM7J,EAAS7W,KAAKC,IAAI,EAAGpB,KAAKzB,OAAO2P,cAAgB2V,EAAsBS,WAC7EtkB,KAAKzB,OAAO2P,YAAY8J,EAAxB,GAKJ,CACEmM,OAAQ1T,GAAKzQ,KAAKokB,QAAQ3T,EAAG,eAAiBzQ,KAAKokB,QAAQ3T,EAAG,gBAC9D9P,GAAI8P,IACFA,EAAEoR,iBAEF,IAAM7J,EAAS7W,KAAKyhB,IAAI5iB,KAAKzB,OAAO8L,WAAYrK,KAAKzB,OAAO2P,cAAgB2V,EAAsBS,WAClGtkB,KAAKzB,OAAO2P,YAAY8J,EAAxB,GAKJ,CAEEmM,OAAQ1T,GAAKzQ,KAAKokB,QAAQ3T,EAAG,OAAUA,EAAE8T,QAAU9T,EAAE+T,SAAqB,UAAV/T,EAAEvN,IAClEvC,GAAI8P,IACFA,EAAEoR,iBAEE7hB,KAAKzB,OAAOmS,eAAgB1Q,KAAKzB,OAAOkmB,iBACvCzkB,KAAKzB,OAAOmmB,mBAAZ,GAKT,CACEP,OAAQ1T,GAAKzQ,KAAKokB,QAAQ3T,EAAG,KAC7B9P,GAAI8P,IACFA,EAAEoR,iBAEF7hB,KAAKzB,OAAOgM,OAAOvK,KAAKzB,OAAOgM,QAA/B,GAKJ,CACE4Z,OAAQ1T,GAAe,MAAVA,EAAEvN,IACfvC,GAAI,KACF,IAAMqX,EAAS7W,KAAKyhB,IAAI5iB,KAAKzB,OAAOomB,eAAiB,GAAK,GAE1D3kB,KAAKzB,OAAOomB,aAAanX,WAAWwK,EAAOnT,QAAQ,IAAnD,GAKJ,CACEsf,OAAQ1T,GAAe,MAAVA,EAAEvN,IACfvC,GAAI,KACF,IAAMqX,EAAS7W,KAAKC,IAAIpB,KAAKzB,OAAOomB,eAAiB,GAAK,IAE1D3kB,KAAKzB,OAAOomB,aAAanX,WAAWwK,EAAOnT,QAAQ,IAAnD,GAKJ,CACEsf,OAAQ1T,GAAe,MAAVA,EAAEvN,IACfvC,GAAI,KACFX,KAAKzB,OAAO4P,QAIZnO,KAAKzB,OAAO2P,YAAYlO,KAAKzB,OAAO2P,cADvB,EAAI,GACjB,GAKJ,CACEiW,OAAQ1T,GAAe,MAAVA,EAAEvN,IACfvC,GAAI,KACFX,KAAKzB,OAAO4P,QAIZnO,KAAKzB,OAAO2P,YAAYlO,KAAKzB,OAAO2P,cADvB,EAAI,GACjB,IAMN,IAAK,IAAI/C,EAAI,EAAGA,EAAI,GAAIA,IACtB2Y,EAASzS,KAAK,CACZ8S,OAAQ1T,GAAKA,EAAEvN,MAAQiI,EAAI,KAAOsF,EAAE+T,QACpC7jB,GAAI8P,IACFA,EAAEoR,iBAEF7hB,KAAKzB,OAAO2P,YAAYlO,KAAKzB,OAAO8L,WAAac,EAAI,GAArD,IAKN,OAAO2Y,CACR,G,8BAEO,SAAkBc,GACxB,IAAMC,EAAW7kB,KAAKzB,OAAOuM,KACvBga,EAAWnb,SAASob,cACpBC,EAAmBJ,EAAQK,QAAQlM,cAEzC,OACE+L,IAAaD,GACbC,IAAaD,EAASK,cAAc,cACpCJ,IAAaD,EAASK,cAAc,qBACrB,YAAfN,EAAQlT,IACa,SAArBsT,GACqB,UAArBA,CAEH,G,qBAEO,SAAStf,EAAsBxC,GACrC,QAASwC,EAAM8e,SAAY9e,EAAM6e,QAAW7e,EAAMyf,SAAYzf,EAAM0f,UAAY1f,EAAMxC,MAAQA,EAC/F,M,yOAzLG2gB,CAFShlB,IAAAA,UAAkB,WAGPglB,GAAAA,YAAc,GACdA,GAAAA,UAAY,EA0LtChlB,IAAAA,eAAuB,wBAAyBglB,I,QC1LzC,IAAMwB,GAAb,WAGE,WACEC,EACQ1f,I,4FAAgB,SAAhB,KAAAA,KAAAA,EAER5F,KAAKxB,QAAU8mB,EAAcC,MAC9B,C,QARH,O,EAAA,G,EAAA,iCAUE,WACE,IAAMhQ,EAAW,CAAC,EAuDlB,OArDIvV,KAAKxB,QAAQgnB,eACfriB,OAAO+T,OAAO3B,EAAUvV,KAAKylB,oBAG/BtiB,OAAO+T,OAAO3B,EAAU,CAAEmQ,WAAY,CAAC,IAEnC1lB,KAAKxB,QAAQmnB,WACfxiB,OAAO+T,OAAO3B,EAAUvV,KAAK4lB,gBAG/BziB,OAAO+T,OAAO3B,EAAQpS,OAAAA,OAAAA,OAAAA,OAAAA,OAAAA,OAAAA,CACpB0iB,mBAAoB,CAAC,EACrBC,YAAa,CAAC,EACdC,gBAAiB,CAAC,EAClBC,YAAa,CAAC,EAEdC,oBAAqB,CAAC,GAEnBjmB,KAAKkmB,sBAAoB,CAE5BC,cAAe,CACbvb,WAAY5K,KAAKxB,QAAQoM,YAG3Bwb,WAAY,CAAC,EACbC,cAAe,CAAC,IAEbrmB,KAAKsmB,sBAYVnjB,OAAO+T,OAAO3B,EAAU,CACtBjC,wBAAyB,CAAC,KAGO,IAA/BtT,KAAKxB,QAAQ+nB,eACfpjB,OAAO+T,OAAO3B,EAAU,CACtBgR,cAAe,CAAC,IAIpBpjB,OAAO+T,OAAO3B,EAAU,CACtBiR,iBAAkB,CAAC,IAGdjR,CACR,GAnEH,+BAqEU,WACN,IAAMkR,EAA2B,GAQjC,OANAA,EAAepV,KAAK,0BAIpBoV,EAAepV,KAAK,wBAEb,CACLR,eAAgB,CACdoL,MAAO,CACLC,gBAAiB,IAEnBZ,QAASmL,GAGd,GAtFH,gCAwFU,WAGN,MAAO,CACLC,gBAAiB,CACfnR,SAAU,CACRoR,QAAS,CACPpR,SAAU,CACR,gBAAmB,CAAC,EACpBqR,iBAAkB,CAAC,EACnBC,gBAAiB,CAAC,MAM7B,GAxGH,8BA0GU,WAWN,MAAO,CAAEC,oBAV6C,CACpDziB,KAAM,WACN+N,QAASpS,KAAKxB,QAAQgnB,cACtBnT,WAAY,MACLrS,KAAKxB,QAAQuoB,mBAEV/mB,KAAKxB,QAAQuoB,oBAK1B,GAtHH,0BAwHU,WAWN,MAAO,CAAEC,gBAV6C,CACpD3iB,KAAM,OACN+N,QAASpS,KAAKxB,QAAQmnB,UACtBtT,WAAY,MACLrS,KAAKxB,QAAQyoB,eAEVjnB,KAAKxB,QAAQyoB,gBAK1B,M,uOApIH,K,mGCLMC,GAAAA,WAEJ,aAA4C,IAAvBC,EAAuB,uDAAF,GAAE,WAAvB,KAAAA,SAAAA,CAEpB,C,uDAED,SAAoBC,GAClBhgB,EAAAA,EAAAA,KAAY,sCAAsCggB,MAElD,IAAMC,GAAUC,EAAAA,EAAAA,SAAQF,GAExBpnB,KAAKmnB,SAAWnnB,KAAKmnB,SAASI,QAAOC,GAAKA,IAAMH,GAAWG,IAAMH,EAAU,KAC5E,G,sBAED,SAAUI,GACR,IAAMrmB,EAAMpB,KAAKmnB,SAASviB,OAAS,EAC7BuG,EAAInL,KAAK0nB,aAAatmB,GAE5B,GAAI+J,IAAM/J,EAAM,EAAG,OAAOqmB,EAE1B,IAAME,EAAa3nB,KAAKmnB,SAAShc,GAC3Byc,EAAYD,EAAWE,SAAS,KAAO,GAAK,IAElD,OAAOF,EAAaC,GAAYE,EAAAA,EAAAA,UAASL,EAC1C,G,2BAED,WACE,OAAOznB,KAAKmnB,SAASviB,MACtB,G,0BAEO,SAAcxD,GACpB,OAAOD,KAAKyB,MAAMzB,KAAK4mB,SAAW5mB,KAAKyB,MAAMxB,GAC9C,M,yOAhCG8lB,GCAN,SAASc,GAA0BC,GACjC,OAAO,SAAyBC,GAC9B,OAAOD,EAAqBE,SAASD,EAAQT,IAC9C,CACF,CCKD,SAASW,GAAMC,GACb,OAAO,IAAIpY,SAAcqY,IACvB7mB,YAAW,IAAM6mB,KAAOD,EAAxB,GAEH,C,gUCPD,SAASE,GAAkBC,EAAgB/O,GAEzC,IAAIxW,OAAS6E,EAMb,IAAK,IAAI5E,KAJTuW,EAAOA,EAAKgP,UAAU,IAIND,EACVA,EAASnlB,eAAeH,IAAQA,EAAIwlB,QAAQjP,IAAS,IACvDxW,EAASulB,EAAStlB,IAKtB,OAAOD,CACR,CAED,SAAS0lB,GAAyBC,EAA2BC,GAC3D,IAAIC,EAAeC,GAAoBH,GACjCI,EAAQ,oBAEd,4BAAO,UAAiCd,EAAkBe,EAAiBC,GAA0B,IAATC,EAAS,uDAAD,EAE9FN,UAAcT,GAAK,MAEvB,IAuBIgB,EAvBEC,GAAWvB,EAAAA,EAAAA,UAASI,EAAQT,KAE5Be,QAAkBM,EAElBQ,EAAed,EAASa,IAAad,GAAkBC,EAAUa,GAIvE,IAAKC,GAAgBH,EApCN,EAqCb,MAAM,IAAInS,MAAM,wBAAwBqS,0BAG1C,IAAKC,EAQH,OAPAliB,EAAAA,EAAAA,KAAY,+BAA+BiiB,WAErCjB,GAAK,KAEXU,EAAeC,GAAoBH,cAC7BW,EAAiBrB,EAASe,EAASC,EAASC,EAAQ,IAM5D,IAAIK,EAAQ,GAEZ,GAA4B,iBAAjBF,EACTF,EAAeE,MACV,CACL,IAAMG,EAAWT,EAAMU,KAAKxB,EAAQsB,OACpCA,EAAQC,EAAS,GAAK,IAAMA,EAAS,GAErCL,EAAeE,EAAaE,EAC7B,CAED,QAAqB1hB,IAAjBshB,EACF,MAAM,IAAIpS,MAAM,wBAAwBqS,KAAYG,0BAItDG,QAAQC,IAAI,eAAgB1B,EAAQT,IAAK+B,EAAOtB,EAAQviB,MAExD,IAAMkkB,QAAsBC,GAAU5B,EAAQviB,MAC9C,GAAIkkB,IAAkBT,EAIpB,MAAM,IAAIpS,MACR,0CAA0CqS,KAAYG,eACxCJ,gBAA2BS,KAG9C,IAxDD,SAAsBN,EAAtB,cAAO,EAAP,6BAAsBA,CAAtB,GAyDD,CAUD,SAASR,GAAqBtB,GAC5B,OAAOlX,MAAMkX,GACVsC,MAAKzB,GAAOA,EAAI0B,SAChBza,OAAMpI,IACLC,EAAAA,EAAAA,MAAa,6BAA8BD,GACpC,CAAC,IAEb,C,SAEc2iB,GAAAA,G,4DAAf,UAA0BnkB,GACxB,GAAKA,EAEL,OAAImE,OAAOmgB,OAAOC,OACTpgB,OAAOmgB,OAAOC,OAAOC,OAAO,UAAWxkB,GAC3CokB,MAAKpkB,GAAQykB,GAAYzkB,MAMvB,WAFkB,mCAAyB0kB,QAE7BC,SAAShpB,OAAOqE,GAAMwkB,OAAO,MACnD,K,sBAGD,SAASC,GAAaliB,GACpB,IAAKA,EAAQ,MAAO,GAEpB,IAAIqiB,EAAI,GACFC,EAAI,mBAOV,OANU,IAAIC,WAAWviB,GAEvBwiB,SAASC,IACTJ,GAAKC,EAAEG,GAAK,GAAKH,EAAM,GAAJG,EAAnB,IAGKJ,CACR,CCzHM,IAAMK,GAAb,WAEE,WACUpsB,EACAqsB,I,4FAA0B,SAD1B,KAAArsB,QAAAA,EACA,KAAAqsB,qBAAAA,CAGT,C,QAPH,O,EAAA,E,EAAA,+BASE,WACE,IAAMC,EAAgB9qB,KAAKxB,QAAQ+mB,OAE7B0C,EAAuB,IAAIf,GAAqBlnB,KAAKxB,QAAQgJ,eAAeujB,oBAE5EC,EAAuBhrB,KAAKirB,yBAAyBhD,GACrDiD,EAAS,IAAIlrB,KAAK6qB,qBAAqBM,OAAOH,GAAsBI,oBA6B1E,MAAO,CAAE5jB,eA3B2C,CAClDygB,uBACA5jB,KAAM,wBACN6I,UAAW4d,EAAc5d,UACzBkR,IAAKpe,KAAKxB,QAAQgJ,eAAe6jB,YACjCH,UAsBuBI,MAnBX,CACZC,kBAAoB9jB,IAClB,IAAMM,EAAa5G,KAAKyhB,IAAInb,EAAMO,QAAU,EAAGP,EAAM4R,OAAS,GAExDmS,EAAOxrB,KAAKxB,QAAQgJ,eAAeikB,WAAW/mB,MAAKgnB,GAAKA,EAAE3jB,WAAW2J,KAAO3J,IAElF,IAAKyjB,EAAM,OAAO/jB,EAAMO,OAExB,IAAIiD,EAAQugB,EAAKzjB,WAAWkD,MAG5B,OAFIugB,EAAKG,KAAO,KAAI1gB,GAASugB,EAAKG,KAE3B1gB,CAAP,GAQ4B2gB,MAJlB,CACZC,YAAa7rB,KAAK8rB,gBAAgBZ,IAIrC,GA7CH,sCAiDU,SAA0BjD,G,QAChC,IAAI8D,GAAc,EAC2B,cAAX,QAA9B,EAAkB,OAAjBrgB,gBAAS,IAATA,eAAS,EAATA,UAAmB3C,kBAAUwD,IAAAA,OAAA,EAAAA,EAAElI,QAClC+C,EAAAA,EAAAA,KAAY,uDACZ2kB,GAAc,GAGhB,IAAMC,EAAkBhsB,KAAKxB,QAAQgJ,eAAewkB,gBACNzE,QAAO9Y,GAAKA,EAAEwd,WAAW,QAEjEC,EAA2BlsB,KAAKxB,QAAQ+mB,OAAOsD,OACjD7oB,KAAKmsB,+BACLnsB,KAAKosB,8BAET,MAAO,CACLlB,OAAQ,OAAF,QACJc,kBACAK,UjCrCC,CACLC,WAAY,CACV,CACEC,KAAM,0BACNC,SAAU,WACVC,WAAY,oBAEd,CACEF,KAAM,0BACNC,SAAU,WACVC,WAAY,sBiC6BZC,0BAA2B,EAC3BC,yBAA0B,IAE1BpD,iBAAoBvpB,KAAKxB,QAAQ+mB,OAAOqH,oBAAsH9kB,EAArG6gB,GAAwB3oB,KAAKxB,QAAQgJ,eAAeohB,kBAAmB5oB,KAAKxB,QAAQ+mB,OAAOsD,QACpJgE,kBAAmB7E,GAAyBC,GAE5C6E,OAAQ9sB,KAAKxB,QAAQ+mB,OAAO3a,WAC5BmhB,cACAgB,gBAAkB/sB,KAAKxB,QAAQuuB,gBAE/BH,eAAiB5sB,KAAKxB,QAAQ+mB,OAAOqH,gBAElCV,GAEL1D,SAAU,CACRwE,cAAgBhtB,KAAKxB,QAAQwuB,cAC7BC,QAASjtB,KAAKxB,QAAQgJ,eAAe6jB,YACrC6B,oBAAoE,QAA/C,EAAAhB,EAAyBiB,8BAAsBjS,IAAAA,EAAAA,EAAI,IAG7E,GAxFH,0CA0FU,WACN,IAAMkS,EAAO,CACXC,yBAA0B,GAK5B,OACO,IAHartB,KAAKxB,QAAQ+mB,OAAO+H,YAAYC,YAIzC,OAAP,wBACKH,GAAI,CAEPN,QAAQ,EACRU,wBAAyB,IAOpBJ,CAEZ,GAhHH,yCAkHU,WACN,MAAO,CACLC,yBAA0B,EAC1BI,2BAA4B,EAE5BC,wBAAyB,IACzBC,oBAAqB,GAErBC,wBAAyB,EACzBJ,wBAAyB,IACzBK,sCAAsC,EAEtCV,uBAAwB,GAE3B,GAhIH,6BAoIU,SAAiBjC,GACvB,IAAMgB,EAA2BlsB,KAAKxB,QAAQ+mB,OAAOsD,OACjD7oB,KAAK8tB,oBACL9tB,KAAK+tB,mBAIHX,EAAO,OAAH,QACRY,sBAAsB,EACtBC,eAAe,EAEf/C,UAEGgB,GAICxlB,E3BrHV,WACE,IAAMlC,EAAQ0H,EAAgB,qBAC9B,GAAI1H,QAAuC,CACzC,IAAM+I,EAAcpL,SAASqC,EAAO,IACpC,GAAIiJ,MAAMF,GAAc,OAExB,OAAOA,CACR,CAGF,C2B2G4B2gB,GACzB,OAAKxnB,EAEE,OAAP,wBACK0mB,GAAI,CAEPe,uBAA2C,EAAnBznB,EACxB0nB,iBAAkB,GAClBC,YAAa,EACbC,eAAe,EACf7hB,OAAO,IATqB2gB,CAe/B,GArKH,+BAuKU,WAGN,OAFoBptB,KAAKxB,QAAQ+mB,OAAO+H,YAAYC,aAGlD,KAAK,EACH,MAAO,CACLgB,sBAAuB,GAG3B,KAAK,EACH,MAAO,CACLA,sBAAuB,IAG3B,QACE,MAAO,CACLA,sBAAuB,GAG9B,GA1LH,8BA4LU,WACN,MAAO,CACLA,sBAAuB,EAE1B,I,0OAhMH,KCXO,IAAMC,GAAb,WAEE,WACUhwB,EACAiwB,I,4FAAkB,SADlB,KAAAjwB,QAAAA,EACA,KAAAiwB,cAAAA,CAGT,C,QAPH,O,EAAA,G,EAAA,+BASE,WACE,IAAM3D,EAAgB9qB,KAAKxB,QAAQ+mB,OAC7BmJ,EAAoB1uB,KAAKxB,QAAQmwB,WACjCC,EAAwB5uB,KAAKxB,QAAQgJ,eAmB3C,MAAO,CAAEmnB,WAfU,CACjBthB,SAHsC,SAAvBrN,KAAKyuB,cAKpBI,kBAA+C,IAA7B/D,EAAclgB,WAChCgE,cAAekc,EAAclc,cAC7BkgB,cAAehE,EAAcgE,cAE7BrD,WAAoD,IAAxCiD,EAAkBjD,WAAW7mB,OACrC8pB,EAAkBjD,YAElBmD,aAAqB,EAArBA,EAAuBnD,aAAc,GAEzCve,UAAW4d,EAAc5d,WAI5B,M,uOAhCH,KCSO,IAAM6hB,GAAb,WAEE,WACUnpB,EACApH,EACAqsB,I,4FAA0B,SAF1B,KAAAjlB,KAAAA,EACA,KAAApH,QAAAA,EACA,KAAAqsB,qBAAAA,CAGT,C,QARH,O,EAAA,G,EAAA,gCAUE,SAAmBmE,GACjB,IAAMlE,EAAgB9qB,KAAKxB,QAAQ+mB,OAE/BlY,EAAWrN,KAAKivB,iBAAiBnE,EAAczd,SAAU2hB,GACvDpD,EAAQ,CACZsD,mBAAmB,GAGfC,EAAgC,CACpCzT,SAAU,OAAF,QACN9V,KAAM5F,KAAK4F,KACXyH,YAEGvK,EAAKgoB,EAAe,CACrB,eACA,sBACA,YACA,gBACA,WAEA,WACA,SACA,gBAWN,GAAkB,qBAAd9qB,KAAK4F,KAA6B,CACpC,IACMpH,EADoB,IAAIosB,GAAkB5qB,KAAKxB,QAASwB,KAAK6qB,sBACjCuE,mBAElCjsB,OAAO+T,OAAOiY,EAASrsB,EAAKtE,EAAS,CAAE,QAAS,oBAChD2E,OAAO+T,OAAO0U,EAAOptB,EAAQotB,MAC9B,MAAM,GAAkB,eAAd5rB,KAAK4F,KAAuB,CACrC,IAAMypB,EAA2B,IAAIb,GAAyBxuB,KAAKxB,QAASwB,KAAKivB,iBAAiB5hB,EAAU2hB,IAE5G7rB,OAAO+T,OAAOiY,EAASE,EAAyBD,oBAGhD/hB,GAAW,CACZ,CAEDlK,OAAO+T,OAAOiY,EAAS,CACrBG,QAAU,CAAC,IAGb,IAAMC,EAA2B,IAAIlK,GAAyBrlB,KAAKxB,QAASwB,KAAK4F,MAE3E4pB,EAAiB,CACrB5D,QAGA6D,mBAAmB,EACnBC,cAAqC5nB,IAA3BgjB,EAAc4E,UAAyB5E,EAAc4E,SAC/DC,UAA6B7nB,IAAvBgjB,EAAc6E,MAAqB7E,EAAc6E,KAEvDplB,WAA+BzC,IAAxBgjB,EAAcvgB,MACjBugB,EAAcvgB,WACdzC,EAEJuF,SAAUrN,KAAKivB,iBAAiB5hB,EAAU2hB,GAE1CY,OAAQ9E,EAAc8E,OACtBxiB,kBAAmB0d,EAAc1d,kBACjCyiB,cAAe,CAAE,GAAK,IAAM,EAAG,KAAM,IAAK,KAAM,GAEhDV,UAEAW,QAAUhF,EAAcgF,QAExBlf,WAAY,CACV2E,SAAUga,EAAyBQ,uBAUvC,OAJIjF,EAAcnc,UrCxBbnL,EqCwB0CsnB,EAAcnc,YrCxB1BnL,EAJ9B,UqC6BHL,OAAO+T,OAAOsY,EAAgB,CAAE7gB,SAAUmc,EAAcnc,WAGnD6gB,CACR,GAlGH,8BAoGU,SAAkBniB,EAAe2hB,GACvC,OAAiB,IAAb3hB,EAA0BA,EhC/G5B,mBAAmB5B,KAAKC,UAAUskB,WAK5BtkB,UAAUukB,gBAChBvkB,UAAUukB,eAAiB,GAC3BvkB,UAAUskB,SAASE,SAAS,aAIzB,iCAAiCzkB,KAAKC,UAAUC,agCyG5CqjB,GAAgB,OAGlB,MACR,GA9GH,mCAgHE,SAAuBzwB,EAAwBusB,GAC7C,IAAMjgB,EAAYigB,EAAcjgB,UAC1BslB,EAAYrF,EAAcqF,UAkEhC,MAAO,CAAEC,QAhEO,KACd,IAAMC,EAAgB9xB,EAAOS,SAAP,KAEhBsxB,EAAQ,CACZ,CACEvT,KAAM,SACN9R,MAAO1M,EAAOmK,SAAS,iBAAmB2nB,EAAgB,4CAA8C,IACxGE,SAAU,WACRhyB,EAAOS,SAAP,MAA2BqxB,CAC5B,GAEH,CAEEplB,MAAO,0CACPslB,SAAU,WACPvwB,KAAawwB,MAAMC,YAAYC,cAAc7lB,EAAWslB,EAC1D,IA0CL,OARAG,EAAMjf,KAAK,CACT0L,KAAM,OACN9R,MAAO1M,EAAOmK,SAAS,mBACvB6nB,SAAU,KACRhyB,EAAOoyB,QAAQ5pB,MAAf,IAIGupB,EAAM3sB,KAAIwH,GAAKhI,OAAAA,OAAAA,OAAAA,OAAAA,CAAAA,EACjBgI,GAAC,CACJF,MAAO,yBAAyBE,EAAE4R,MAAQ,oBAAsB5R,EAAEF,SAFpE,EAOH,M,uOArLH,K,kOCgTA,SA9SM2lB,WAcJ,WAAYC,I,4FAAQ,SAClB7wB,KAAK6wB,IAAMA,EACX7wB,KAAK8wB,iBAAmBC,OAAOC,kBAC/BhxB,KAAKixB,YAAc,EACnBjxB,KAAKkxB,MAAQ,KACblxB,KAAKmxB,iBAAmB,GACxBnxB,KAAKoxB,WAAQtpB,EACb9H,KAAKqxB,WAAa,KAClBrxB,KAAKkjB,QAAS,EAUdljB,KAAKsxB,mBACN,C,oDA4ND,SACE7pB,GACoC,IAApC0pB,EAAoC,uDAAF,GAElC,OAA4C,IAArCA,EAAiBzI,QAAQjhB,EACjC,G,oCAED,SACE8pB,EACAlY,EACArR,GAEA,IAAKupB,IAAWA,EAAO3sB,OACrB,OAAQ,EAKV,IAcI4sB,EAAgBD,EAAO3sB,OAAS,EAEpC,IAAK,IAAIuG,EAAI,EAAGA,EAAIomB,EAAO3sB,OAAQuG,GAAK,EAAG,CACzC,IAAM1D,EAAQ8pB,EAAOpmB,GACrB,IACG1D,EAAM4R,OAASA,GAAS5R,EAAMO,QAAUA,KAnBhBypB,EAoBLhqB,IApBqBiqB,EAoBdH,EAAOpmB,EAAI,KAdtCsmB,EAASpY,QAAUqY,EAAUrY,OAC7BoY,EAASzpB,SAAW0pB,EAAU1pB,QAc9B,CACAwpB,EAAgBrmB,EAChB,KACD,CACF,CAzB2B,IAACsmB,EAAgBC,EA2B7C,OAAOF,CACR,K,oCAxQM,SAAoBG,GACzB3xB,KAAK2xB,iBAAmBA,CACzB,G,qBAEM,WACL3xB,KAAK4xB,qBACD5xB,KAAK6wB,IAAIgB,OAAO7D,sBAClBhuB,KAAK8xB,cAEP9xB,KAAKkxB,MAAQ,KACblxB,KAAKqxB,WAAa,KAElBrxB,KAAK6wB,IAAM7wB,KAAK2xB,iBAAmB,IACpC,G,+BAES,WACR,IAAM,IAAEd,GAAQ7wB,KAChB6wB,EAAI3xB,GAAG6yB,GAAAA,EAAAA,uBAA+B/xB,KAAKgyB,sBAAuBhyB,MAClE6wB,EAAI3xB,GAAG6yB,GAAAA,EAAAA,gBAAwB/xB,KAAKiyB,iBAAkBjyB,MACtD6wB,EAAI3xB,GAAG6yB,GAAAA,EAAAA,gBAAwB/xB,KAAKkyB,iBAAkBlyB,MACtD6wB,EAAI3xB,GAAG6yB,GAAAA,EAAAA,cAAsB/xB,KAAKmyB,eAAgBnyB,MAClD6wB,EAAI3xB,GAAG6yB,GAAAA,EAAAA,gBAAwB/xB,KAAKoyB,iBAAkBpyB,KACvD,G,gCAES,WACR,IAAM,IAAE6wB,GAAQ7wB,KAChB6wB,EAAIziB,IAAI2jB,GAAAA,EAAAA,uBAA+B/xB,KAAKgyB,sBAAuBhyB,MACnE6wB,EAAIziB,IAAI2jB,GAAAA,EAAAA,gBAAwB/xB,KAAKiyB,iBAAkBjyB,MACvD6wB,EAAIziB,IAAI2jB,GAAAA,EAAAA,gBAAwB/xB,KAAKkyB,iBAAkBlyB,MACvD6wB,EAAIziB,IAAI2jB,GAAAA,EAAAA,cAAsB/xB,KAAKmyB,eAAgBnyB,MACnD6wB,EAAIziB,IAAI2jB,GAAAA,EAAAA,gBAAwB/xB,KAAKoyB,iBAAkBpyB,KACxD,G,mCAES,SACR0F,EACAC,GAIEirB,EAAmByB,eACjB1sB,EAAK2sB,aACLtyB,KAAKmxB,mBAGPnxB,KAAKmxB,iBAAiB9f,KAAK1L,EAAK2sB,aAEnC,G,8BAES,SACR5sB,EACAC,GAEA3F,KAAKkxB,MAAQvrB,EAAKurB,iBAAiBqB,iBAAmB5sB,EAAKurB,MAAQ,IACpE,G,8BAES,SACRxrB,EACAC,GAEA,IAAMkrB,EAAM7wB,KAAK6wB,IACjB7wB,KAAKmxB,iBAAmB,GACxBnxB,KAAKixB,WAAatrB,EAAKsrB,WACnBJ,EAAIgB,OAAO7D,sBAAwBroB,EAAKkY,OAE1C7d,KAAKwyB,cAER,G,4BAIS,SACR9sB,EACAC,GAEY3F,KAAK6wB,IACTgB,OAAO7D,sBAAwBroB,EAAKkY,OAE1C7d,KAAKwyB,cAER,G,8BAES,WACRxyB,KAAK8xB,aACN,G,8BAED,WACE,GAAI9xB,KAAKkxB,OAASlxB,KAAKyyB,YAAc,GAAKzyB,KAAK0yB,WAAa,EAAG,CAC7D,IAAMnB,EAASvxB,KAAK6wB,IAAIU,OAExB,GAAIA,EAAO3sB,OAAQ,CACjB,IAAMisB,EAAM7wB,KAAK6wB,IACjBA,EAAIC,iBAAmB9wB,KAAK2yB,YAAYpB,EAAO3sB,OAAS,GAGtDisB,EAAIC,iBAAmB9wB,KAAK8wB,kBAC5B9wB,KAAK2xB,kBAKL3xB,KAAK2xB,iBAAiBiB,kBAExB5yB,KAAK8wB,iBAAmBD,EAAIC,gBAC7B,CACF,CACF,G,yBAKD,SAAY+B,GACV,IAAMtB,EAASvxB,KAAK6wB,IAAIU,OACxB,IAAKA,EAAO3sB,OACV,OAAQ,EAGV,IAAMkuB,EAAcvB,EAAOhK,QACzB,CAAC9f,EAAOsrB,IACNnC,EAAmByB,eAAeU,EAAO/yB,KAAKmxB,mBAC9C4B,GAASF,IAMb,OADA7yB,KAAKqxB,WAAa,KACXT,EAAmBoC,uBACxBF,EACA9yB,KAAK0yB,WACL1yB,KAAKyyB,YAER,G,kBAED,WACEzyB,KAAK8wB,iBAAmBC,OAAOC,kBAC/BhxB,KAAK6wB,IAAII,WAAajxB,KAAK2yB,YAAY3yB,KAAKixB,YAE5CjxB,KAAKizB,kBACN,G,0BAED,WACMjzB,KAAKoxB,QAITpxB,KAAK8wB,iBAAmBC,OAAOC,kBAC/BhxB,KAAK6wB,IAAII,WAAajxB,KAAK2yB,YAAY3yB,KAAKixB,YAC5CjjB,KAAK3G,cAAcrH,KAAKoxB,OACxBpxB,KAAKoxB,MAAQpjB,KAAKhH,YAAYhH,KAAKizB,iBAAiBvxB,KAAK1B,MAAO,KAChEA,KAAKizB,mBACN,G,yBAED,WACEjzB,KAAKmxB,iBAAmB,GACxBnxB,KAAKixB,YAAc,EAGfjxB,KAAKoxB,QACPpjB,KAAK3G,cAAcrH,KAAKoxB,OACxBpxB,KAAKoxB,WAAQtpB,EAEhB,G,2BAGD,WAEE,GAAI9H,KAAKkjB,QAAUljB,KAAKkzB,eACpB,OAAOlzB,KAAKkzB,eAGhB,GAAIlzB,KAAKqxB,WACP,OAAOrxB,KAAKqxB,WAEd,IAAMH,EAAQlxB,KAAKkxB,MACbiC,EAAa,CACjB9Z,MAAO,EACPrR,OAAQ,GAGV,GAAIkpB,EAAO,CACT,IAAMG,EAAaH,EAAM/O,wBACzBgR,EAAW9Z,MAAQgY,EAAWhY,MAC9B8Z,EAAWnrB,OAASqpB,EAAWrpB,OAC1BmrB,EAAW9Z,OAAU8Z,EAAWnrB,SAGnCmrB,EAAW9Z,MACTgY,EAAW+B,MAAQ/B,EAAW9O,MAAQ2O,EAAM7X,OAAS,EACvD8Z,EAAWnrB,OACTqpB,EAAWgC,OAAShC,EAAW3U,KAAOwU,EAAMlpB,QAAU,EAE3D,CAID,OAFAhI,KAAKkzB,eAAiBlzB,KAAKqxB,WAAa8B,EAEjCA,CACR,G,sBAED,WACE,OAAOnzB,KAAKszB,gBAAgBja,MAAQrZ,KAAKuzB,kBAC1C,G,uBAED,WACE,OAAOvzB,KAAKszB,gBAAgBtrB,OAAShI,KAAKuzB,kBAC3C,G,8BAED,WACE,IAAIC,EAAa,EACjB,IACEA,EAAaxlB,KAAK9D,gBAGnB,CAFC,MAAOuG,GAER,CAID,OAFI+iB,EAAa,MAAKA,EAAa,KAE5BA,CACR,M,kFA3PG5C,G,+CCieN,SA1dM6C,WAYJ,WAAY5C,I,4FAAQ,SAVZ,KAAA6C,oBAA8B,EAC9B,KAAAC,gBAA0B,EAE1B,KAAAC,QAAoB5zB,KAAK6zB,mBAAmBnyB,KAAK1B,MACjD,KAAA8zB,YAA0B,KAC1B,KAAAC,YAA0B,KAC1B,KAAAC,iBAA2B,EAKjCh0B,KAAK6wB,IAAMA,EAEX,IAAMgB,EAAShB,EAAIgB,OACnB7xB,KAAKi0B,YAAc,IAAIC,GAAAA,EACrBrC,EAAOsC,eACPtC,EAAOuC,eACPvC,EAAO1D,wBAGTnuB,KAAKsxB,mBACN,C,sDAES,WACR,IAAM,IAAET,GAAQ7wB,KAChB6wB,EAAI3xB,GAAG6yB,GAAAA,EAAAA,aAAqB/xB,KAAKq0B,cAAsBr0B,MACvD6wB,EAAI3xB,GAAG6yB,GAAAA,EAAAA,YAAoB/xB,KAAKs0B,aAAqBt0B,MACrD6wB,EAAI3xB,GAAG6yB,GAAAA,EAAAA,cAAsB/xB,KAAKu0B,eAAuBv0B,MACzD6wB,EAAI3xB,GAAG6yB,GAAAA,EAAAA,aAAqB/xB,KAAKw0B,cAAsBx0B,MACvD6wB,EAAI3xB,GAAG6yB,GAAAA,EAAAA,MAAc/xB,KAAKy0B,QAAgBz0B,KAC3C,G,iCAES,WACR,IAAM,IAAE6wB,GAAQ7wB,KAChB6wB,EAAIziB,IAAI2jB,GAAAA,EAAAA,aAAqB/xB,KAAKq0B,cAAsBr0B,MACxD6wB,EAAIziB,IAAI2jB,GAAAA,EAAAA,YAAoB/xB,KAAKs0B,aAAqBt0B,MACtD6wB,EAAIziB,IAAI2jB,GAAAA,EAAAA,cAAsB/xB,KAAKu0B,eAAuBv0B,MAC1D6wB,EAAIziB,IAAI2jB,GAAAA,EAAAA,aAAqB/xB,KAAKw0B,cAAsBx0B,MACxD6wB,EAAIziB,IAAI2jB,GAAAA,EAAAA,MAAc/xB,KAAKy0B,QAAgBz0B,KAC5C,G,qBAEM,WACLA,KAAK00B,sBACL10B,KAAK20B,aAEL30B,KAAK6wB,IAAM7wB,KAAK4zB,QAAU,KAC1B5zB,KAAK8zB,YAAc9zB,KAAK+zB,YAAc,IACvC,G,2BAES,SAAcruB,EAA4BC,G,MAClD,IAAMivB,EAAOjvB,EAAKivB,KACdA,EAAKvwB,OAASwwB,GAAAA,EAAAA,OACX70B,KAAKoxB,QACRpxB,KAAK8zB,YAAcc,EACnB50B,KAAK+zB,YAAuB,QAAT,EAAApuB,EAAKmvB,YAAIvoB,IAAAA,EAAAA,EAAI,KAChCvM,KAAKoxB,MAAQpjB,KAAKhH,YAAYhH,KAAK4zB,QAAS,MAGjD,G,2BAES,SAAcluB,EAA4BC,GAClD,IAAMksB,EAAS7xB,KAAK6wB,IAAIgB,OACpBlsB,EAAKovB,QAAQC,KACfh1B,KAAKi0B,YAAY3yB,OAAOuwB,EAAOoD,gBAAiBpD,EAAOqD,iBAEvDl1B,KAAKi0B,YAAY3yB,OAAOuwB,EAAOsC,eAAgBtC,EAAOuC,eAEzD,G,gCAMO,WACN,IAAQN,YAAac,EAAMb,YAAae,EAAlC,IAAwCjE,GAAQ7wB,MAChD,iBAAEm1B,EAAF,MAA4BjE,GAAUL,EAC5C,IAAK+D,IAAS1D,EACZ,OAGF,IAAMP,EAAamE,EAAOA,EAAKnE,MAAQiE,EAAKjE,MACtCtmB,EAAWyqB,EAAOA,EAAKzqB,SAAWuqB,EAAKvqB,SAE7C,GACEsmB,EAAMyE,SACLzE,EAAM0E,QAAU1E,EAAM0E,SAAW1E,EAAM2E,OACzB,IAAfV,EAAKntB,MAKL,OAHAzH,KAAK20B,kBAEL30B,KAAK2zB,gBAAkB,GAKzB,IACGwB,GACDjE,EAAMhO,SACLgO,EAAMvM,eACNuM,EAAMqE,WAEP,OAGF,IAAMC,EAAa3E,EAAI4E,sBACvB,GAAmB,OAAfD,EACF,OAGF,IAAME,EAAeC,YAAYC,MAAQjF,EAAMkF,QAAQzqB,MACjDuZ,EAAexjB,KAAKmO,IAAI4hB,EAAMvM,cAEpC,GAAI+Q,GAAiB,IAAMrrB,EAAYsa,EACrC,OAGF,IAAMmR,EAAkBnF,EAAM0E,QAAU1E,EAAMkF,QAAQE,MAChDC,EAAqBh2B,KAAKi0B,YAAYgC,eACtC,OAAE1E,EAAF,aAAU2E,GAAiBrF,EAE3BsF,EACJxF,EAAM2E,OACNn0B,KAAKC,IAAIuvB,EAAM0E,OAAQl0B,KAAKmJ,MAAOD,EAHvBknB,EAAOqD,EAAKntB,OAG4B2uB,WAAc,IAC9DC,EAAWP,EAAkC,IAAfnF,EAAM0E,OAAiBK,EAAe,EAGpEY,EAAkBD,GACnBF,EAAcxF,EAAM0E,QAAUgB,EAChB,EAAdF,EAAmBH,EAGlBO,EAAwBf,EAAWgB,IAAM7R,EAG/C,GAAI2R,GAAmBC,EACrB,OAGF,IACIE,EADAC,EAAmC3F,OAAOC,kBAG9C,IACEyF,EAAgB7B,EAAKntB,MAAQ,EAC7BgvB,EAAgBP,EAChBO,IACA,CAIA,IAAME,EAAmBpF,EAAOkF,GAAeL,WAK/C,GAJAM,EAA2BL,EACtBhsB,EAAWssB,GAAqB,IAAUN,GAC1ChsB,EAAWssB,EAAoBX,EAEhCU,EAA2BH,EAC7B,KAEH,CAGGG,GAA4BJ,IAGhClvB,GAAAA,EAAAA,KAAY,YAAYwtB,EAAKgC,KAC3B9B,EAAO,SAAWA,EAAK/B,MAAQ,eAE/B6B,EAAKntB,8FACkFgvB,iCAErF1F,OAAO8F,SAASb,IAAeA,EAAa,MAAMnxB,QAAQ,GAAK,mEAErByxB,EAAgBzxB,QAAQ,0DACvB6xB,EAAyB7xB,QACpE,oCAEqB0xB,EAAsB1xB,QAAQ,QACvDgsB,EAAI4F,cAAgBA,EAChBX,GAEF91B,KAAKi0B,YAAY6C,OAAOpB,EAAc/E,EAAM0E,QAE9Cr1B,KAAK20B,aACDC,EAAK1J,SACPlrB,KAAK8zB,YAAc9zB,KAAK+zB,YAAc,KACtCa,EAAK1J,OAAO6L,SAEdlG,EAAIhxB,QAAQkyB,GAAAA,EAAAA,4BAAoC,CAAE6C,OAAME,OAAMnE,UAC/D,G,0BAES,SACRjrB,EADQ,GAEsB,IAA9B,KAAEkvB,EAAF,KAAQE,GAAsB,EAE9B,GACEF,EAAKvwB,OAASwwB,GAAAA,EAAAA,MACd9D,OAAO8F,SAASjC,EAAKgC,IACrB,CACA,IAAMjG,EAAQmE,EAAOA,EAAKnE,MAAQiE,EAAKjE,MACjCtmB,EAAWyqB,EAAOA,EAAKzqB,SAAWuqB,EAAKvqB,SAS7C,GAPArK,KAAK20B,aAEL30B,KAAK0zB,oBAAsBkB,EAAKntB,MAEhCzH,KAAK2zB,gBAAkB,EAGnB3zB,KAAK6wB,IAAIgB,OAAOmF,sBAAuB,CACzC,IAAMvvB,EAAQzH,KAAK6wB,IAAIU,OAAOqD,EAAKntB,OAC7BwvB,GACHxvB,EAAM4tB,OAAS5tB,EAAM4tB,OAAO9wB,MAAQ,GAAKosB,EAAM0E,OAC5C6B,GACHzvB,EAAM4tB,OAAS5tB,EAAM4tB,OAAOhrB,SAAW,GAAKA,EAC/C5C,EAAM4tB,OAAS,CAAE9wB,MAAO0yB,EAAa5sB,SAAU6sB,GAC/CzvB,EAAM0vB,YAAch2B,KAAKmJ,MAAO,EAAI2sB,EAAeC,EACpD,CACGtC,EAAKwC,aAOPp3B,KAAKu0B,eAAexC,GAAAA,EAAAA,cANuB,CACzCpB,QACAiE,OACAE,OACApjB,GAAIkjB,EAAKvwB,MAId,CACF,G,4BAES,SACRqB,EACAC,GAEA,IAAM,KAAEivB,EAAF,KAAQE,GAASnvB,EACjBgrB,EAAQmE,EAAOA,EAAKnE,MAAQiE,EAAKjE,MAEvC,GAAIA,EAAMyE,QACR,OAGF,GAAIR,EAAKvwB,OAASwwB,GAAAA,EAAAA,MAAsC,gBAAZD,EAAKgC,GAC/C,OAKF,IAAMS,EAAe1G,EAAM2G,QAAQjsB,IAAMslB,EAAMkF,QAAQzqB,MAEpDulB,EAAM4G,kBACPv3B,KAAKi0B,YAAY6C,OAAOO,EAAc1G,EAAM0E,QAE9C1E,EAAMqF,WAAah2B,KAAKi0B,YAAYgC,cAGlCj2B,KAAKg0B,iBADHY,EAAKwC,YACiBC,EAAe,IAEf,CAE3B,G,qBAES,SAAQ3xB,EAAqBC,GAErC,OAAQA,EAAKovB,SACX,KAAKyC,GAAAA,EAAAA,gBACL,KAAKA,GAAAA,EAAAA,kBACHx3B,KAAK20B,aAKV,G,wBAED,WACE3mB,KAAK3G,cAAcrH,KAAKoxB,OACxBpxB,KAAKoxB,WAAQtpB,CACd,G,yBAGD,WAEE,IAAM2vB,EAAkBz3B,KAAK2zB,eAG7B,IAAyB,IAArB8D,IAFgBz3B,KAAKi0B,YAEkByD,cACzC,OAAOD,EAIT,IAAIE,EAAmB33B,KAAK43B,sBAI5B,OAAyB,IAArBH,GAA0Bz3B,KAAK6wB,IAAIU,OAAOoG,GAAkBE,UACvDJ,IAGgB,IAArBA,IACFE,EAAmBx2B,KAAKyhB,IAAI6U,EAAiBE,IAGxCA,EACR,E,IAuKD,SAAkBjG,GAChB1xB,KAAK2zB,eAAiBjC,CACvB,G,iCAvKO,WACN,IAAM,YAAEoC,EAAF,YAAeC,EAAf,IAA4BlD,GAAQ7wB,MACpC,aAAE83B,EAAF,OAAgBjG,EAAhB,aAAwBqE,EAAxB,MAAsChF,GAAUL,EAChDkH,EAAsBhE,EACxBA,EAAY1pB,SACZypB,EACAA,EAAYzpB,SACZ,EAKEsa,EACJuM,GAAgC,IAAvBA,EAAMvM,aAAqBxjB,KAAKmO,IAAI4hB,EAAMvM,cAAgB,EAC/DqT,EAAQh4B,KAAKi0B,YACfj0B,KAAKi0B,YAAYgC,cACjBpE,EAAO1D,uBAELqH,EAAa3E,EAAI4E,sBACjBc,GACHf,EAAaA,EAAWgB,IAAM,GAAK7R,EAGlCsT,EAAYj4B,KAAKk4B,cACnBF,EACA9B,EACA4B,EACAvB,EACA1E,EAAOsG,mBACPtG,EAAOuG,sBAET,GAAIH,GAAa,EACf,OAAOA,EAET7wB,GAAAA,EAAAA,OAEImvB,EAAwB,uBAAyB,mBADnD,mCAMF,IAAI8B,EAAqBN,EACrB52B,KAAKyhB,IAAImV,EAAqBlG,EAAOwG,oBACrCxG,EAAOwG,mBACPC,EAAWzG,EAAOsG,mBAClBI,EAAa1G,EAAOuG,qBAExB,IAAK7B,EAAuB,CAE1B,IAAMvC,EAAmBh0B,KAAKg0B,iBAC1BA,IASFqE,GAHwBN,EACpB52B,KAAKyhB,IAAImV,EAAqBlG,EAAO2G,iBACrC3G,EAAO2G,iBAC4BxE,EACvC5sB,GAAAA,EAAAA,MACE,qBAAqBjG,KAAKmJ,MACxB,IAAO0pB,iDACuC7yB,KAAKmJ,MACnD,IAAO+tB,SAIXC,EAAWC,EAAa,EAE3B,CASD,OARAN,EAAYj4B,KAAKk4B,cACfF,EACA9B,EACA4B,EACAvB,EAAwB8B,EACxBC,EACAC,GAEKp3B,KAAKC,IAAI62B,EAAW,EAC5B,G,2BAEO,SACNQ,EACAvC,EACA4B,EACAY,EACAJ,EACAC,G,MAEA,IAAM,YACJzE,EADI,YAEJC,EACAL,oBAAqBiF,GACnB34B,MACE,OAAEuxB,GAAWvxB,KAAK6wB,IAClBppB,EAAQ8pB,EAAOoH,GACf3D,KAAuB,QAAd,EAAAvtB,aAAK,EAALA,EAAOstB,eAAOxoB,IAAAA,OAAA,EAAAA,EAAEyoB,MACzB4D,EAAkBnxB,aAAK,EAALA,EAAOoxB,SAEzBd,EAAsBhE,EACxBA,EAAY1pB,SACZypB,EACAA,EAAYzpB,SACZ,EACJ,IAAK,IAAIc,EAAI2sB,EAAc3sB,GAAK+qB,EAAc/qB,IAAK,CACjD,IAAM2tB,EAAYvH,EAAOpmB,GAEzB,IACG2tB,GACAF,GAAmBE,EAAUD,WAAaD,EAE3C,SAGF,IAMIG,EANEC,EAAeF,EAAU/D,QACzBkE,GACHlF,EACGiF,aAAY,EAAZA,EAAcE,WACdF,aAAY,EAAZA,EAAcG,wBAA0BpB,EAU5CgB,EADE5tB,GAAKwtB,EACML,EAAWG,EAEXF,EAAaE,EAG5B,IAAMW,EAAkB7H,EAAOpmB,GAAGirB,WAC5BiD,EAAyBD,EAAUH,EAAeF,EAWxD,GATA3xB,GAAAA,EAAAA,MACE,wEAAwE+D,KAAKhK,KAAKmJ,MAChFyuB,MACGK,KAAWH,KAAeP,KAAoBW,KAOnDN,EAAaK,IAIM,IAAlBC,IACEtI,OAAO8F,SAASwC,IAChBrE,IAASh1B,KAAKg0B,kBACfqF,EAAgBX,GAIlB,OAAOvtB,CAEV,CAED,OAAQ,CACT,M,yOAndGsoB,G,uKC8DN,IAMM6F,GAAAA,WA2BJ,WAAaC,EAAqB1zB,EAAmC2zB,I,4FAAkB,SAvBtE,KAAAC,YAA2B,CAAC,EAMrC,KAAAC,wBAA0B,GAG1B,KAAA7N,YAAwD,KAIxD,KAAA8N,UAAoB,KACpB,KAAAC,SAAqB,KACrB,KAAA/Q,OAAkB,KAClB,KAAAgR,YAAsB,KACtB,KAAAC,WAAqB,KAErB,KAAAhW,SAAgD,CACtDjB,KAAM,MAIN7iB,KAAKu5B,IAAMA,EACXv5B,KAAK6F,OAASA,EAEd7F,KAAKw5B,KAAOA,EACXx5B,KAAKw5B,KAAaO,MAAQ,QAE3B/5B,KAAKke,aAAesb,EAAK1uB,KACzB9K,KAAKzB,OAASg7B,EAAKC,EAAKx6B,SAAiBg7B,UAEzCh6B,KAAKi6B,YAAc,IAAIC,EAAAA,GAAO,GAE9Bl6B,KAAKke,aAAa5P,iBAAiB,SAAS5I,IAC1C,IAAIy0B,EACEC,GAAe10B,EAAMuS,eAAiBvS,EAAMsS,QAA6BrI,MAE/E,GAAKyqB,EAAL,CAGA,OADAhzB,EAAAA,EAAAA,KAAYgzB,GACJA,EAAWrb,MACjB,KAAKqb,EAAWC,kBACdF,EAAW,iCACX,MACF,KAAKC,EAAWE,iBACdH,EAAW,6HAEXn6B,KAAKu6B,kBAAkBH,GACvB,MACF,KAAKA,EAAWI,kBACdL,EAAW,6DACX,MACF,KAAKC,EAAWK,4BACdN,EAAW,oHACX,MAEF,QACEA,EAAWC,EAAWM,QAG1BtzB,EAAAA,EAAAA,MAAa,gBAAgB+yB,IAvBN,CAuBvB,IAGFn6B,KAAK26B,YACN,C,6CA0CD,SAAgBt2B,EAAcsU,IAC5B2gB,EAAWsB,MAAMv2B,GAAQrE,KAAK46B,MAAMv2B,IAAS,IACtBgN,KAAKsH,EAC7B,G,wBAED,SAAmBtU,EAAcsU,GAC/B,QAA+B7Q,IAA3BwxB,EAAWsB,MAAMv2B,GAAqB,OAAO,EAEjD,IAAM0uB,EAAQuG,EAAWsB,MAAMv2B,GAAMqkB,QAAQ/P,GAC7C,OAAe,IAAXoa,IAEJuG,EAAWsB,MAAMv2B,GAAMw2B,OAAO9H,EAAO,IAE9B,EACR,K,yBAtDD,WACE,OAAI/yB,KAAK25B,YAAcmB,IAAiBA,IACnCrtB,MAAMzN,KAAKke,aAAa7T,UAEtBrK,KAAK25B,WAAa,EAFsB35B,KAAKke,aAAa7T,QAGlE,G,sBAED,WACE,GAAIrK,KAAK6wB,IAAIK,MAAO,CAClB,IAAKlxB,KAAK6oB,OACR,OAAO7oB,KAAKu5B,IAAIwB,iBAAiB,EAAG/6B,KAAK6wB,IAAIK,MAAM7mB,UAIrD,IAAM6C,EAAY/L,KAAKmJ,MAAMtK,KAAK6wB,IAAIK,MAAM7mB,SAAWrK,KAAK65B,aACtDmB,EAAU75B,KAAKmJ,MAAMtK,KAAK6wB,IAAIK,MAAM7mB,SAAWrK,KAAK85B,YAE1D,OAAO95B,KAAKu5B,IAAIwB,iBAAiB7tB,EAAW8tB,EAC7C,CAED,OAAOh7B,KAAKu5B,IAAIwB,kBACjB,G,qBAGD,WACE/6B,KAAKke,aAAalF,oBAAoB,OAAQhZ,KAAK8jB,SAASjB,MAG5D,IAAMoY,EAAaj7B,KAAK6wB,IAExBoK,EAAWrR,IAAMqR,EAAWC,KAAO,OAKnCl7B,KAAKi6B,YAAYkB,cAEjBn7B,KAAK6wB,IAAIuK,SACV,G,8BAkBO,SAAkB/2B,GACxB,QAA+ByD,IAA3BwxB,EAAWsB,MAAMv2B,GAKrB,IAAK,IAAI8G,EAAI,EAAGA,EAAImuB,EAAWsB,MAAMv2B,GAAMO,OAAQuG,IACjDmuB,EAAWsB,MAAMv2B,GAAM8G,GAAGnL,KAAKzB,OAAQyB,KAAK6wB,IAE/C,G,+BAEO,SAAmBlhB,GAEzB,GAAiB,GAAdA,EAAMoP,KAAU,CAEjB,IAAI/c,EAAOhC,KAAKzB,OAAO2P,cAAgB,EAYvC,OAVAlO,KAAKob,UACLpb,KAAKq7B,aAELr7B,KAAKzB,OAAO2P,YAAYlM,GACxBhC,KAAKzB,OAAOskB,YACZ7iB,KAAK6wB,IAAIyK,KAAKC,KAAAA,OAAAA,aAA0B,KACtCv7B,KAAKzB,OAAOskB,MAAZ,GAKH,CAED,OAAuD,IAAnD7iB,KAAKy5B,YAAY8B,KAAAA,WAAAA,cACnBn0B,EAAAA,EAAAA,KAAY,sCACZpH,KAAK6wB,IAAI2K,qBAI4C,IAAnDx7B,KAAKy5B,YAAY8B,KAAAA,WAAAA,cACnBn0B,EAAAA,EAAAA,KAAY,2DACZpH,KAAK6wB,IAAI4K,sBACTz7B,KAAK6wB,IAAI2K,0BAIPx7B,KAAKy5B,YAAY8B,KAAAA,WAAAA,aAAgC,IACnDn0B,EAAAA,EAAAA,KAAY,sCACZpH,KAAK6wB,IAAIuK,UACTp7B,KAAKw5B,KAAK7pB,MAAQ,IAAMA,EACxB3P,KAAKw5B,KAAK35B,QAAQ,UAErB,G,iCAEO,SAAqB8P,GAE3B,IAAyB,IAArBjE,UAAUgwB,OAAd,CAEA,GAAI17B,KAAKy5B,YAAY8B,KAAAA,WAAAA,gBAAmCv7B,KAAK05B,wBAW3D,OAVAtyB,EAAAA,EAAAA,KAAY,mCAGZ3F,YAAW,IAAMzB,KAAK6wB,IAAI8K,aAAa,UAGvC37B,KAAK6wB,IAAIyK,KAAKC,KAAAA,OAAAA,aAA0B,KACtCv7B,KAAKy5B,YAAY8B,KAAAA,WAAAA,eAAkC,CAAnD,IAMJn0B,EAAAA,EAAAA,KAAY,wCACZpH,KAAK6wB,IAAIuK,UACTp7B,KAAKw5B,KAAK7pB,MAAQ,IAAMA,EACxB3P,KAAKw5B,KAAK35B,QAAQ,QAnBoB,CAoBvC,G,sBAEO,SAAU+7B,EAAaj2B,GAC7B,IAAMgK,EAA4C,CAChD+qB,QAAS,iBAAiB/0B,EAAKtB,iBAAiBsB,EAAKk2B,WAAWl2B,EAAKovB,WAGvE/0B,KAAKi6B,YAAYrQ,IAAIja,EAAM+qB,QAAS,CAClChpB,GArRkB,cAyRhB1R,KAAKy5B,YAAY9zB,EAAKtB,MAAOrE,KAAKy5B,YAAY9zB,EAAKtB,OAAS,EAC3DrE,KAAKy5B,YAAY9zB,EAAKtB,MAAQ,EAE/BsB,EAAKk2B,MACJz0B,EAAAA,EAAAA,MAAauI,EAAM+qB,QAAS,CAAE/0B,SADnByB,EAAAA,EAAAA,KAAYuI,EAAM+qB,SAG9B/0B,EAAKtB,OAASk3B,KAAAA,WAAAA,eAChB5rB,EAAMoP,KAAO,EACb/e,KAAK87B,oBAAoBnsB,IAChBhK,EAAKk2B,OAASl2B,EAAKtB,OAASk3B,KAAAA,WAAAA,aAAiD,oCAAjB51B,EAAKovB,SAC1EplB,EAAMoP,KAAO,EACb/e,KAAKu6B,kBAAkB5qB,IACdhK,EAAKk2B,QACd77B,KAAK6wB,IAAIuK,UACTh0B,EAAAA,EAAAA,KAAY,gCACZpH,KAAKw5B,KAAK7pB,MAAQ,IAAMA,EACxB3P,KAAKw5B,KAAK35B,QAAQ,SAErB,G,6BAEO,SAAiB4H,GACvB,OAAIzH,KAAKzB,OAAOw9B,WAAWxQ,kBAClBvrB,KAAKzB,OAAOw9B,WAAWxQ,kBAAkB9jB,GAG9CA,EAAMO,OAAeP,EAAMO,OAAS,IACpCP,EAAM4R,MAAclY,KAAKmJ,MAAoB,EAAd7C,EAAM4R,MAAY,IAAM,IACvD5R,EAAM2xB,QAAiB3xB,EAAM2xB,QAAU,IAAQ,OAE5C,GACR,G,mCAEO,WACN,IAAKp5B,KAAK45B,SAAU,OAEpB,IAAMzoB,EAAoC,GAE1CnR,KAAK45B,SAASrI,OAAO7G,SAAQ,CAACjjB,EAAOsrB,KACnC5hB,EAAYE,KAAK,CACfK,GAAIqhB,EACJ/qB,OAAQP,EAAMO,OACdqR,MAAO5R,EAAM4R,MACb+f,QAAS3xB,EAAM2xB,QACfnuB,MAAOjL,KAAKg8B,gBAAgBv0B,GAC5BgK,SAAUhK,EAAMiK,KAAO1R,KAAK6wB,IAAIoL,YAEhCpqB,eAAgB,KACd7R,KAAK6wB,IAAI8H,aAAe5F,CAAxB,GATJ,IAcF5hB,EAAYE,KAAK,CACfK,IAAK,EACLzG,MAAOjL,KAAKzB,OAAOmK,SAAS,QAC5B+I,UAAU,EACVI,eAAgB,IAAM7R,KAAK6wB,IAAI8H,cAAgB,IAGjD34B,KAAKzB,OAAOoW,sBAAsBjB,IAAIvC,EACvC,G,wBAEO,WACNnR,KAAK6wB,IAAI8K,WAAW,GACpB37B,KAAKke,aAAalF,oBAAoB,OAAQhZ,KAAK8jB,SAASjB,KAC7D,G,+BAEO,SAAmBqZ,GACzB,IAAMj5B,EAAS,CAAC,EACVk5B,EAAUh5B,OAAOH,KAAKk5B,GAC5B,IAAK,IAAI/wB,EAAI,EAAGA,EAAIgxB,EAAQv3B,OAAQuG,IAClClI,EAAOk5B,EAAQhxB,IAAM+wB,EAAIC,EAAQhxB,IAGnC,OAAOlI,CACR,G,2BAEM,SAAem5B,EAAiBjM,GACrCnwB,KAAKi6B,YAAYoC,UAAUD,EAASjM,EACrC,G,yBAEO,SAAayL,EAAaj2B,GAEhC3F,KAAK45B,SAAWj0B,EAChB3F,KAAKs8B,uBACN,G,wBAEO,WACN,IACMP,EAAa/7B,KAAKzB,OAAOw9B,WAEzBQ,GAAiBR,aAAU,EAAVA,EAAYlQ,cAHf7rB,KAAKw5B,KAAKx6B,SAGgC6sB,YAE9D7rB,KAAK6rB,YAAc0Q,EAAiBv8B,KAAKw8B,kBAAkBD,GAAkB,CAAC,EAE1E,CAAE,GAAI,QAASrM,SAASlwB,KAAKke,aAAaue,WAAaz8B,KAAKke,aAAa7Q,eAA+CvF,IAAnC9H,KAAK6rB,YAAYoC,gBACxGjuB,KAAK6rB,YAAYoC,eAAgB,IAKI,IAAnCjuB,KAAK6rB,YAAYoC,gBACnBjuB,KAAK8jB,SAASjB,KAAO7iB,KAAK08B,WAAWh7B,KAAK1B,MAC1CA,KAAKke,aAAa5P,iBAAiB,OAAQtO,KAAK8jB,SAASjB,OAK3D7iB,KAAK6rB,YAAY8Q,mBAAqB/L,GACtC5wB,KAAK6rB,YAAY+Q,cAAgBnJ,GACjCzzB,KAAK6rB,YAAYuM,qBAAuB,GAIxCp4B,KAAK6rB,YAAYpf,MAAQzM,KAAKi6B,YAE9Bj6B,KAAK6wB,IAAM,IAAI0K,KAAJ,CAAUv7B,KAAK6rB,aAK1B7rB,KAAKzB,OAAOsyB,IAAM7wB,KAAK6wB,IAKvB7wB,KAAK6wB,IAAI3xB,GAAGq8B,KAAAA,OAAAA,OAAoB,CAAC71B,EAAOC,IAAS3F,KAAK68B,SAASn3B,EAAOC,KACtE3F,KAAK6wB,IAAI3xB,GAAGq8B,KAAAA,OAAAA,iBAA8B,CAAC71B,EAAOC,IAAS3F,KAAK88B,YAAYp3B,EAAOC,KACnF3F,KAAK6wB,IAAI3xB,GAAGq8B,KAAAA,OAAAA,cAA2B,CAAC71B,EAAOC,KAEzC3F,KAAK6rB,YAAYkR,iBACnB/8B,KAAK85B,WAAa95B,KAAK6rB,YAAYkR,iBAC1B/8B,KAAK6rB,YAAY0C,wBAC1BvuB,KAAK85B,WAAa95B,KAAK6rB,YAAY0C,sBAAwB5oB,EAAKovB,QAAQiI,gBAG1Eh9B,KAAK6oB,OAASljB,EAAKovB,QAAQC,KAC3Bh1B,KAAK65B,YAAcl0B,EAAKovB,QAAQkI,cAEhCj9B,KAAK25B,UAAY35B,KAAK6oB,OAASiS,IAAWn1B,EAAKovB,QAAQkI,cAEvDj9B,KAAKzB,OAAO8L,SAASlJ,KAAKmJ,MAAMtK,KAAK25B,YAOjC35B,KAAK6oB,SAAQ7oB,KAAK05B,wBAA0B,IAA/B,IAGnB15B,KAAK6wB,IAAIyK,KAAKC,KAAAA,OAAAA,aAA0B,KAGtCv7B,KAAKw5B,KAAK35B,QAAQ,iBAAlB,IAGFG,KAAK6wB,IAAI3xB,GAAGq8B,KAAAA,OAAAA,iBAA8B,CAAC2B,EAAIv3B,KAE7C,IAAM+O,EAAe1U,KAAK6wB,IAAIsE,kBACzB,EACDxvB,EAAK8B,MAEHkK,EAAyB3R,KAAK6wB,IAAIsE,iBACpCxvB,EAAK8B,OACJ,EAELzH,KAAKzB,OAAOoW,sBAAsBG,OAAO,CAAEpD,GAAIgD,EAAc/C,yBAAwBC,UAAU,GAA/F,IAGF5R,KAAK6wB,IAAIsM,YAAYn9B,KAAKke,cAE1Ble,KAAK6wB,IAAIuM,WAAWp9B,KAAK6F,OAAOuY,IACjC,G,wBAEO,WACNpe,KAAKq7B,YACN,M,kFAtYG/B,G,qjBANuB,IAAUC,GAObD,GAAAA,MAAoC,CAAC,IAPxBC,GCzElB16B,KD2EWw+B,gBAAkB9D,GAAI+D,QAClC,SAvBpB,SAAmD9+B,GACjD,IAAMD,EAASyB,KAEVxB,IAEAD,EAAOw9B,aACVx9B,EAAOw9B,WAAa,CAAC,GAGlBx9B,EAAOw9B,WAAWlQ,cACrBttB,EAAOw9B,WAAWlQ,YAAcrtB,EAAQqtB,aAKtCrtB,EAAQ+sB,oBAAsBhtB,EAAOw9B,WAAWxQ,oBAClDhtB,EAAOw9B,WAAWxQ,kBAAoB/sB,EAAQ+sB,mBAEjD,IA1D6B,SAAUgO,GACtC,IAAKgC,KAAAA,cAEH,YADAn0B,EAAAA,EAAAA,KAAY,4CAId,IAAMwkB,EAAQ2N,EAAIgE,QAAQ,SAErB3R,GAMJA,EAAc4R,sBAAsB,CACnCC,gBAAiB,SAAU53B,GAIzB,MAHkB,6DAGJ4F,KAAK5F,EAAOxB,MAAc,WAFvB,UAGJoH,KAAK5F,EAAOuY,KAAa,QAE/B,EACR,EAEDsf,aAAc,SAAU73B,EAAmC2zB,GAOzD,OANIA,EAAK/I,aACP+I,EAAK/I,YAAYrV,UAGnBoe,EAAK/I,YAAc,IAAI6I,GAAWC,EAAK1zB,EAAQ2zB,GAExCA,EAAK/I,WACb,GACA,GAGF8I,EAAYD,WAAaA,IA5BxBlyB,EAAAA,EAAAA,MAAa,gCA6BhB,CClDDo2B,CAAsB3+B,KAEtB,IACM8+B,GAAAA,SAAAA,I,isBA0BJ,WAAap/B,EAAwBC,GAA2C,MAK9E,G,4FAL8E,UAC9E,cAAMD,IAzBSoO,UAAY,CAC3BixB,eAAgB,KAMV,EAAAC,cAAgB,CACtBC,gBAAiB,GACjBC,cAAe,GACft3B,SAAU,EACVu3B,cAAe,EACfC,YAAa,GAEP,EAAAC,eAAiB,CACvBJ,gBAAiB,GACjBC,cAAe,GACfC,cAAe,EACfC,YAAa,GASb,EAAKz/B,QAAUA,GAEX,EAAKA,QAAS,aAIlB,GAAMK,IAAAA,YAaJs/B,EAAAA,GAAAA,+BAA8B5/B,QAV9B,GAFA6I,EAAAA,EAAAA,KAAY,2EAEP7I,EAAO6/B,YAAY,iCAAkC,CACxD,IAAM1D,EAAU,kCAIhB,OAHAtzB,EAAAA,EAAAA,KAAYszB,GAEZn8B,EAAOsD,OAAM,IAAMtD,EAAOsB,QAAQ,QAAS,IAAImX,MAAM0jB,MACrD,KACD,CAlB2E,OAyB9E,EAAKxtB,UAAYnL,EAAU,EAAKvD,QAAQ0O,WAExC3O,EAAO6f,IAAI,CACT/Z,KAAM,EAAK7F,QAAQ6F,KACnB+Z,IAAK,EAAK5f,QAAQ4f,MAGpB7f,EAAOsD,OAAM,KACX,EAAKw8B,iBAGL,EAAK/S,MAAS/sB,EAAesyB,IAExBhyB,IAAAA,YACH,EAAKy/B,kBACN,IAxC2E,CA0C/E,C,mCAED,WAEMt+B,KAAKsrB,OAAOtrB,KAAKsrB,MAAM8P,UACvBp7B,KAAKu+B,WAAWv+B,KAAKu+B,UAAUnD,UAEnC/zB,cAAcrH,KAAKw+B,oBACpB,G,6BAED,WACE,OAAOx+B,KAAKsrB,MAAMiG,OAAOvxB,KAAKsrB,MAAMqN,aACrC,G,4BAED,WACE,OAAOx3B,KAAKmJ,MAAMtK,KAAKsrB,MAAM/jB,QAC9B,G,sBAED,WACE,OAAOvH,KAAKsrB,KACb,G,4BAEO,WACNtrB,KAAKzB,OAAOuC,IAAI,QAAQ,KACtBd,KAAKzB,OAAOc,SAAS,kCAArB,IAGFW,KAAKzB,OAAOuC,IAAI,WAAW,KACrBd,KAAKkN,WACPlN,KAAKzB,OAAO2P,YAAYlO,KAAKkN,UAC9B,GAEJ,G,8BAEO,YACNuxB,EAAAA,GAAAA,iBAAgBz+B,KAAKsrB,OAErBtrB,KAAKu+B,UAAYv+B,KAAKxB,QAAQ0sB,OAAOwT,YAErC1+B,KAAKu+B,UAAUr/B,GAAG6yB,GAAAA,OAAAA,cAAqB,CAAC7J,EAAkB/gB,KACxDC,EAAAA,EAAAA,MAAa,WAAW8gB,EAAQxW,YAAavK,GAE1C+gB,EAAQyW,YACT3+B,KAAKxB,QAAQypB,qBAAqB2W,mBAAmB1W,EAAQyW,WAA7D,IAGJ3+B,KAAK69B,cAAcp3B,SAAW,EAAIzG,KAAKxB,QAAQypB,qBAAqB4W,gBAEpE7+B,KAAK8+B,UACN,G,sBAEO,WACN9+B,KAAKu+B,UAAUr/B,GAAG6yB,GAAAA,OAAAA,sBAA6B,CAACvhB,EAAgBuuB,EAAUx6B,KACxE,IAAMy6B,EAAkB,QAAXxuB,EAAmBxQ,KAAK69B,cAAgB79B,KAAKk+B,eAE1Dc,EAAKlB,gBAAgBzsB,KAAK9M,GAC1By6B,EAAKhB,eAAiBz5B,CAAtB,IAGFvE,KAAKu+B,UAAUr/B,GAAG6yB,GAAAA,OAAAA,oBAA2B,CAACvhB,EAAgBuuB,EAAUx6B,KACtE,IAAMy6B,EAAkB,QAAXxuB,EAAmBxQ,KAAK69B,cAAgB79B,KAAKk+B,eAE1Dc,EAAKjB,cAAc1sB,KAAK9M,GACxBy6B,EAAKf,aAAe15B,CAApB,IAGFvE,KAAKu+B,UAAUr/B,GAAG6yB,GAAAA,OAAAA,aAAoB,IAAM/xB,KAAK69B,cAAcp3B,aAC/DzG,KAAKu+B,UAAUr/B,GAAG6yB,GAAAA,OAAAA,WAAkB,IAAM/xB,KAAK69B,cAAcp3B,aAE7DzG,KAAKw+B,oBAAsBx3B,aAAY,KACrC,IAAMi4B,EAAmBj/B,KAAKk/B,SAASl/B,KAAK69B,cAAcC,iBACpDqB,EAAiBn/B,KAAKk/B,SAASl/B,KAAK69B,cAAcE,eAElDqB,EAAoBp/B,KAAKk/B,SAASl/B,KAAKk+B,eAAeJ,iBACtDuB,EAAkBr/B,KAAKk/B,SAASl/B,KAAKk+B,eAAeH,eAO1D,OALA/9B,KAAK69B,cAAcC,gBAAkB,GACrC99B,KAAK69B,cAAcE,cAAgB,GACnC/9B,KAAKk+B,eAAeJ,gBAAkB,GACtC99B,KAAKk+B,eAAeH,cAAgB,GAE7B/9B,KAAKzB,OAAOsB,QAAQ,UAAW,CACpCgG,OAAQ,mBACRI,KAAM,CACJC,cAAek5B,EACfh5B,YAAai5B,EACb/4B,WAAYtG,KAAKk+B,eAAeF,cAChCx3B,SAAUxG,KAAKk+B,eAAeD,aAEhCl4B,IAAK,CACHG,cAAe+4B,EACf74B,YAAa+4B,EACb14B,SAAUzG,KAAK69B,cAAcp3B,SAC7BH,WAAYtG,KAAK69B,cAAcG,cAC/Bx3B,SAAUxG,KAAK69B,cAAcI,aAE/Bt3B,kBAAoB3G,KAAKsrB,MAAc3kB,kBAAoB,GAf7D,GAiBC3G,KAAK2M,UAAUixB,eACnB,G,sBAEO,SAAUj4B,GAChB,OAAOA,EAAK25B,QAAO,CAACxtB,EAAWC,IAAcD,EAAIC,GAAG,EACrD,I,4OA3KG4rB,CADS9+B,IAAAA,UAAkB,W,gUA+KjCA,IAAAA,eAAuB,iBAAkB8+B,ICpJzC,IAAM4B,GAAUC,EAAQ,KAGlBC,GAAS5gC,IAAAA,aAAqB,UAC9B6gC,GAAU7gC,IAAAA,aAAqB,WAErC4gC,GAAOr8B,UAAU9B,OAAS,WAMtB,IAAKtB,KAAKuc,MAAQvc,KAAK2/B,IACrB,OAKF,IAAMr4B,EAAWtH,KAAK4/B,cAEtB,GAAIt4B,IAAatH,KAAK6/B,UACpB,OAAOv4B,EAGTtH,KAAK6/B,UAAYv4B,EAGjB,IAAIwD,EAAK9K,KAAK2/B,IAAI70B,KAWlB,OATI9K,KAAK8/B,YAKPh1B,EAAGpL,MAAM,oBAAsB,SAC/BoL,EAAGpL,MAAH,UAAwB,UAAW4H,EAAUzC,QAAQ,GAAG,KAJxDiG,EAAGpL,MAAH,UAAwB,UAAW4H,EAAUzC,QAAQ,GAAG,IAOnDyC,CACV,EAEDo4B,GAAQt8B,UAAU28B,WAAa,WAC7B,IACM9+B,EADOjB,KAAKyF,QAAQyI,cACHlO,KAAKyF,QAAQ4E,WACpC,OAAOpJ,GAAW,EAAI,EAAIA,CAC3B,EAEDy+B,GAAQt8B,UAAU48B,kBAAoB,WAEpChgC,KAAKigC,QAAUV,GAAG79B,KAAK1B,KAAMA,KAAKsB,QAClCtB,KAAKsB,OAASi+B,GAAGW,SAASlgC,KAAKigC,QAASV,GAAGY,yBAE3CngC,KAAKd,GAAGc,KAAKyF,QAAS,CAAC,QAAS,iBAAkB,cAAezF,KAAKsB,QAClEtB,KAAKyF,QAAQ26B,aACfpgC,KAAKd,GAAGc,KAAKyF,QAAQ26B,YAAa,iBAAkBpgC,KAAKsB,QAK3DtB,KAAK8G,eAAiB,KAEtB9G,KAAKqgC,uBAA0B5vB,GAAWzQ,KAAKsgC,gBAAgB7vB,GAC/DzQ,KAAKugC,wBAA2B9vB,GAAWzQ,KAAKwgC,iBAAiB/vB,GAEjEzQ,KAAKd,GAAGc,KAAKyF,QAAS,CAAC,WAAYzF,KAAKqgC,wBAExCrgC,KAAKd,GAAGc,KAAKyF,QAAS,CAAC,QAAS,QAAS,WAAYzF,KAAKugC,yBAItD,WAAY52B,UAAY,oBAAqBA,UAC/C3J,KAAKd,GAAGyK,SAAU,mBAAoB3J,KAAKygC,kBAE9C,EAEDf,GAAQt8B,UAAUk9B,gBAAkB,WAC9BtgC,KAAK8G,iBAIT9G,KAAK8G,eAAiB9G,KAAKgH,YAAYhH,KAAKsB,OAAQi+B,GAAGY,yBACxD,EAEDT,GAAQt8B,UAAU9B,OAAS,SAAUoE,GACnC,GAAiC,WAA7BiE,SAAS+2B,gBACX,OAGF,IAAMz/B,EAAUjB,KAAK+/B,aAErB,IAAIj1B,EAAK9K,KAAK2/B,IAAI70B,KAKlB,OAHAA,EAAGpL,MAAM,oBAAsB,OAC/BoL,EAAGpL,MAAH,UAAwB,UAAWuB,EAAS4D,QAAQ,GAAG,IAEhD5D,CAER,EAED,IAAM0/B,GAAiB9hC,IAAAA,aAAqB,kBAE5C8hC,GAAev9B,UAAUw9B,aAAe,eAExCD,GAAev9B,UAAUy9B,OAAS,IAE3B,IAAMC,GAAb,yB,4FAAA,S,QAAA,e,EAAA,E,EAAA,wBAWE,WACE9gC,KAAKgvB,eAAgB,CACtB,GAbH,+BAeE,UAAyBppB,EAAkBpH,EAAuCuiC,GAchF,OAXA/gC,KAAK+gC,eAAiBA,EACtB/gC,KAAKghC,uBAAyBxiC,EAAQ+mB,OAAOuJ,cAAchvB,UAK9C,qBAAT8F,IACF5F,KAAK6qB,qBAAuBA,IAIvB7qB,KAAKihC,YAAYr7B,EAAMpH,EAC/B,IA9BH,kFAgCU,UAA0BoH,EAAkBpH,GAClD,IAAM0iC,EAAwB,IAAInS,GAAsBnpB,EAAMpH,EAASwB,KAAK6qB,sBACtE2E,EAAiB0R,EAAsBC,kBAAkBnhC,KAAKgvB,eAQhExwB,GAAWA,EAAQ4iC,SAAW5R,GAAkBA,EAAe5e,YAAc4e,EAAe5e,WAAW2E,WACzGia,EAAe5e,WAAW2E,SAA1B,eAAqD+F,QAAU,CAAC,0BAChEkU,EAAe5e,WAAW4V,kBAAmB,EAC7CgJ,EAAe6R,eAAgB,EAC/B7R,EAAepiB,kBAAoB,EAEnCoiB,EAAe3O,YAAc2O,EAAe3O,aAAe,CAAC,EAC5D2O,EAAe3O,YAAYE,aAAc,GAG3C,IAAM/S,EAAOhO,KACb,OAAO,IAAIiQ,SAAQqY,IACjBzpB,IAAQL,EAAQ+mB,OAAOuJ,cAAeU,GAAgB,WACpD,IAAMjxB,EAASyB,KAyDf,OA1CIxB,GAAWA,EAAQ4iC,SACrB7iC,EAAOc,SAAS,gBAElBd,EAAOuC,IAAI,SAAS,KAApB,IAEAvC,EAAOuC,IAAI,QAAQ,KACjBkN,EAAKghB,eAAgB,CAArB,IAGFhhB,EAAKszB,eAAeJ,EAAuB3iC,EAAQC,EAAQ+mB,SAEvD/Z,KAAchN,EAAQ+iC,SAAQhjC,EAAOijC,kBAEP,IAA9BhjC,EAAQ+mB,OAAO3U,YAAsBrS,EAAOqS,WAAWvR,SAAS,sBAEpEd,EAAOkjC,SAEI,cAAR77B,GAEDrH,EAAOoyB,MAAM,CACX9lB,UAAWrM,EAAQ+mB,OAAO1a,UAC1BxC,YAAa7J,EAAQ+mB,OAAOsD,OAC5BjjB,OACAgF,WAAYpM,EAAQ+mB,OAAO3a,aAG7BrM,EAAOW,GAAG,WAAW,CAACC,EAAGwG,KACH,qBAAhBA,EAAKE,QAAiC4H,MAAM9H,EAAKgB,oBlCvMxD0F,GAAgB,oBkCyMQ1G,EAAKgB,kBlCzMcmH,WkCyMxC,KAKFvP,EAAOW,GAAG,kBAAkB,KAC1ByqB,QAAQC,IAAI,iBACTrrB,EAAO8L,YAAc7L,EAAQ+mB,OAAO3W,eACrCrQ,EAAO8L,SAAS7L,EAAQ+mB,OAAO3W,cAA/B,IAKC0Z,EAAI/pB,EACZ,GA3DD,GA6DH,IAnHH,yFAqHU,UAAmC4I,EAAUu6B,EAA+BljC,GAClF,GAAiB,IAAb2I,EAAI4X,KAAY,CAOlB,GAJiC,IAA7B/e,KAAK2hC,qBACPnjC,EAAQ+mB,OAAOqc,cAAcF,EAAch5B,SAAS,wDAGrB,KAA7B1I,KAAK2hC,oBAEP,YADA3hC,KAAK6hC,0BAA0B,mBAAoBH,EAAeljC,GAIpE4I,EAAAA,EAAAA,KAAY,iDAEZpH,KAAK2hC,sBAELnjC,EAAQ+mB,OAAOrY,UAAYw0B,EAAcxzB,cAAgB,EACzD1P,EAAQ+mB,OAAOlY,UAAW,EAC1BrN,KAAK8hC,6BAA6BJ,EAAeljC,EAAQ+mB,QAEzD,IAAMwc,QAAkB/hC,KAAKihC,YAAY,mBAAoBziC,GAC7DwB,KAAK+gC,eAAegB,EACrB,MACC/hC,KAAK6hC,0BAA0B,mBAAoBH,EAAeljC,EAErE,IA/IH,gGAiJU,UACNwjC,EACAN,EACAljC,GAGA,GAA6C,IAAzCA,EAAQmwB,WAAWlD,WAAW7mB,QAAgC,eAAhBo9B,EAEhD,YADAN,EAAchmB,WAAWumB,oBAI3B76B,EAAAA,EAAAA,KAAY,2BAEZpH,KAAK8hC,6BAA6BJ,EAAeljC,EAAQ+mB,QAIzD,IAAMwc,QAAkB/hC,KAAKihC,YAAY,aAAcziC,GACvDwB,KAAK+gC,eAAegB,EACrB,IApKH,4FAsKU,SAAqCxjC,EAAwBusB,GACnE,IAAMoX,EAAkBv4B,SAASw4B,cAAc,SAC/CD,EAAgBpiC,UAAYE,KAAKghC,uBAGjC,IAAIoB,EAA6BtX,EAAcgE,cAAcuT,WAW7D,OATKD,IAA4BA,EAA6Bz4B,SAAS24B,eAAexX,EAAcgE,cAAcpd,IAAI2wB,YAEtHD,EAA2BC,WAAWE,aAAaL,EAAiBE,GAEpEtX,EAAcgE,cAAgBoT,EAC9BpX,EAAc0X,sBAAsBN,GAEpC3jC,EAAO6c,UAEA8mB,CACR,GAvLH,4BAyLU,SAAuBO,EAAuClkC,EAAwBusB,GAC5F,IAAMtsB,EAAUikC,EAAeC,sBAAsBnkC,EAAQusB,GAE7DvsB,EAAOokC,cAAcnkC,EACtB,I,gOA7LH,KAGiBsiC,GAAAA,eAAgB,EAGhBA,GAAAA,oBAAsB,C,8BCtJvC8B,EAAOC,QAAU,EAAjBD,K,oHCWA,IAOIE,EAPiB,E,uBCHb,IAAM3C,EAA0B,GAsB1Bz+B,EAAO,SAASqhC,EAASC,EAAIC,GAEnCD,EAAGE,OACNF,EAAGE,KDNCJ,KCUN,IAAMK,EAAQH,EAAGthC,KAAKqhC,GAUtB,OAFAI,EAAMD,KAAQD,EAAOA,EAAM,IAAMD,EAAGE,KAAOF,EAAGE,KAEvCC,CACR,EAeYjD,EAAW,SAAS8C,EAAI5a,GACnC,IAAIgb,EAAOt5B,IAAAA,YAAAA,MAWX,OATkB,WAChB,IAAM8rB,EAAM9rB,IAAAA,YAAAA,MAER8rB,EAAMwN,GAAQhb,IAChB4a,EAAE,WAAF,aACAI,EAAOxN,EAEV,CAGF,EA4BYyN,EAAW,SAASC,EAAMlb,EAAMmb,GAA6B,IACpEtkC,EADkD8jC,EAAkB,uDAARj5B,IAG1D05B,EAAS,KACbT,EAAQhiC,aAAa9B,GACrBA,EAAU,IAAV,EAIIwkC,EAAY,WAChB,IAAMz1B,EAAOhO,KACP0jC,EAAOC,UAETC,EAAQ,WACV3kC,EAAU,KACV2kC,EAAQ,KACHL,GACHD,EAAKO,MAAM71B,EAAM01B,EAEpB,GAEIzkC,GAAWskC,GACdD,EAAKO,MAAM71B,EAAM01B,GAGnBX,EAAQhiC,aAAa9B,GACrBA,EAAU8jC,EAAQthC,WAAWmiC,EAAOxb,EACrC,EAKD,OAFAqb,EAAUD,OAASA,EAEZC,CACR,C,uBCzIF,QAQiBK,IAUP,SAAUjlC,GAChB,aACsB,oBAAXiL,SACTA,OAAM,gBAAsB,CAAEi6B,QAAS,YAocpBllC,EAAQw+B,gBAAkBx+B,EAAQy+B,QACxC,WAjcD,SAAS9+B,GACrB,IAAID,EAASyB,KACTgkC,EAAMzlC,EAAOuM,KACbm5B,EAAMt6B,SAsCNu6B,GAFJ1lC,GADmBK,EAAQslC,cAAgBtlC,EAAQulC,KAAKD,cAlCtC,CAChBD,WAAY,GACZG,SAAU,EACVC,YAAY,EACZC,oBAAoB,EACpBC,mBAAmB,EACnBC,kBAAkB,EAClBC,eAAe,EACfC,gBAAgB,EAChBC,sBAAsB,EACtBC,wBAAwB,EACxBC,kCAAmC,WAAc,OAAO,CAAO,EAC/DC,2BAA2B,EAC3BC,qBAAqB,EACrBC,kBAAkB,EAClBC,aA+UF,SAAsBz0B,GAEpB,OAAoB,KAAZA,EAAE00B,OAA4B,MAAZ10B,EAAE00B,KAC7B,EAjVCC,UAmVF,SAAmB30B,GAEjB,OAAoB,KAAZA,EAAE00B,OAA4B,MAAZ10B,EAAE00B,KAC7B,EArVCE,WAuVF,SAAoB50B,GAElB,OAAoB,KAAZA,EAAE00B,OAA4B,MAAZ10B,EAAE00B,KAC7B,EAzVCG,YA2VF,SAAqB70B,GAEnB,OAAoB,KAAZA,EAAE00B,KACX,EA7VCI,cA+VF,SAAuB90B,GAErB,OAAoB,KAAZA,EAAE00B,KACX,EAjWCK,QAmWF,SAAiB/0B,GAEf,OAAoB,KAAZA,EAAE00B,KACX,EArWCM,cAuWF,SAAuBh1B,GAErB,OAAoB,KAAZA,EAAE00B,KACX,EAzWCO,WAAY,CAAC,GAaqBlnC,GAAW,CAAC,IAEvB0lC,WACvBG,EAAW7lC,EAAQ6lC,SACnBC,EAAa9lC,EAAQ8lC,WACrBC,EAAqB/lC,EAAQ+lC,mBAC7BC,EAAoBhmC,EAAQgmC,kBAC5BmB,EAAannC,EAAQimC,iBACrBC,EAAgBlmC,EAAQkmC,cACxBC,EAAiBnmC,EAAQmmC,eACzBC,EAAuBpmC,EAAQomC,qBAC/BC,EAAyBrmC,EAAQqmC,uBACjCC,EAAoCtmC,EAAQsmC,kCAC5CC,EAA4BvmC,EAAQumC,0BACpCC,EAAsBxmC,EAAQwmC,oBAC9BC,EAAmBzmC,EAAQymC,iBAEzBW,EAAa/mC,EAAQgnC,QAGpB7B,EAAI8B,aAAa,aACpB9B,EAAIpjC,aAAa,WAAY,MAI/BojC,EAAItkC,MAAMqmC,QAAU,QAEhBnB,GAAyBrmC,EAAO8O,YAC7B43B,GACH1mC,EAAOuC,IAAI,QAAQ,WACjBkjC,EAAIrzB,OACL,IAIDq0B,GACFzmC,EAAOW,GAAG,gBAAgB,WAExB,IAAI8mC,EAAuB,WACzBjlC,aAAaklC,EACd,EACGA,EAAwBxkC,YAAW,WACrClD,EAAO6P,IAAI,aAAc43B,GACzB,IAAIjhB,EAAgBkf,EAAIlf,cACpBnU,EAAaozB,EAAI9e,cAAc,oBAC/BH,GAAiBA,EAAc9J,eAAiBrK,GAClDozB,EAAIrzB,OAEP,GAAE,IAEHpS,EAAOuC,IAAI,aAAcklC,EAC1B,IAGHznC,EAAOW,GAAG,QAAQ,WAEhB,IAAIgnC,EAAYlC,EAAI9e,cAAc,kBAC9BghB,GAAyC,KAA5BA,EAAUxmC,MAAMC,UAC/BumC,EAAUxmC,MAAMC,QAAU,QAC1BumC,EAAUxmC,MAAM2zB,OAAS,OAE5B,IAED,IAAI8S,EAAU,SAAiBzgC,GAC7B,IAA0B0gC,EAAYC,EAmShB7hC,EAnSlB8hC,EAAS5gC,EAAMy/B,MACfoB,EAAkB7gC,EAAMmc,eAAengB,KAAKgE,GAC5C2E,EAAW9L,EAAO8L,WAEtB,GAAI9L,EAAOmxB,WAAY,CAGrB,IAAI5K,EAAWmf,EAAIlf,cACnB,GACE6f,GACCC,GAA0BC,EAAkChgB,IAE7DA,GAAYkf,GACZlf,GAAYkf,EAAI9e,cAAc,cAC9BJ,GAAYkf,EAAI9e,cAAc,qBAC9BJ,GAAYkf,EAAI9e,cAAc,kBAG9B,OAAQshB,EAAU9gC,EAAOnH,IAEvB,KA9FI,EA+FFgoC,KACI3B,GAAwBC,IAE1Bn/B,EAAMud,kBAGJ1kB,EAAO2kB,SAyQN,OADS1e,EAvQGjG,EAAOskB,SAwQW,mBAAfre,EAAMulB,MAChCvlB,EAAMulB,KAAK,MAAM,SAAStZ,GAAK,IAvQvBlS,EAAO4P,QAET,MAGF,KA5GI,EA6GFi4B,GAAc7nC,EAAO2kB,SACrBqjB,KAIAF,EAAW9nC,EAAO2P,cAAgBu4B,EAAU/gC,KAG5B,IACd2gC,EAAW,GAGb9nC,EAAO2P,YAAYm4B,GAInB,MACF,KA7HK,EA8HHD,GAAc7nC,EAAO2kB,SACrBqjB,KAIAF,EAAW9nC,EAAO2P,cAAgBu4B,EAAU/gC,KAG5B2E,IACdg8B,EAAWD,EAAa/7B,EAAW,KAAOA,GAE5C9L,EAAO2P,YAAYm4B,GAInB,MAGF,KA9IQ,EA+INE,IACK5B,GAGH0B,EAAW9nC,EAAO2P,cAAgB,EAC9B3P,EAAO2P,eAAiB,IAC1Bm4B,EAAW,GAEb9nC,EAAO2P,YAAYm4B,IANnB9nC,EAAOsK,OAAOtK,EAAOsK,SAAWq7B,GAQlC,MACF,KA3JM,EA4JJqC,IACK5B,IAGH0B,EAAW9nC,EAAO2P,cAAgB,IAClB7D,IACdg8B,EAAWh8B,GAEb9L,EAAO2P,YAAYm4B,IANnB9nC,EAAOsK,OAAOtK,EAAOsK,SAAWq7B,GAQlC,MAGF,KAvKE,EAwKII,GACF/lC,EAAOgM,OAAOhM,EAAOgM,SAEvB,MAGF,KA7KQ,EA8KFo7B,IACEpnC,EAAOmS,eACTnS,EAAOkmB,iBAEPlmB,EAAOmmB,qBAGX,MAEF,QAEE,IAAK4hB,EAAS,IAAMA,EAAS,IAAQA,EAAS,IAAMA,EAAS,OAEvDvB,KAA+Br/B,EAAMyf,SAAWzf,EAAM8e,SAAW9e,EAAM6e,UACrEmgB,EAAe,CACjB,IAAIgC,EAAM,GACNJ,EAAS,KACXI,EAAM,IAER,IAAIC,EAASL,EAASI,EACtBH,IACAhoC,EAAO2P,YAAY3P,EAAO8L,WAAas8B,EAAS,GACjD,CAKL,IAAK,IAAIC,KAAapoC,EAAQknC,WAAY,CACxC,IAAImB,EAAeroC,EAAQknC,WAAWkB,GAElCC,GAAgBA,EAAa3jC,KAAO2jC,EAAaz0B,SAE/Cy0B,EAAa3jC,IAAIwC,KACnB6gC,IACAM,EAAaz0B,QAAQ7T,EAAQC,EAASkH,GAG3C,EAGR,CACF,EAEGqb,EAAc,SAAqBrb,GAErC,GAAkB,MAAdkgC,GAAsBA,GAAc,SAElCrnC,EAAOmxB,WAAY,CAGrB,IAAI5K,EAAWpf,EAAMohC,eAAiBphC,EAAMqhC,WAAa9C,EAAIlf,cACzDD,GAAYkf,GACZlf,GAAYkf,EAAI9e,cAAc,cAC9BJ,GAAYkf,EAAI9e,cAAc,mBAE5BygB,IACEpnC,EAAOmS,eACTnS,EAAOkmB,iBAEPlmB,EAAOmmB,oBAId,CAEJ,EAEGsiB,GAAc,EACdC,EAAiBjD,EAAI9e,cAAc,4BAA8B8e,EAAI9e,cAAc,qBACjE,MAAlB+hB,IACFA,EAAeC,YAAc,WAAaF,GAAc,CAAO,EAC/DC,EAAeE,WAAa,WAAaH,GAAc,CAAQ,GAGjE,IAAII,EAAc,SAAqB1hC,GACrC,GAAI8+B,EAEF,IAAI1f,EAAW,OAEXA,EAAWmf,EAAIlf,cAIrB,GAAIxmB,EAAOmxB,aACLkV,GACA9f,GAAYkf,GACZlf,GAAYkf,EAAI9e,cAAc,cAC9BJ,GAAYkf,EAAI9e,cAAc,mBAC9BJ,GAAYkf,EAAI9e,cAAc,qBAC9B8hB,IAEEzC,EAAoB,CACtB7+B,EAAQoE,OAAOpE,OAASA,EACxB,IAAI2hC,EAAQlmC,KAAKC,KAAK,EAAGD,KAAKyhB,IAAI,EAAIld,EAAM4hC,aAAe5hC,EAAM6hC,SACjE7hC,EAAMmc,iBAEO,GAATwlB,EACF9oC,EAAOsK,OAAOtK,EAAOsK,SAAWq7B,IACb,GAAVmD,GACT9oC,EAAOsK,OAAOtK,EAAOsK,SAAWq7B,EAEnC,CAGN,EAEGsC,EAAY,SAAmB/1B,EAAGlS,GAIpC,OAAIC,EAAQ0mC,aAAaz0B,EAAGlS,GAlSlB,EAuSNC,EAAQ4mC,UAAU30B,EAAGlS,GAtSf,EA2SNC,EAAQ6mC,WAAW50B,EAAGlS,GA1Sf,EA+SPC,EAAQ8mC,YAAY70B,EAAGlS,GA9Sf,EAmTRC,EAAQ+mC,cAAc90B,EAAGlS,GAlTf,EAuTVC,EAAQgnC,QAAQ/0B,EAAGlS,GAtTf,EA2TJC,EAAQinC,cAAch1B,EAAGlS,GA1Tf,OA0Td,CAGD,EAqCD,SAASkoC,EAAUh2B,GAEjB,MAA4B,mBAAb4zB,EAA0BA,EAAS5zB,GAAK4zB,CACxD,CASD,IAAImD,GAAS,EAGbjpC,EAAOW,GAAG,iBAAiB,WAGzBX,EAAOW,GAAG,UAAWinC,GACrB5nC,EAAOW,GAAG,WAAY6hB,GACtBxiB,EAAOW,GAAG,aAAckoC,GACxB7oC,EAAOW,GAAG,iBAAkBkoC,GAExBvC,GACFl7B,SAAS2E,iBAAiB,UAAW63B,GAGvCqB,GAAS,CACV,IAED,IAAIp5B,EAAM,WAELo5B,IACDjpC,EAAO6P,IAAI,UAAW+3B,GACtB5nC,EAAO6P,IAAI,WAAY2S,GACvBxiB,EAAO6P,IAAI,aAAcg5B,GACzB7oC,EAAO6P,IAAI,iBAAkBg5B,GAEzBvC,GACFl7B,SAASqP,oBAAoB,UAAWmtB,IAI5CqB,GAAS,CAEV,EAWD,OATAjpC,EAAOW,GAAG,iBAAkBkP,GAC5B7P,EAAOW,GAAG,WAAW,WAEnBkP,IAEA7P,EAAS,KACTylC,EAAM,IACP,IAEMhkC,IACR,GAIF,EAlduB,oBAAX8J,QAA0BA,OAAOjL,QAC1CilC,EAAQh6B,OAAOjL,UAEf4oC,EAA0B,CAAC,SAArB,WAA4C7E,GAChD,OAAOkB,EAAQlB,EAAOvY,SAAWuY,EAD7B,uC","sources":["webpack://peertube-client/./src/assets/player/shared/upnext/end-card.ts","webpack://peertube-client/./src/assets/player/shared/upnext/upnext-plugin.ts","webpack://peertube-client/../shared/core-utils/common/date.ts","webpack://peertube-client/../shared/core-utils/common/object.ts","webpack://peertube-client/../shared/core-utils/i18n/i18n.ts","webpack://peertube-client/../shared/core-utils/renderer/markdown.ts","webpack://peertube-client/./src/assets/player/shared/common/utils.ts","webpack://peertube-client/./src/assets/player/shared/stats/stats-card.ts","webpack://peertube-client/./src/assets/player/shared/stats/stats-plugin.ts","webpack://peertube-client/./src/root-helpers/web-browser.ts","webpack://peertube-client/./src/assets/player/shared/bezels/pause-bezel.ts","webpack://peertube-client/./src/assets/player/shared/bezels/bezels-plugin.ts","webpack://peertube-client/./src/assets/player/peertube-player-local-storage.ts","webpack://peertube-client/./src/assets/player/shared/peertube/peertube-plugin.ts","webpack://peertube-client/./src/assets/player/shared/resolutions/peertube-resolutions-plugin.ts","webpack://peertube-client/./src/assets/player/shared/control-bar/next-previous-video-button.ts","webpack://peertube-client/./src/assets/player/shared/control-bar/p2p-info-button.ts","webpack://peertube-client/./src/assets/player/shared/control-bar/picture-in-picture-bastyon.ts","webpack://peertube-client/./src/assets/player/shared/control-bar/peertube-load-progress-bar.ts","webpack://peertube-client/./src/assets/player/shared/control-bar/theater-button.ts","webpack://peertube-client/./src/assets/player/shared/settings/resolution-menu-item.ts","webpack://peertube-client/./src/assets/player/shared/settings/resolution-menu-button.ts","webpack://peertube-client/./src/assets/player/shared/settings/settings-dialog.ts","webpack://peertube-client/./src/assets/player/shared/settings/settings-menu-item.ts","webpack://peertube-client/./src/assets/player/shared/settings/settings-menu-button.ts","webpack://peertube-client/./src/assets/player/shared/settings/settings-panel.ts","webpack://peertube-client/./src/assets/player/shared/settings/settings-panel-child.ts","webpack://peertube-client/./src/assets/player/shared/playlist/playlist-button.ts","webpack://peertube-client/./src/assets/player/shared/playlist/playlist-menu-item.ts","webpack://peertube-client/./src/assets/player/shared/playlist/playlist-menu.ts","webpack://peertube-client/./src/assets/player/shared/playlist/playlist-plugin.ts","webpack://peertube-client/./src/assets/player/shared/mobile/peertube-mobile-plugin.ts","webpack://peertube-client/./src/assets/player/shared/mobile/peertube-mobile-buttons.ts","webpack://peertube-client/./src/assets/player/shared/hotkeys/peertube-hotkeys-plugin.ts","webpack://peertube-client/./src/assets/player/shared/manager-options/control-bar-options-builder.ts","webpack://peertube-client/./src/assets/player/shared/p2p-media-loader/redundancy-url-manager.ts","webpack://peertube-client/./src/assets/player/shared/p2p-media-loader/segment-url-builder.ts","webpack://peertube-client/./src/root-helpers/utils.ts","webpack://peertube-client/./src/assets/player/shared/p2p-media-loader/segment-validator.ts","webpack://peertube-client/./src/assets/player/shared/manager-options/hls-options-builder.ts","webpack://peertube-client/./src/assets/player/shared/manager-options/webtorrent-options-builder.ts","webpack://peertube-client/./src/assets/player/shared/manager-options/manager-options-builder.ts","webpack://peertube-client/./src/assets/player/shared/p2p-media-loader/cap-level-controller.ts","webpack://peertube-client/./src/assets/player/shared/p2p-media-loader/abr-controler.ts","webpack://peertube-client/./src/assets/player/shared/p2p-media-loader/hls-plugin.ts","webpack://peertube-client/./src/assets/player/shared/p2p-media-loader/p2p-media-loader-plugin.ts","webpack://peertube-client/./src/assets/player/peertube-player-manager.ts","webpack://peertube-client/./src/shims/path.ts","webpack://peertube-client/./src/assets/player/shared/videojs-helpers/guid.js","webpack://peertube-client/./src/assets/player/shared/videojs-helpers/fn.js","webpack://peertube-client/./src/assets/player/shared/videojs-helpers/hotkeys.js"],"sourcesContent":["import videojs from 'video.js'\n\nfunction getMainTemplate (options: any) {\n  return `\n    <div class=\"vjs-upnext-top\">\n      <span class=\"vjs-upnext-headtext\">${options.headText}</span>\n      <div class=\"vjs-upnext-title\"></div>\n    </div>\n    <div class=\"vjs-upnext-autoplay-icon\">\n      <svg height=\"100%\" version=\"1.1\" viewbox=\"0 0 98 98\" width=\"100%\">\n        <circle class=\"vjs-upnext-svg-autoplay-circle\" cx=\"49\" cy=\"49\" fill=\"#000\" fill-opacity=\"0.8\" r=\"48\"></circle>\n        <circle class=\"vjs-upnext-svg-autoplay-ring\" cx=\"-49\" cy=\"49\" fill-opacity=\"0\" r=\"46.5\"\n                stroke=\"#FFFFFF\" stroke-width=\"4\" transform=\"rotate(-90)\"\n        ></circle>\n        <polygon class=\"vjs-upnext-svg-autoplay-triangle\" fill=\"#fff\" points=\"32,27 72,49 32,71\"></polygon></svg>\n    </div>\n    <span class=\"vjs-upnext-bottom\">\n      <span class=\"vjs-upnext-cancel\">\n        <button class=\"vjs-upnext-cancel-button\" tabindex=\"0\" aria-label=\"Cancel autoplay\">${options.cancelText}</button>\n      </span>\n      <span class=\"vjs-upnext-suspended\">${options.suspendedText}</span>\n    </span>\n  `\n}\n\nexport interface EndCardOptions extends videojs.ComponentOptions {\n  next: () => void\n  getTitle: () => string\n  timeout: number\n  cancelText: string\n  headText: string\n  suspendedText: string\n  condition: () => boolean\n  suspended: () => boolean\n}\n\nconst Component = videojs.getComponent('Component')\nclass EndCard extends Component {\n  options_: EndCardOptions\n\n  dashOffsetTotal = 586\n  dashOffsetStart = 293\n  interval = 50\n  upNextEvents = new videojs.EventTarget()\n  ticks = 0\n  totalTicks: number\n\n  container: HTMLDivElement\n  title: HTMLElement\n  autoplayRing: HTMLElement\n  cancelButton: HTMLElement\n  suspendedMessage: HTMLElement\n  nextButton: HTMLElement\n\n  constructor (player: videojs.Player, options: EndCardOptions) {\n    super(player, options)\n\n    this.totalTicks = this.options_.timeout / this.interval\n\n    player.on('ended', (_: any) => {\n      if (!this.options_.condition()) return\n\n      player.addClass('vjs-upnext--showing')\n      this.showCard((canceled: boolean) => {\n        player.removeClass('vjs-upnext--showing')\n        this.container.style.display = 'none'\n        if (!canceled) {\n          this.options_.next()\n        }\n      })\n    })\n\n    player.on('playing', () => {\n      this.upNextEvents.trigger('playing')\n    })\n  }\n\n  createEl () {\n    const container = super.createEl('div', {\n      className: 'vjs-upnext-content',\n      innerHTML: getMainTemplate(this.options_)\n    }) as HTMLDivElement\n\n    this.container = container\n    container.style.display = 'none'\n\n    this.autoplayRing = container.getElementsByClassName('vjs-upnext-svg-autoplay-ring')[0] as HTMLElement\n    this.title = container.getElementsByClassName('vjs-upnext-title')[0] as HTMLElement\n    this.cancelButton = container.getElementsByClassName('vjs-upnext-cancel-button')[0] as HTMLElement\n    this.suspendedMessage = container.getElementsByClassName('vjs-upnext-suspended')[0] as HTMLElement\n    this.nextButton = container.getElementsByClassName('vjs-upnext-autoplay-icon')[0] as HTMLElement\n\n    this.cancelButton.onclick = () => {\n      this.upNextEvents.trigger('cancel')\n    }\n\n    this.nextButton.onclick = () => {\n      this.upNextEvents.trigger('next')\n    }\n\n    return container\n  }\n\n  showCard (cb: (value: boolean) => void) {\n    let timeout: any\n\n    this.autoplayRing.setAttribute('stroke-dasharray', `${this.dashOffsetStart}`)\n    this.autoplayRing.setAttribute('stroke-dashoffset', `${-this.dashOffsetStart}`)\n\n    this.title.innerHTML = this.options_.getTitle()\n\n    this.upNextEvents.one('cancel', () => {\n      clearTimeout(timeout)\n      cb(true)\n    })\n\n    this.upNextEvents.one('playing', () => {\n      clearTimeout(timeout)\n      cb(true)\n    })\n\n    this.upNextEvents.one('next', () => {\n      clearTimeout(timeout)\n      cb(false)\n    })\n\n    const goToPercent = (percent: number) => {\n      const newOffset = Math.max(-this.dashOffsetTotal, -this.dashOffsetStart - percent * this.dashOffsetTotal / 2 / 100)\n      this.autoplayRing.setAttribute('stroke-dashoffset', '' + newOffset)\n    }\n\n    const tick = () => {\n      goToPercent((this.ticks++) * 100 / this.totalTicks)\n    }\n\n    const update = () => {\n      if (this.options_.suspended()) {\n        this.suspendedMessage.innerText = this.options_.suspendedText\n        goToPercent(0)\n        this.ticks = 0\n        timeout = setTimeout(update.bind(this), 300) // checks once supsended can be a bit longer\n      } else if (this.ticks >= this.totalTicks) {\n        clearTimeout(timeout)\n        cb(false)\n      } else {\n        this.suspendedMessage.innerText = ''\n        tick()\n        timeout = setTimeout(update.bind(this), this.interval)\n      }\n    }\n\n    this.container.style.display = 'block'\n    timeout = setTimeout(update.bind(this), this.interval)\n  }\n}\n\nvideojs.registerComponent('EndCard', EndCard)\n","import videojs from 'video.js'\nimport { EndCardOptions } from './end-card'\n\nconst Plugin = videojs.getPlugin('plugin')\n\nclass UpNextPlugin extends Plugin {\n\n  constructor (player: videojs.Player, options: Partial<EndCardOptions> = {}) {\n    const settings = {\n      next: options.next,\n      getTitle: options.getTitle,\n      timeout: options.timeout || 5000,\n      cancelText: options.cancelText || 'Cancel',\n      headText: options.headText || 'Up Next',\n      suspendedText: options.suspendedText || 'Autoplay is suspended',\n      condition: options.condition,\n      suspended: options.suspended\n    }\n\n    super(player)\n\n    this.player.ready(() => {\n      player.addClass('vjs-upnext')\n    })\n\n    player.addChild('EndCard', settings)\n  }\n}\n\nvideojs.registerPlugin('upnext', UpNextPlugin)\nexport { UpNextPlugin }\n","function isToday (d: Date) {\n  const today = new Date()\n\n  return areDatesEqual(d, today)\n}\n\nfunction isYesterday (d: Date) {\n  const yesterday = new Date()\n  yesterday.setDate(yesterday.getDate() - 1)\n\n  return areDatesEqual(d, yesterday)\n}\n\nfunction isThisWeek (d: Date) {\n  const minDateOfThisWeek = new Date()\n  minDateOfThisWeek.setHours(0, 0, 0)\n\n  // getDay() -> Sunday - Saturday : 0 - 6\n  // We want to start our week on Monday\n  let dayOfWeek = minDateOfThisWeek.getDay() - 1\n  if (dayOfWeek < 0) dayOfWeek = 6 // Sunday\n\n  minDateOfThisWeek.setDate(minDateOfThisWeek.getDate() - dayOfWeek)\n\n  return d >= minDateOfThisWeek\n}\n\nfunction isThisMonth (d: Date) {\n  const thisMonth = new Date().getMonth()\n\n  return d.getMonth() === thisMonth\n}\n\nfunction isLastMonth (d: Date) {\n  const now = new Date()\n\n  return getDaysDifferences(now, d) <= 30\n}\n\nfunction isLastWeek (d: Date) {\n  const now = new Date()\n\n  return getDaysDifferences(now, d) <= 7\n}\n\n// ---------------------------------------------------------------------------\n\nfunction timeToInt (time: number | string) {\n  if (!time) return 0\n  if (typeof time === 'number') return time\n\n  const reg = /^((\\d+)[h:])?((\\d+)[m:])?((\\d+)s?)?$/\n  const matches = time.match(reg)\n\n  if (!matches) return 0\n\n  const hours = parseInt(matches[2] || '0', 10)\n  const minutes = parseInt(matches[4] || '0', 10)\n  const seconds = parseInt(matches[6] || '0', 10)\n\n  return hours * 3600 + minutes * 60 + seconds\n}\n\nfunction secondsToTime (seconds: number, full = false, symbol?: string) {\n  let time = ''\n\n  if (seconds === 0 && !full) return '0s'\n\n  const hourSymbol = (symbol || 'h')\n  const minuteSymbol = (symbol || 'm')\n  const secondsSymbol = full ? '' : 's'\n\n  const hours = Math.floor(seconds / 3600)\n  if (hours >= 1) time = hours + hourSymbol\n  else if (full) time = '0' + hourSymbol\n\n  seconds %= 3600\n  const minutes = Math.floor(seconds / 60)\n  if (minutes >= 1 && minutes < 10 && full) time += '0' + minutes + minuteSymbol\n  else if (minutes >= 1) time += minutes + minuteSymbol\n  else if (full) time += '00' + minuteSymbol\n\n  seconds %= 60\n  if (seconds >= 1 && seconds < 10 && full) time += '0' + seconds + secondsSymbol\n  else if (seconds >= 1) time += seconds + secondsSymbol\n  else if (full) time += '00'\n\n  return time\n}\n\n// ---------------------------------------------------------------------------\n\nexport {\n  isYesterday,\n  isThisWeek,\n  isThisMonth,\n  isToday,\n  isLastMonth,\n  isLastWeek,\n  timeToInt,\n  secondsToTime\n}\n\n// ---------------------------------------------------------------------------\n\nfunction areDatesEqual (d1: Date, d2: Date) {\n  return d1.getFullYear() === d2.getFullYear() &&\n    d1.getMonth() === d2.getMonth() &&\n    d1.getDate() === d2.getDate()\n}\n\nfunction getDaysDifferences (d1: Date, d2: Date) {\n  return (d1.getTime() - d2.getTime()) / (86400000)\n}\n","function pick <O extends object, K extends keyof O> (object: O, keys: K[]): Pick<O, K> {\n  const result: any = {}\n\n  for (const key of keys) {\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      result[key] = object[key]\n    }\n  }\n\n  return result\n}\n\nfunction getKeys <O extends object, K extends keyof O> (object: O, keys: K[]): K[] {\n  return (Object.keys(object) as K[]).filter(k => keys.includes(k))\n}\n\nfunction sortObjectComparator (key: string, order: 'asc' | 'desc') {\n  return (a: any, b: any) => {\n    if (a[key] < b[key]) {\n      return order === 'asc' ? -1 : 1\n    }\n\n    if (a[key] > b[key]) {\n      return order === 'asc' ? 1 : -1\n    }\n\n    return 0\n  }\n}\n\nexport {\n  pick,\n  getKeys,\n  sortObjectComparator\n}\n","export const LOCALE_FILES = [ 'player', 'server' ]\n\nexport const I18N_LOCALES = {\n  // Always first to avoid issues when using express acceptLanguages function when no accept language header is set\n  'en-US': 'English',\n\n  'ar': 'العربية',\n  'ca-ES': 'Català',\n  'cs-CZ': 'Čeština',\n  'de-DE': 'Deutsch',\n  'el-GR': 'ελληνικά',\n  'eo': 'Esperanto',\n  'es-ES': 'Español',\n  'eu-ES': 'Euskara',\n  'fi-FI': 'suomi',\n  'fr-FR': 'Français',\n  'gd': 'Gàidhlig',\n  'gl-ES': 'galego',\n  'hr': 'hrvatski',\n  'hu-HU': 'magyar',\n  'fa-IR': 'فارسی',\n  'it-IT': 'Italiano',\n  'ja-JP': '日本語',\n  'kab': 'Taqbaylit',\n  'nl-NL': 'Nederlands',\n  'oc': 'Occitan',\n  'pl-PL': 'Polski',\n  'pt-BR': 'Português (Brasil)',\n  'pt-PT': 'Português (Portugal)',\n  'ru-RU': 'русский',\n  'sq': 'Shqip',\n  'sv-SE': 'Svenska',\n  'nn': 'norsk nynorsk',\n  'nb-NO': 'norsk bokmål',\n  'th-TH': 'ไทย',\n  'vi-VN': 'Tiếng Việt',\n  'tok': 'Toki Pona',\n  'zh-Hans-CN': '简体中文（中国）',\n  'zh-Hant-TW': '繁體中文（台灣）'\n}\n\nconst I18N_LOCALE_ALIAS = {\n  'ar-001': 'ar',\n  'ca': 'ca-ES',\n  'cs': 'cs-CZ',\n  'de': 'de-DE',\n  'el': 'el-GR',\n  'en': 'en-US',\n  'es': 'es-ES',\n  'eu': 'eu-ES',\n  'fi': 'fi-FI',\n  'gl': 'gl-ES',\n  'fa': 'fa-IR',\n  'fr': 'fr-FR',\n  'hu': 'hu-HU',\n  'it': 'it-IT',\n  'ja': 'ja-JP',\n  'nl': 'nl-NL',\n  'pl': 'pl-PL',\n  'pt': 'pt-BR',\n  'nb': 'nb-NO',\n  'ru': 'ru-RU',\n  'sv': 'sv-SE',\n  'th': 'th-TH',\n  'vi': 'vi-VN',\n  'zh-CN': 'zh-Hans-CN',\n  'zh-Hans': 'zh-Hans-CN',\n  'zh-Hant': 'zh-Hant-TW',\n  'zh-TW': 'zh-Hant-TW',\n  'zh': 'zh-Hans-CN'\n}\n\nexport const POSSIBLE_LOCALES = Object.keys(I18N_LOCALES)\n                                      .concat(Object.keys(I18N_LOCALE_ALIAS))\n\nexport function getDefaultLocale () {\n  return 'en-US'\n}\n\nexport function isDefaultLocale (locale: string) {\n  return getCompleteLocale(locale) === getCompleteLocale(getDefaultLocale())\n}\n\nexport function peertubeTranslate (str: string, translations?: { [ id: string ]: string }) {\n  if (!translations || !translations[str]) return str\n\n  return translations[str]\n}\n\nconst possiblePaths = POSSIBLE_LOCALES.map(l => '/' + l)\nexport function is18nPath (path: string) {\n  return possiblePaths.includes(path)\n}\n\nexport function is18nLocale (locale: string) {\n  return POSSIBLE_LOCALES.includes(locale)\n}\n\nexport function getCompleteLocale (locale: string) {\n  if (!locale) return locale\n\n  if (I18N_LOCALE_ALIAS[locale]) return I18N_LOCALE_ALIAS[locale]\n\n  return locale\n}\n\nexport function getShortLocale (locale: string) {\n  if (locale.includes('-') === false) return locale\n\n  return locale.split('-')[0]\n}\n\nexport function buildFileLocale (locale: string) {\n  return getCompleteLocale(locale)\n}\n","export const TEXT_RULES = [\n  'linkify',\n  'autolink',\n  'emphasis',\n  'link',\n  'newline',\n  'entity',\n  'list'\n]\n\nexport const TEXT_WITH_HTML_RULES = TEXT_RULES.concat([\n  'html_inline',\n  'html_block'\n])\n\nexport const ENHANCED_RULES = TEXT_RULES.concat([ 'image' ])\nexport const ENHANCED_WITH_HTML_RULES = TEXT_WITH_HTML_RULES.concat([ 'image' ])\n\nexport const COMPLETE_RULES = ENHANCED_WITH_HTML_RULES.concat([\n  'block',\n  'inline',\n  'heading',\n  'paragraph'\n])\n","import { VideoFile } from '@shared/models'\n\nfunction toTitleCase (str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nconst dictionaryBytes = [\n  { max: 1024, type: 'B', decimals: 0 },\n  { max: 1048576, type: 'KB', decimals: 0 },\n  { max: 1073741824, type: 'MB', decimals: 0 },\n  { max: 1.0995116e12, type: 'GB', decimals: 1 }\n]\nfunction bytes (value: number) {\n  const format = dictionaryBytes.find(d => value < d.max) || dictionaryBytes[dictionaryBytes.length - 1]\n  const calc = (value / (format.max / 1024)).toFixed(format.decimals)\n\n  return [ calc, format.type ]\n}\n\nfunction videoFileMaxByResolution (files: VideoFile[]) {\n  let max = files[0]\n\n  for (let i = 1; i < files.length; i++) {\n    const file = files[i]\n    if (max.resolution.id < file.resolution.id) max = file\n  }\n\n  return max\n}\n\nfunction videoFileMinByResolution (files: VideoFile[]) {\n  let min = files[0]\n\n  for (let i = 1; i < files.length; i++) {\n    const file = files[i]\n    if (min.resolution.id > file.resolution.id) min = file\n  }\n\n  return min\n}\n\nfunction getRtcConfig () {\n  return {\n    iceServers: [\n      {\n        urls: \"stun:turn.pocketnet.app\",\n        username: \"stunuser\",\n        credential: \"q1w2e3r4t5ASD!@#\",\n      },\n      {\n        urls: \"turn:turn.pocketnet.app\",\n        username: \"stunuser\",\n        credential: \"q1w2e3r4t5ASD!@#\",\n      },\n    ]\n  }\n}\n\n// ---------------------------------------------------------------------------\n\nexport {\n  getRtcConfig,\n  toTitleCase,\n\n  videoFileMaxByResolution,\n  videoFileMinByResolution,\n  bytes\n}\n","import videojs from 'video.js'\nimport { logger } from '@root-helpers/logger'\nimport { secondsToTime } from '@shared/core-utils'\nimport { PlayerNetworkInfo as EventPlayerNetworkInfo } from '../../types'\nimport { bytes } from '../common'\n\ninterface StatsCardOptions extends videojs.ComponentOptions {\n  videoUUID: string\n  videoIsLive: boolean\n  mode: 'webtorrent' | 'p2p-media-loader' | 'localvideo'\n  p2pEnabled: boolean\n}\n\ninterface PlayerNetworkInfo {\n  downloadSpeed?: string\n  uploadSpeed?: string\n  totalDownloaded?: string\n  totalUploaded?: string\n  numPeers?: number\n  averageBandwidth?: string\n\n  downloadedFromServer?: string\n  downloadedFromPeers?: string\n}\n\ninterface InfoElement {\n  root: HTMLElement\n  value: HTMLElement\n}\n\nconst Component = videojs.getComponent('Component')\nclass StatsCard extends Component {\n  options_: StatsCardOptions\n\n  updateInterval: any\n\n  mode: 'webtorrent' | 'p2p-media-loader'\n\n  metadataStore: any = {}\n\n  intervalMs = 300\n  playerNetworkInfo: PlayerNetworkInfo = {}\n\n  private containerEl: HTMLDivElement\n  private infoListEl: HTMLDivElement\n\n  private playerMode: InfoElement\n  private p2p: InfoElement\n  private uuid: InfoElement\n  private viewport: InfoElement\n  private resolution: InfoElement\n  private volume: InfoElement\n  private codecs: InfoElement\n  private color: InfoElement\n  private connection: InfoElement\n\n  private network: InfoElement\n  private transferred: InfoElement\n  private download: InfoElement\n\n  private bufferProgress: InfoElement\n  private bufferState: InfoElement\n\n  private liveLatency: InfoElement\n\n  createEl () {\n    this.containerEl = videojs.dom.createEl('div', {\n      className: 'vjs-stats-content'\n    }) as HTMLDivElement\n    this.containerEl.style.display = 'none'\n\n    this.infoListEl = videojs.dom.createEl('div', {\n      className: 'vjs-stats-list'\n    }) as HTMLDivElement\n\n    const closeButton = videojs.dom.createEl('button', {\n      className: 'vjs-stats-close',\n      tabindex: '0',\n      title: 'Close stats',\n      innerText: '[x]'\n    }, { 'aria-label': 'Close stats' }) as HTMLElement\n    closeButton.onclick = () => this.hide()\n\n    this.containerEl.appendChild(closeButton)\n    this.containerEl.appendChild(this.infoListEl)\n\n    this.populateInfoBlocks()\n\n    this.player_.on('p2pInfo', (event: any, data: EventPlayerNetworkInfo) => {\n      if (!data) return // HTTP fallback\n\n      this.mode = data.source\n\n      const p2pStats = data.p2p\n      const httpStats = data.http\n\n      this.playerNetworkInfo.downloadSpeed = bytes(p2pStats.downloadSpeed + httpStats.downloadSpeed).join(' ')\n      this.playerNetworkInfo.uploadSpeed = bytes(p2pStats.uploadSpeed + httpStats.uploadSpeed).join(' ')\n      this.playerNetworkInfo.totalDownloaded = bytes(p2pStats.downloaded + httpStats.downloaded).join(' ')\n      this.playerNetworkInfo.totalUploaded = bytes(p2pStats.uploaded + httpStats.uploaded).join(' ')\n      this.playerNetworkInfo.numPeers = p2pStats.numPeers\n      this.playerNetworkInfo.averageBandwidth = bytes(data.bandwidthEstimate).join(' ') + '/s'\n\n      if (data.source === 'p2p-media-loader') {\n        this.playerNetworkInfo.downloadedFromServer = bytes(httpStats.downloaded).join(' ')\n        this.playerNetworkInfo.downloadedFromPeers = bytes(p2pStats.downloaded).join(' ')\n      }\n    })\n\n    return this.containerEl\n  }\n\n  toggle () {\n    if (this.updateInterval) this.hide()\n    else this.show()\n  }\n\n  show () {\n    this.containerEl.style.display = 'block'\n\n    this.updateInterval = setInterval(async () => {\n      try {\n        const options = this.buildHLSOptions()\n        \n        \n        /*this.mode === 'p2p-media-loader'\n          ? this.buildHLSOptions()\n          : await this.buildWebTorrentOptions();*/\n\n          this.populateInfoValues(options)\n          \n      } catch (err) {\n        logger.error('Cannot update stats.', err)\n        clearInterval(this.updateInterval)\n      }\n    }, this.intervalMs)\n  }\n\n  hide () {\n    clearInterval(this.updateInterval)\n    this.containerEl.style.display = 'none'\n  }\n\n  private buildHLSOptions () {\n    const p2pMediaLoader = this.player_.p2pMediaLoader()\n    const level = p2pMediaLoader.getCurrentLevel()\n\n    const codecs = level?.videoCodec || level?.audioCodec\n      ? `${level?.videoCodec || ''} / ${level?.audioCodec || ''}`\n      : undefined\n\n    const resolution = `${level?.height}p${level?.attrs['FRAME-RATE'] || ''}`\n    const buffer = this.timeRangesToString(this.player().buffered())\n\n    let progress: number\n    let latency: string\n\n    if (this.options_.videoIsLive) {\n      latency = secondsToTime(p2pMediaLoader.getLiveLatency())\n    } else {\n      progress = this.player().bufferedPercent()\n    }\n\n    return {\n      playerNetworkInfo: this.playerNetworkInfo,\n      resolution,\n      codecs,\n      buffer,\n      latency,\n      progress\n    }\n  }\n\n  /*private async buildWebTorrentOptions () {\n    const videoFile = this.player_.webtorrent().getCurrentVideoFile()\n\n    if (!this.metadataStore[videoFile.fileUrl]) {\n      this.metadataStore[videoFile.fileUrl] = await fetch(videoFile.metadataUrl).then(res => res.json())\n    }\n\n    const metadata = this.metadataStore[videoFile.fileUrl]\n\n    let colorSpace = 'unknown'\n    let codecs = 'unknown'\n\n    if (metadata?.streams[0]) {\n      const stream = metadata.streams[0]\n\n      colorSpace = stream['color_space'] !== 'unknown'\n        ? stream['color_space']\n        : 'bt709'\n\n      codecs = stream['codec_name'] || 'avc1'\n    }\n\n    const resolution = videoFile?.resolution.label + videoFile?.fps\n    const buffer = this.timeRangesToString(this.player().buffered())\n    const progress = this.player_.webtorrent().getTorrent()?.progress\n\n    return {\n      playerNetworkInfo: this.playerNetworkInfo,\n      progress,\n      colorSpace,\n      codecs,\n      resolution,\n      buffer\n    }\n  }*/\n\n  private populateInfoBlocks () {\n    this.playerMode = this.buildInfoRow(this.player().localize('Player mode'))\n    this.p2p = this.buildInfoRow(this.player().localize('P2P'))\n    this.uuid = this.buildInfoRow(this.player().localize('Video UUID'))\n    this.viewport = this.buildInfoRow(this.player().localize('Viewport / Frames'))\n    this.resolution = this.buildInfoRow(this.player().localize('Resolution'))\n    this.volume = this.buildInfoRow(this.player().localize('Volume'))\n    this.codecs = this.buildInfoRow(this.player().localize('Codecs'))\n    this.color = this.buildInfoRow(this.player().localize('Color'))\n    this.connection = this.buildInfoRow(this.player().localize('Connection Speed'))\n\n    this.network = this.buildInfoRow(this.player().localize('Network Activity'))\n    this.transferred = this.buildInfoRow(this.player().localize('Total Transfered'))\n    this.download = this.buildInfoRow(this.player().localize('Download Breakdown'))\n\n    this.bufferProgress = this.buildInfoRow(this.player().localize('Buffer Progress'))\n    this.bufferState = this.buildInfoRow(this.player().localize('Buffer State'))\n\n    this.liveLatency = this.buildInfoRow(this.player().localize('Live Latency'))\n\n    this.infoListEl.appendChild(this.playerMode.root)\n    this.infoListEl.appendChild(this.p2p.root)\n    this.infoListEl.appendChild(this.uuid.root)\n    this.infoListEl.appendChild(this.viewport.root)\n    this.infoListEl.appendChild(this.resolution.root)\n    this.infoListEl.appendChild(this.volume.root)\n    this.infoListEl.appendChild(this.codecs.root)\n    this.infoListEl.appendChild(this.color.root)\n    this.infoListEl.appendChild(this.connection.root)\n    this.infoListEl.appendChild(this.network.root)\n    this.infoListEl.appendChild(this.transferred.root)\n    this.infoListEl.appendChild(this.download.root)\n    this.infoListEl.appendChild(this.bufferProgress.root)\n    this.infoListEl.appendChild(this.bufferState.root)\n    this.infoListEl.appendChild(this.liveLatency.root)\n  }\n\n  private populateInfoValues (options: {\n    playerNetworkInfo: PlayerNetworkInfo\n    progress: number\n    codecs: string\n    resolution: string\n    buffer: string\n\n    latency?: string\n    colorSpace?: string\n  }) {\n    const { playerNetworkInfo, progress, colorSpace, codecs, resolution, buffer, latency } = options\n    const player = this.player()\n\n    const videoQuality: VideoPlaybackQuality = player.getVideoPlaybackQuality()\n    const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n    const vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0)\n    const pr = (window.devicePixelRatio || 1).toFixed(2)\n    const frames = `${vw}x${vh}*${pr} / ${videoQuality.droppedVideoFrames} dropped of ${videoQuality.totalVideoFrames}`\n\n    const duration = player.duration()\n\n    let volume = `${Math.round(player.volume() * 100)}`\n    if (player.muted()) volume += ' (muted)'\n\n    const networkActivity = playerNetworkInfo.downloadSpeed\n      ? `${playerNetworkInfo.downloadSpeed} &dArr; / ${playerNetworkInfo.uploadSpeed} &uArr;`\n      : undefined\n\n    const totalTransferred = playerNetworkInfo.totalDownloaded\n      ? `${playerNetworkInfo.totalDownloaded} &dArr; / ${playerNetworkInfo.totalUploaded} &uArr;`\n      : undefined\n    const downloadBreakdown = playerNetworkInfo.downloadedFromServer\n      ? `${playerNetworkInfo.downloadedFromServer} from servers · ${playerNetworkInfo.downloadedFromPeers} from peers`\n      : undefined\n\n    const bufferProgress = progress !== undefined\n      ? `${(progress * 100).toFixed(1)}% (${(progress * duration).toFixed(1)}s)`\n      : undefined\n\n    this.setInfoValue(this.playerMode, this.mode || 'HTTP')\n    this.setInfoValue(this.p2p, player.localize(this.options_.p2pEnabled ? 'enabled' : 'disabled'))\n    this.setInfoValue(this.uuid, this.options_.videoUUID)\n\n    this.setInfoValue(this.viewport, frames)\n    this.setInfoValue(this.resolution, resolution)\n    this.setInfoValue(this.volume, volume)\n    this.setInfoValue(this.codecs, codecs)\n    this.setInfoValue(this.color, colorSpace)\n    this.setInfoValue(this.connection, playerNetworkInfo.averageBandwidth)\n\n    this.setInfoValue(this.network, networkActivity)\n    this.setInfoValue(this.transferred, totalTransferred)\n    this.setInfoValue(this.download, downloadBreakdown)\n\n    this.setInfoValue(this.bufferProgress, bufferProgress)\n    this.setInfoValue(this.bufferState, buffer)\n\n    this.setInfoValue(this.liveLatency, latency)\n  }\n\n  private setInfoValue (el: InfoElement, value: string) {\n    if (!value) {\n      el.root.style.display = 'none'\n      return\n    }\n\n    el.root.style.display = 'block'\n\n    if (el.value.innerHTML === value) return\n    el.value.innerHTML = value\n  }\n\n  private buildInfoRow (labelText: string, valueHTML?: string) {\n    const root = videojs.dom.createEl('div') as HTMLElement\n    root.style.display = 'none'\n\n    const label = videojs.dom.createEl('div', { innerText: labelText }) as HTMLElement\n    const value = videojs.dom.createEl('span', { innerHTML: valueHTML }) as HTMLElement\n\n    root.appendChild(label)\n    root.appendChild(value)\n\n    return { root, value }\n  }\n\n  private timeRangesToString (r: videojs.TimeRange) {\n    let result = ''\n\n    for (let i = 0; i < r.length; i++) {\n      const start = Math.floor(r.start(i))\n      const end = Math.floor(r.end(i))\n\n      result += `[${secondsToTime(start)}, ${secondsToTime(end)}] `\n    }\n\n    return result\n  }\n}\n\nvideojs.registerComponent('StatsCard', StatsCard)\n\nexport {\n  StatsCard,\n  StatsCardOptions\n}\n","import videojs from 'video.js'\nimport { StatsCard, StatsCardOptions } from './stats-card'\n\nconst Plugin = videojs.getPlugin('plugin')\n\nclass StatsForNerdsPlugin extends Plugin {\n  private statsCard: StatsCard\n\n  constructor (player: videojs.Player, options: StatsCardOptions) {\n    const settings = {\n      ...options\n    }\n\n    super(player)\n\n    this.player.ready(() => {\n      player.addClass('vjs-stats-for-nerds')\n    })\n\n    this.statsCard = new StatsCard(player, options)\n\n    player.addChild(this.statsCard, settings)\n  }\n\n  show () {\n    this.statsCard.show()\n  }\n}\n\nvideojs.registerPlugin('stats', StatsForNerdsPlugin)\nexport { StatsForNerdsPlugin }\n","function isIOS () {\n  if (/iPad|iPhone|iPod/.test(navigator.platform)) {\n    return true\n  }\n\n  // Detect iPad Desktop mode\n  return !!(navigator.maxTouchPoints &&\n      navigator.maxTouchPoints > 2 &&\n      navigator.platform.includes('MacIntel'))\n}\n\nfunction isSafari () {\n  return /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n}\n\nfunction isMobile () {\n  return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent)\n}\n\nexport {\n  isIOS,\n  isSafari,\n  isMobile\n}\n","import videojs from 'video.js'\nimport { isMobile } from '@root-helpers/web-browser'\n\nfunction getPauseBezel () {\n  return `\n  <div class=\"vjs-bezels-pause\">\n    <div class=\"vjs-bezel\" role=\"status\" aria-label=\"Pause\">\n      <div class=\"vjs-bezel-icon\">\n        <svg height=\"100%\" version=\"1.1\" viewBox=\"0 0 36 36\" width=\"100%\">\n          <use class=\"vjs-svg-shadow\" xlink:href=\"#vjs-id-1\"></use>\n          <path class=\"vjs-svg-fill\" d=\"M 12,26 16,26 16,10 12,10 z M 21,26 25,26 25,10 21,10 z\" id=\"vjs-id-1\"></path>\n        </svg>\n      </div>\n    </div>\n  </div>\n  `\n}\n\nfunction getPlayBezel () {\n  return `\n  <div class=\"vjs-bezels-play\">\n    <div class=\"vjs-bezel\" role=\"status\" aria-label=\"Play\">\n      <div class=\"vjs-bezel-icon\">\n        <svg height=\"100%\" version=\"1.1\" viewBox=\"0 0 36 36\" width=\"100%\">\n          <use class=\"vjs-svg-shadow\" xlink:href=\"#vjs-id-2\"></use>\n          <path class=\"vjs-svg-fill\" d=\"M 12,26 18.5,22 18.5,14 12,10 z M 18.5,22 25,18 25,18 18.5,14 z\" id=\"ytp-id-2\"></path>\n        </svg>\n      </div>\n    </div>\n  </div>\n  `\n}\n\nconst Component = videojs.getComponent('Component')\nclass PauseBezel extends Component {\n  container: HTMLDivElement\n\n  constructor (player: videojs.Player, options?: videojs.ComponentOptions) {\n    super(player, options)\n\n    // Hide bezels on mobile since we already have our mobile overlay\n    if (isMobile()) return\n\n    player.on('pause', (_: any) => {\n      if (player.seeking() || player.ended()) return\n      this.container.innerHTML = getPauseBezel()\n      this.showBezel()\n    })\n\n    player.on('play', (_: any) => {\n      if (player.seeking()) return\n      this.container.innerHTML = getPlayBezel()\n      this.showBezel()\n    })\n  }\n\n  createEl () {\n    this.container = super.createEl('div', {\n      className: 'vjs-bezels-content'\n    }) as HTMLDivElement\n\n    this.container.style.display = 'none'\n\n    return this.container\n  }\n\n  showBezel () {\n    this.container.style.display = 'inherit'\n\n    setTimeout(() => {\n      this.container.style.display = 'none'\n    }, 500) // matching the animation duration\n  }\n}\n\nvideojs.registerComponent('PauseBezel', PauseBezel)\n","import videojs from 'video.js'\nimport './pause-bezel'\n\nconst Plugin = videojs.getPlugin('plugin')\n\nclass BezelsPlugin extends Plugin {\n\n  constructor (player: videojs.Player, options?: videojs.ComponentOptions) {\n    super(player)\n\n    this.player.ready(() => {\n      player.addClass('vjs-bezels')\n    })\n\n    player.addChild('PauseBezel', options)\n  }\n}\n\nvideojs.registerPlugin('bezels', BezelsPlugin)\n\nexport { BezelsPlugin }\n","import { logger } from '@root-helpers/logger'\n\nfunction getStoredVolume () {\n  const value = getLocalStorage('volume')\n  if (value !== null && value !== undefined) {\n    const valueNumber = parseFloat(value)\n    if (isNaN(valueNumber)) return undefined\n\n    return valueNumber\n  }\n\n  return undefined\n}\n\nfunction getStoredMute () {\n  const value = getLocalStorage('mute')\n  if (value !== null && value !== undefined) return value === 'true'\n\n  return undefined\n}\n\nfunction getStoredTheater () {\n  const value = getLocalStorage('theater-enabled')\n  if (value !== null && value !== undefined) return value === 'true'\n\n  return false\n}\n\nfunction saveVolumeInStore (value: number) {\n  return setLocalStorage('volume', value.toString())\n}\n\nfunction saveMuteInStore (value: boolean) {\n  return setLocalStorage('mute', value.toString())\n}\n\nfunction saveTheaterInStore (enabled: boolean) {\n  return setLocalStorage('theater-enabled', enabled.toString())\n}\n\nfunction saveAverageBandwidth (value: number) {\n  /** used to choose the most fitting resolution */\n  return setLocalStorage('average-bandwidth', value.toString())\n}\n\nfunction getAverageBandwidthInStore () {\n  const value = getLocalStorage('average-bandwidth')\n  if (value !== null && value !== undefined) {\n    const valueNumber = parseInt(value, 10)\n    if (isNaN(valueNumber)) return undefined\n\n    return valueNumber\n  }\n\n  return undefined\n}\n\nfunction saveLastSubtitle (language: string) {\n  return setLocalStorage('last-subtitle', language)\n}\n\nfunction getStoredLastSubtitle () {\n  return getLocalStorage('last-subtitle')\n}\n\nfunction saveVideoWatchHistory (videoUUID: string, duration: number) {\n  return setLocalStorage(`video-watch-history`, JSON.stringify({\n    ...getStoredVideoWatchHistory(),\n\n    [videoUUID]: {\n      duration,\n      date: `${(new Date()).toISOString()}`\n    }\n  }))\n}\n\nfunction getStoredVideoWatchHistory (videoUUID?: string) {\n  let data\n\n  try {\n    const value = getLocalStorage('video-watch-history')\n    if (!value) return {}\n\n    data = JSON.parse(value)\n  } catch (error) {\n    logger.error('Cannot parse video watch history from local storage/', error)\n  }\n\n  data = data || {}\n\n  if (videoUUID) return data[videoUUID]\n\n  return data\n}\n\nfunction cleanupVideoWatch () {\n  const data = getStoredVideoWatchHistory()\n  if (!data) return\n\n  const newData = Object.keys(data).reduce((acc, videoUUID) => {\n    const date = Date.parse(data[videoUUID].date)\n\n    const diff = Math.ceil(((new Date()).getTime() - date) / (1000 * 3600 * 24))\n\n    if (diff > 30) return acc\n\n    return {\n      ...acc,\n      [videoUUID]: data[videoUUID]\n    }\n  }, {})\n\n  setLocalStorage('video-watch-history', JSON.stringify(newData))\n}\n\n// ---------------------------------------------------------------------------\n\nexport {\n  getStoredVolume,\n  getStoredMute,\n  getStoredTheater,\n  saveVolumeInStore,\n  saveMuteInStore,\n  saveTheaterInStore,\n  saveAverageBandwidth,\n  getAverageBandwidthInStore,\n  saveLastSubtitle,\n  getStoredLastSubtitle,\n  saveVideoWatchHistory,\n  getStoredVideoWatchHistory,\n  cleanupVideoWatch\n}\n\n// ---------------------------------------------------------------------------\n\nconst KEY_PREFIX = 'peertube-videojs-'\n\nfunction getLocalStorage (key: string) {\n  try {\n    return localStorage.getItem(KEY_PREFIX + key)\n  } catch {\n    return undefined\n  }\n}\n\nfunction setLocalStorage (key: string, value: string) {\n  try {\n    localStorage.setItem(KEY_PREFIX + key, value)\n  } catch { /* empty */\n  }\n}\n","import debug from 'debug'\nimport videojs from 'video.js'\nimport { logger } from '@root-helpers/logger'\nimport { isMobile } from '@root-helpers/web-browser'\nimport { timeToInt } from '@shared/core-utils'\nimport { VideoView, VideoViewEvent } from '@shared/models/videos'\nimport {\n  getStoredLastSubtitle,\n  getStoredMute,\n  getStoredVolume,\n  saveLastSubtitle,\n  saveMuteInStore,\n  saveVideoWatchHistory,\n  saveVolumeInStore\n} from '../../peertube-player-local-storage'\nimport { PeerTubePluginOptions, VideoJSCaption } from '../../types'\nimport { SettingsButton } from '../settings/settings-menu-button'\n\nconst debugLogger = debug('peertube:player:peertube')\n\nconst Plugin = videojs.getPlugin('plugin')\n\nclass PeerTubePlugin extends Plugin {\n  private readonly videoViewUrl: string\n  private readonly authorizationHeader: string\n\n  private readonly videoUUID: string\n  private readonly startTime: number\n\n  private readonly CONSTANTS = {\n    USER_VIEW_VIDEO_INTERVAL: 30000 // Every 60 seconds, notify the user is watching the video\n  }\n\n  //private videoCaptions: VideoJSCaption[]\n  private defaultSubtitle: string\n\n  private videoViewInterval: any\n\n  private menuOpened = false\n  private mouseInControlBar = false\n  private mouseInSettings = false\n  private readonly initialInactivityTimeout: number\n\n  constructor (player: videojs.Player, options?: PeerTubePluginOptions) {\n    super(player)\n\n    this.videoViewUrl = options.videoViewUrl\n    this.authorizationHeader = options.authorizationHeader\n    this.videoUUID = options.videoUUID\n    this.startTime = timeToInt(options.startTime)\n\n    //this.videoCaptions = options.videoCaptions\n    this.initialInactivityTimeout = this.player.options_.inactivityTimeout\n\n    if (options.autoplay) this.player.addClass('vjs-has-autoplay')\n\n    this.player.on('autoplay-failure', () => {\n      this.player.removeClass('vjs-has-autoplay')\n    })\n\n    this.player.ready(() => {\n      const playerOptions = this.player.options_\n\n      const volume = getStoredVolume()\n      if (volume !== undefined) this.player.volume(volume)\n\n      const muted = playerOptions.muted !== undefined ? playerOptions.muted : getStoredMute()\n      if (muted !== undefined) this.player.muted(muted)\n\n      this.defaultSubtitle = options.subtitle || getStoredLastSubtitle()\n\n      this.player.on('volumechange', () => {\n        saveVolumeInStore(this.player.volume())\n        saveMuteInStore(this.player.muted())\n      })\n\n      if (options.stopTime) {\n        const stopTime = timeToInt(options.stopTime)\n        const self = this\n\n        this.player.on('timeupdate', function onTimeUpdate () {\n          if (self.player.currentTime() > stopTime) {\n            self.player.pause()\n            self.player.trigger('stopped')\n\n            self.player.off('timeupdate', onTimeUpdate)\n          }\n        })\n      }\n\n      this.player.textTracks().addEventListener('change', () => {\n        const showing = this.player.textTracks().tracks_.find(t => {\n          return t.kind === 'captions' && t.mode === 'showing'\n        })\n\n        if (!showing) {\n          saveLastSubtitle('off')\n          return\n        }\n\n        saveLastSubtitle(showing.language)\n      })\n\n      //this.player.on('sourcechange', () => this.initCaptions())\n\n      this.player.duration(options.videoDuration)\n\n      this.initializePlayer()\n      this.runUserViewing()\n    })\n  }\n\n  dispose () {\n    if (this.videoViewInterval) clearInterval(this.videoViewInterval)\n  }\n\n  onMenuOpened () {\n    this.menuOpened = true\n    this.alterInactivity()\n  }\n\n  onMenuClosed () {\n    this.menuOpened = false\n    this.alterInactivity()\n  }\n\n  displayFatalError () {\n    this.player.addClass('vjs-error-display-enabled')\n  }\n\n  hideFatalError () {\n    this.player.removeClass('vjs-error-display-enabled')\n  }\n\n  private initializePlayer () {\n    if (isMobile()) this.player.addClass('vjs-is-mobile')\n\n    //this.initSmoothProgressBar()\n\n    //this.initCaptions()\n\n    this.listenControlBarMouse()\n\n    this.listenFullScreenChange()\n  }\n\n  private runUserViewing () {\n    let lastCurrentTime = this.startTime\n    let lastViewEvent: VideoViewEvent\n\n    this.player.one('play', () => {\n      this.notifyUserIsWatching(Math.round(this.startTime), lastViewEvent)\n    })\n\n    this.player.on('seeked', () => {\n      // Don't take into account small seek events\n      if (Math.abs(this.player.currentTime() - lastCurrentTime) < 3) return\n\n      lastViewEvent = 'seek'\n    })\n\n   \n\n    this.player.one('ended', () => {\n\n      const currentTime = Math.round(this.player.duration())\n      lastCurrentTime = currentTime\n\n      this.notifyUserIsWatching(currentTime, lastViewEvent)\n\n      lastViewEvent = undefined\n    })\n\n    this.videoViewInterval = setInterval(() => {\n      const currentTime = Math.round(this.player.currentTime())\n\n      // No need to update\n      if (currentTime === lastCurrentTime) return\n\n      lastCurrentTime = currentTime\n\n      this.notifyUserIsWatching(currentTime, lastViewEvent)\n        .catch(err => logger.error('Cannot notify user is watching.', err))\n\n      lastViewEvent = undefined\n\n      // Server won't save history, so save the video position in local storage\n      if (!this.authorizationHeader) {\n        saveVideoWatchHistory(this.videoUUID, currentTime)\n      }\n    }, this.CONSTANTS.USER_VIEW_VIDEO_INTERVAL)\n  }\n\n  private notifyUserIsWatching (currentTime: number, viewEvent: VideoViewEvent) {\n    if (!this.videoViewUrl) return Promise.resolve(undefined)\n\n    const body: VideoView = {\n      currentTime,\n      viewEvent\n    }\n\n    const headers = new Headers({\n      'Content-type': 'application/json; charset=UTF-8'\n    })\n\n    if (this.authorizationHeader) headers.set('Authorization', this.authorizationHeader)\n\n    return fetch(this.videoViewUrl, { method: 'POST', body: JSON.stringify(body), headers }).catch(e => {\n      return Promise.resolve()\n    })\n  }\n\n  private listenFullScreenChange () {\n    this.player.on('fullscreenchange', () => {\n      if (this.player.isFullscreen()) this.player.focus()\n    })\n  }\n\n  private listenControlBarMouse () {\n    const controlBar = this.player.controlBar\n    const settingsButton: SettingsButton = (controlBar as any).settingsButton\n\n    controlBar.on('mouseenter', () => {\n      this.mouseInControlBar = true\n      this.alterInactivity()\n    })\n\n    controlBar.on('mouseleave', () => {\n      this.mouseInControlBar = false\n      this.alterInactivity()\n    })\n\n    settingsButton.dialog.on('mouseenter', () => {\n      this.mouseInSettings = true\n      this.alterInactivity()\n    })\n\n    settingsButton.dialog.on('mouseleave', () => {\n      this.mouseInSettings = false\n      this.alterInactivity()\n    })\n  }\n\n  private alterInactivity () {\n    if (this.menuOpened || this.mouseInSettings || this.mouseInControlBar) {\n      this.setInactivityTimeout(0)\n      return\n    }\n\n    this.setInactivityTimeout(this.initialInactivityTimeout)\n    this.player.reportUserActivity(true)\n  }\n\n  private setInactivityTimeout (timeout: number) {\n    (this.player as any).cache_.inactivityTimeout = timeout\n    this.player.options_.inactivityTimeout = timeout\n\n    debugLogger('Set player inactivity to ' + timeout)\n  }\n\n}\n\nvideojs.registerPlugin('peertube', PeerTubePlugin)\nexport { PeerTubePlugin }\n","import videojs from 'video.js'\nimport { PeerTubeResolution } from '../../types'\n\nconst Plugin = videojs.getPlugin('plugin')\n\nclass PeerTubeResolutionsPlugin extends Plugin {\n  private currentSelection: PeerTubeResolution\n  private resolutions: PeerTubeResolution[] = []\n\n  private autoResolutionChosenId: number\n  private autoResolutionEnabled = true\n\n  add (resolutions: PeerTubeResolution[]) {\n    for (const r of resolutions) {\n      this.resolutions.push(r)\n    }\n\n    this.currentSelection = this.getSelected()\n\n    this.sort()\n    this.trigger('resolutionsAdded')\n  }\n\n  getResolutions () {\n    return this.resolutions\n  }\n\n  getSelected () {\n    return this.resolutions.find(r => r.selected)\n  }\n\n  getAutoResolutionChosen () {\n    return this.resolutions.find(r => r.id === this.autoResolutionChosenId)\n  }\n\n  select (options: {\n    id: number\n    byEngine: boolean\n    autoResolutionChosenId?: number\n  }) {\n    const { id, autoResolutionChosenId, byEngine } = options\n\n    if (this.currentSelection?.id === id && this.autoResolutionChosenId === autoResolutionChosenId) return\n\n    this.autoResolutionChosenId = autoResolutionChosenId\n\n    for (const r of this.resolutions) {\n      r.selected = r.id === id\n\n      if (r.selected) {\n        this.currentSelection = r\n\n        if (!byEngine) r.selectCallback()\n      }\n    }\n\n    this.trigger('resolutionChanged')\n  }\n\n  disableAutoResolution () {\n    this.autoResolutionEnabled = false\n    this.trigger('autoResolutionEnabledChanged')\n  }\n\n  enabledAutoResolution () {\n    this.autoResolutionEnabled = true\n    this.trigger('autoResolutionEnabledChanged')\n  }\n\n  isAutoResolutionEnabeld () {\n    return this.autoResolutionEnabled\n  }\n\n  private sort () {\n    this.resolutions.sort((a, b) => {\n      if (a.id === -1) return 1\n      if (b.id === -1) return -1\n\n      if (a.height > b.height) return -1\n      if (a.height === b.height) return 0\n      return 1\n    })\n  }\n\n}\n\nvideojs.registerPlugin('peertubeResolutions', PeerTubeResolutionsPlugin)\nexport { PeerTubeResolutionsPlugin }\n","import videojs from 'video.js'\nimport { NextPreviousVideoButtonOptions } from '../../types'\n\nconst Button = videojs.getComponent('Button')\n\nclass NextPreviousVideoButton extends Button {\n  private readonly nextPreviousVideoButtonOptions: NextPreviousVideoButtonOptions\n\n  constructor (player: videojs.Player, options?: NextPreviousVideoButtonOptions) {\n    super(player, options as any)\n\n    this.nextPreviousVideoButtonOptions = options\n\n    this.update()\n  }\n\n  createEl () {\n    const type = (this.options_ as NextPreviousVideoButtonOptions).type\n\n    const button = videojs.dom.createEl('button', {\n      className: 'vjs-' + type + '-video'\n    }) as HTMLButtonElement\n    const nextIcon = videojs.dom.createEl('span', {\n      className: 'icon icon-' + type\n    })\n    button.appendChild(nextIcon)\n\n    if (type === 'next') {\n      button.title = this.player_.localize('Next video')\n    } else {\n      button.title = this.player_.localize('Previous video')\n    }\n\n    return button\n  }\n\n  handleClick () {\n    this.nextPreviousVideoButtonOptions.handler()\n  }\n\n  update () {\n    const disabled = this.nextPreviousVideoButtonOptions.isDisabled()\n\n    if (disabled) this.addClass('vjs-disabled')\n    else this.removeClass('vjs-disabled')\n  }\n}\n\nvideojs.registerComponent('NextVideoButton', NextPreviousVideoButton)\nvideojs.registerComponent('PreviousVideoButton', NextPreviousVideoButton)\n","import videojs from 'video.js'\nimport { PeerTubeP2PInfoButtonOptions, PlayerNetworkInfo } from '../../types'\nimport { bytes } from '../common'\n\nconst Button = videojs.getComponent('Button')\nclass P2pInfoButton extends Button {\n\n  constructor (player: videojs.Player, options?: PeerTubeP2PInfoButtonOptions) {\n    super(player, options as any)\n  }\n\n  createEl () {\n    const div = videojs.dom.createEl('div', {\n      className: 'vjs-peertube'\n    })\n    const subDivWebtorrent = videojs.dom.createEl('div', {\n      className: 'vjs-peertube-hidden' // Hide the stats before we get the info\n    }) as HTMLDivElement\n    div.appendChild(subDivWebtorrent)\n\n    // Stop here if P2P is not enabled\n    const p2pEnabled = (this.options_ as PeerTubeP2PInfoButtonOptions).p2pEnabled\n    if (!p2pEnabled) return div as HTMLButtonElement\n\n    const downloadIcon = videojs.dom.createEl('span', {\n      className: 'icon icon-download'\n    })\n    subDivWebtorrent.appendChild(downloadIcon)\n\n    const downloadSpeedText = videojs.dom.createEl('span', {\n      className: 'download-speed-text'\n    })\n    const downloadSpeedNumber = videojs.dom.createEl('span', {\n      className: 'download-speed-number'\n    })\n    const downloadSpeedUnit = videojs.dom.createEl('span')\n    downloadSpeedText.appendChild(downloadSpeedNumber)\n    downloadSpeedText.appendChild(downloadSpeedUnit)\n    subDivWebtorrent.appendChild(downloadSpeedText)\n\n    const uploadIcon = videojs.dom.createEl('span', {\n      className: 'icon icon-upload'\n    })\n    subDivWebtorrent.appendChild(uploadIcon)\n\n    const uploadSpeedText = videojs.dom.createEl('span', {\n      className: 'upload-speed-text'\n    })\n    const uploadSpeedNumber = videojs.dom.createEl('span', {\n      className: 'upload-speed-number'\n    })\n    const uploadSpeedUnit = videojs.dom.createEl('span')\n    uploadSpeedText.appendChild(uploadSpeedNumber)\n    uploadSpeedText.appendChild(uploadSpeedUnit)\n    subDivWebtorrent.appendChild(uploadSpeedText)\n\n    const peersText = videojs.dom.createEl('span', {\n      className: 'peers-text'\n    })\n    const peersNumber = videojs.dom.createEl('span', {\n      className: 'peers-number'\n    })\n    subDivWebtorrent.appendChild(peersNumber)\n    subDivWebtorrent.appendChild(peersText)\n\n    const subDivHttp = videojs.dom.createEl('div', {\n      className: 'vjs-peertube-hidden'\n    })\n    const subDivHttpText = videojs.dom.createEl('span', {\n      className: 'http-fallback',\n      textContent: 'HTTP'\n    })\n\n    subDivHttp.appendChild(subDivHttpText)\n    div.appendChild(subDivHttp)\n\n    this.player_.on('p2pInfo', (event: any, data: PlayerNetworkInfo) => {\n      // We are in HTTP fallback\n      if (!data) {\n        subDivHttp.className = 'vjs-peertube-displayed'\n        subDivWebtorrent.className = 'vjs-peertube-hidden'\n\n        return\n      }\n\n      const p2pStats = data.p2p\n      const httpStats = data.http\n\n      const downloadSpeed = bytes(p2pStats.downloadSpeed + httpStats.downloadSpeed)\n      const uploadSpeed = bytes(p2pStats.uploadSpeed + httpStats.uploadSpeed)\n      const totalDownloaded = bytes(p2pStats.downloaded + httpStats.downloaded)\n      const totalUploaded = bytes(p2pStats.uploaded + httpStats.uploaded)\n      const numPeers = p2pStats.numPeers\n\n      subDivWebtorrent.title = this.player().localize('Total downloaded: ') + totalDownloaded.join(' ') + '\\n'\n\n      if (data.source === 'p2p-media-loader') {\n        const downloadedFromServer = bytes(httpStats.downloaded).join(' ')\n        const downloadedFromPeers = bytes(p2pStats.downloaded).join(' ')\n\n        subDivWebtorrent.title +=\n          ' * ' + this.player().localize('From servers: ') + downloadedFromServer + '\\n' +\n          ' * ' + this.player().localize('From peers: ') + downloadedFromPeers + '\\n'\n      }\n      subDivWebtorrent.title += this.player().localize('Total uploaded: ') + totalUploaded.join(' ')\n\n      downloadSpeedNumber.textContent = downloadSpeed[0]\n      downloadSpeedUnit.textContent = ' ' + downloadSpeed[1]\n\n      uploadSpeedNumber.textContent = uploadSpeed[0]\n      uploadSpeedUnit.textContent = ' ' + uploadSpeed[1]\n\n      peersNumber.textContent = numPeers.toString()\n      peersText.textContent = ' ' + (numPeers > 1 ? this.player().localize('peers') : this.player_.localize('peer'))\n\n      subDivHttp.className = 'vjs-peertube-hidden'\n      subDivWebtorrent.className = 'vjs-peertube-displayed'\n    })\n\n    return div as HTMLButtonElement\n  }\n}\n\nvideojs.registerComponent('P2PInfoButton', P2pInfoButton)\n","/**\n * @file picture-in-picture-toggle.js\n */\n /*import Button from '../button.js';\n import Component from '../component.js';\n import document from 'global/document';*/\n\n import videojs from \"video.js\";\n\n const Button = videojs.getComponent(\"Button\");\n const MenuButton = videojs.getComponent(\"MenuButton\");\n  \n  /**\n   * Toggle Picture-in-Picture mode\n   *\n   * @extends Button\n   */\n  class PictureInPictureBastyon extends MenuButton {\n  \n \n    constructor(player : any, options : any) {\n      super(player, options);\n \n      this.controlText('Mini Player')\n    }\n \n    createEl(){\n     return this.buildElement();\n    }\n \n    handleClick(event : any) {\n     this.player_.trigger('pictureInPictureRequest', event)\n    }\n \n    private buildElement() {\n \n     const el = super.createEl();\n     \n     el.classList.add(\"vjs-picture-in-picture-control\");\n \n     return el as HTMLButtonElement;\n   }\n  \n  }\n \n  videojs.registerComponent(\"PictureInPictureBastyon\", PictureInPictureBastyon);\n  ","import videojs from 'video.js'\n\nconst Component = videojs.getComponent('Component')\n\nclass PeerTubeLoadProgressBar extends Component {\n\n  constructor (player: videojs.Player, options?: videojs.ComponentOptions) {\n    super(player, options)\n\n    this.on(player, 'progress', this.update)\n  }\n\n  createEl () {\n    return super.createEl('div', {\n      className: 'vjs-load-progress',\n      innerHTML: `<span class=\"vjs-control-text\"><span>${this.localize('Loaded')}</span>: 0%</span>`\n    })\n  }\n\n  dispose () {\n    super.dispose()\n  }\n\n  update () {\n    return\n    /*const torrent = this.player().webtorrent().getTorrent()\n    if (!torrent) return\n\n    // @ts-ignore\n    (this.el() as HTMLElement).style['transform-origin'] = 'left'\n    (this.el() as HTMLElement).style['transform'] = 'scaleX('+(torrent.progress).toFixed(2)+')'*/\n\n    //(this.el() as HTMLElement).style.width = (torrent.progress * 100) + '%'\n  }\n\n}\n\nComponent.registerComponent('PeerTubeLoadProgressBar', PeerTubeLoadProgressBar)\n","import videojs from 'video.js'\nimport { getStoredTheater, saveTheaterInStore } from '../../peertube-player-local-storage'\n\nconst Button = videojs.getComponent('Button')\nclass TheaterButton extends Button {\n\n  private static readonly THEATER_MODE_CLASS = 'vjs-theater-enabled'\n\n  constructor (player: videojs.Player, options: videojs.ComponentOptions) {\n    super(player, options)\n\n    const enabled = getStoredTheater()\n    if (enabled === true) {\n      this.player().addClass(TheaterButton.THEATER_MODE_CLASS)\n\n      this.handleTheaterChange()\n    }\n\n    this.controlText('Theater mode')\n\n    this.player().theaterEnabled = enabled\n  }\n\n  buildCSSClass () {\n    return `vjs-theater-control ${super.buildCSSClass()}`\n  }\n\n  handleTheaterChange () {\n    const theaterEnabled = this.isTheaterEnabled()\n\n    if (theaterEnabled) {\n      this.controlText('Normal mode')\n    } else {\n      this.controlText('Theater mode')\n    }\n\n    saveTheaterInStore(theaterEnabled)\n\n    this.player_.trigger('theaterChange', theaterEnabled)\n  }\n\n  handleClick () {\n    this.player_.toggleClass(TheaterButton.THEATER_MODE_CLASS)\n\n    this.handleTheaterChange()\n  }\n\n  private isTheaterEnabled () {\n    return this.player_.hasClass(TheaterButton.THEATER_MODE_CLASS)\n  }\n}\n\nvideojs.registerComponent('TheaterButton', TheaterButton)\n","import videojs from 'video.js'\n\nconst MenuItem = videojs.getComponent('MenuItem')\n\nexport interface ResolutionMenuItemOptions extends videojs.MenuItemOptions {\n  resolutionId: number\n}\n\nclass ResolutionMenuItem extends MenuItem {\n  private readonly resolutionId: number\n  private readonly label: string\n\n  private autoResolutionEnabled: boolean\n  private autoResolutionChosen: string\n\n  constructor (player: videojs.Player, options?: ResolutionMenuItemOptions) {\n    options.selectable = true\n\n    super(player, options)\n\n    this.autoResolutionEnabled = true\n    this.autoResolutionChosen = ''\n\n    this.resolutionId = options.resolutionId\n    this.label = options.label\n\n    player.peertubeResolutions().on('resolutionChanged', () => this.updateSelection())\n\n    // We only want to disable the \"Auto\" item\n    if (this.resolutionId === -1) {\n      player.peertubeResolutions().on('autoResolutionEnabledChanged', () => this.updateAutoResolution())\n    }\n  }\n\n  handleClick (event: any) {\n    // Auto button disabled?\n    if (this.autoResolutionEnabled === false && this.resolutionId === -1) return\n\n    super.handleClick(event)\n\n    this.player().peertubeResolutions().select({ id: this.resolutionId, byEngine: false })\n  }\n\n  updateSelection () {\n    const selectedResolution = this.player().peertubeResolutions().getSelected()\n\n    if (this.resolutionId === -1) {\n      this.autoResolutionChosen = this.player().peertubeResolutions().getAutoResolutionChosen()?.label\n    }\n\n    this.selected(this.resolutionId === selectedResolution.id)\n  }\n\n  updateAutoResolution () {\n    const enabled = this.player().peertubeResolutions().isAutoResolutionEnabeld()\n\n    // Check if the auto resolution is enabled or not\n    if (enabled === false) {\n      this.addClass('disabled')\n    } else {\n      this.removeClass('disabled')\n    }\n\n    this.autoResolutionEnabled = enabled\n  }\n\n  getLabel () {\n    if (this.resolutionId === -1) {\n      return this.label + ' <small>' + this.autoResolutionChosen + '</small>'\n    }\n\n    return this.label\n  }\n}\nvideojs.registerComponent('ResolutionMenuItem', ResolutionMenuItem)\n\nexport { ResolutionMenuItem }\n","import videojs from 'video.js'\nimport { ResolutionMenuItem } from './resolution-menu-item'\n\nconst Menu = videojs.getComponent('Menu')\nconst MenuButton = videojs.getComponent('MenuButton')\nclass ResolutionMenuButton extends MenuButton {\n  labelEl_: HTMLElement\n\n  constructor (player: videojs.Player, options?: videojs.MenuButtonOptions) {\n    super(player, options)\n\n    this.controlText('Quality')\n\n    player.peertubeResolutions().on('resolutionsAdded', () => this.buildQualities())\n\n    // For parent\n    player.peertubeResolutions().on('resolutionChanged', () => {\n      setTimeout(() => this.trigger('labelUpdated'))\n    })\n  }\n\n  createEl () {\n    const el = super.createEl()\n\n    this.labelEl_ = videojs.dom.createEl('div', {\n      className: 'vjs-resolution-value'\n    }) as HTMLElement\n\n    el.appendChild(this.labelEl_)\n\n    return el\n  }\n\n  updateARIAAttributes () {\n    this.el().setAttribute('aria-label', 'Quality')\n  }\n\n  createMenu () {\n    return new Menu(this.player_)\n  }\n\n  buildCSSClass () {\n    return super.buildCSSClass() + ' vjs-resolution-button'\n  }\n\n  buildWrapperCSSClass () {\n    return 'vjs-resolution-control ' + super.buildWrapperCSSClass()\n  }\n\n  private addClickListener (component: any) {\n    component.on('click', () => {\n      const children = this.menu.children()\n\n      for (const child of children) {\n        if (component !== child) {\n          (child as videojs.MenuItem).selected(false)\n        }\n      }\n    })\n  }\n\n  private buildQualities () {\n    for (const d of this.player().peertubeResolutions().getResolutions()) {\n      const label = d.label === '0p'\n        ? this.player().localize('Audio-only')\n        : d.label\n\n      this.menu.addChild(new ResolutionMenuItem(\n        this.player_,\n        {\n          id: d.id + '',\n          resolutionId: d.id,\n          label,\n          selected: d.selected\n        })\n      )\n    }\n\n    for (const m of this.menu.children()) {\n      this.addClickListener(m)\n    }\n\n    this.trigger('menuChanged')\n  }\n}\n\nvideojs.registerComponent('ResolutionMenuButton', ResolutionMenuButton)\n","import videojs from 'video.js'\n\nconst Component = videojs.getComponent('Component')\n\nclass SettingsDialog extends Component {\n  constructor (player: videojs.Player) {\n    super(player)\n\n    this.hide()\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   */\n  createEl () {\n    const uniqueId = this.id()\n    const dialogLabelId = 'TTsettingsDialogLabel-' + uniqueId\n    const dialogDescriptionId = 'TTsettingsDialogDescription-' + uniqueId\n\n    return super.createEl('div', {\n      className: 'vjs-settings-dialog vjs-modal-overlay',\n      innerHTML: '',\n      tabIndex: -1\n    }, {\n      role: 'dialog',\n      'aria-labelledby': dialogLabelId,\n      'aria-describedby': dialogDescriptionId\n    })\n  }\n}\n\nComponent.registerComponent('SettingsDialog', SettingsDialog)\n\nexport { SettingsDialog }\n","import videojs from 'video.js'\nimport { toTitleCase } from '../common'\nimport { SettingsDialog } from './settings-dialog'\nimport { SettingsButton } from './settings-menu-button'\nimport { SettingsPanel } from './settings-panel'\nimport { SettingsPanelChild } from './settings-panel-child'\n\nconst MenuItem = videojs.getComponent('MenuItem')\nconst component = videojs.getComponent('Component')\n\nexport interface SettingsMenuItemOptions extends videojs.MenuItemOptions {\n  entry: string\n  menuButton: SettingsButton\n}\n\nclass SettingsMenuItem extends MenuItem {\n  settingsButton: SettingsButton\n  dialog: SettingsDialog\n  mainMenu: videojs.Menu\n  panel: SettingsPanel\n  panelChild: SettingsPanelChild\n  panelChildEl: HTMLElement\n  size: number[]\n  menuToLoad: string\n  subMenu: SettingsButton\n\n  submenuClickHandler: typeof SettingsMenuItem.prototype.onSubmenuClick\n  transitionEndHandler: typeof SettingsMenuItem.prototype.onTransitionEnd\n\n  settingsSubMenuTitleEl_: HTMLElement\n  settingsSubMenuValueEl_: HTMLElement\n  settingsSubMenuEl_: HTMLElement\n\n  constructor (player: videojs.Player, options?: SettingsMenuItemOptions) {\n    super(player, options)\n\n    this.settingsButton = options.menuButton\n    this.dialog = this.settingsButton.dialog\n    this.mainMenu = this.settingsButton.menu\n    this.panel = this.dialog.getChild('settingsPanel')\n    this.panelChild = this.panel.getChild('settingsPanelChild')\n    this.panelChildEl = this.panelChild.el() as HTMLElement\n\n    this.size = null\n\n    // keep state of what menu type is loading next\n    this.menuToLoad = 'mainmenu'\n\n    const subMenuName = toTitleCase(options.entry)\n    const SubMenuComponent = videojs.getComponent(subMenuName)\n\n    if (!SubMenuComponent) {\n      throw new Error(`Component ${subMenuName} does not exist`)\n    }\n\n    const newOptions = Object.assign({}, options, { entry: options.menuButton, menuButton: this })\n\n    this.subMenu = new SubMenuComponent(this.player(), newOptions) as SettingsButton\n    const subMenuClass = this.subMenu.buildCSSClass().split(' ')[0]\n    this.settingsSubMenuEl_.className += ' ' + subMenuClass\n\n    this.eventHandlers()\n\n    player.ready(() => {\n      // Voodoo magic for IOS\n      setTimeout(() => {\n        // Player was destroyed\n        if (!this.player_) return\n\n        this.build()\n\n        // Update on rate change\n        player.on('ratechange', this.submenuClickHandler)\n\n        if (subMenuName === 'CaptionsButton') {\n          // Hack to regenerate captions on HTTP fallback\n          player.on('captionsChanged', () => {\n            setTimeout(() => {\n              this.settingsSubMenuEl_.innerHTML = ''\n              this.settingsSubMenuEl_.appendChild(this.subMenu.menu.el())\n              this.update()\n              this.bindClickEvents()\n            }, 0)\n          })\n        }\n\n        this.reset()\n      }, 0)\n    })\n  }\n\n  eventHandlers () {\n    this.submenuClickHandler = this.onSubmenuClick.bind(this)\n    this.transitionEndHandler = this.onTransitionEnd.bind(this)\n  }\n\n  onSubmenuClick (event: any) {\n    let target = null\n\n    if (event.type === 'tap') {\n      target = event.target\n    } else {\n      target = event.currentTarget || event.target\n    }\n\n    if (target?.classList.contains('vjs-back-button')) {\n      this.loadMainMenu()\n      return\n    }\n\n    // To update the sub menu value on click, setTimeout is needed because\n    // updating the value is not instant\n    setTimeout(() => this.update(event), 0)\n\n    // Seems like videojs adds a vjs-hidden class on the caption menu after a click\n    // We don't need it\n    this.subMenu.menu.removeClass('vjs-hidden')\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   */\n  createEl () {\n    const el = videojs.dom.createEl('li', {\n      className: 'vjs-menu-item',\n      tabIndex: -1\n    })\n\n    this.settingsSubMenuTitleEl_ = videojs.dom.createEl('div', {\n      className: 'vjs-settings-sub-menu-title'\n    }) as HTMLElement\n\n    el.appendChild(this.settingsSubMenuTitleEl_)\n\n    this.settingsSubMenuValueEl_ = videojs.dom.createEl('div', {\n      className: 'vjs-settings-sub-menu-value'\n    }) as HTMLElement\n\n    el.appendChild(this.settingsSubMenuValueEl_)\n\n    this.settingsSubMenuEl_ = videojs.dom.createEl('div', {\n      className: 'vjs-settings-sub-menu'\n    }) as HTMLElement\n\n    return el as HTMLLIElement\n  }\n\n  /**\n   * Handle click on menu item\n   *\n   * @method handleClick\n   */\n  handleClick (event: videojs.EventTarget.Event) {\n    this.menuToLoad = 'submenu'\n    // Remove open class to ensure only the open submenu gets this class\n    videojs.dom.removeClass(this.el(), 'open')\n\n    super.handleClick(event);\n\n    (this.mainMenu.el() as HTMLElement).style.opacity = '0'\n    // Whether to add or remove vjs-hidden class on the settingsSubMenuEl element\n    if (videojs.dom.hasClass(this.settingsSubMenuEl_, 'vjs-hidden')) {\n      videojs.dom.removeClass(this.settingsSubMenuEl_, 'vjs-hidden')\n\n      // animation not played without timeout\n      setTimeout(() => {\n        this.settingsSubMenuEl_.style.opacity = '1'\n        this.settingsSubMenuEl_.style.marginRight = '0px'\n      }, 0)\n\n      this.settingsButton.setDialogSize(this.size)\n\n      const firstChild = this.subMenu.menu.children()[0]\n      if (firstChild) firstChild.focus()\n    } else {\n      videojs.dom.addClass(this.settingsSubMenuEl_, 'vjs-hidden')\n    }\n  }\n\n  /**\n   * Create back button\n   *\n   * @method createBackButton\n   */\n  createBackButton () {\n    const button = this.subMenu.menu.addChild('MenuItem', {}, 0)\n\n    button.addClass('vjs-back-button');\n    (button.el() as HTMLElement).innerHTML = this.player().localize(this.subMenu.controlText())\n  }\n\n  /**\n   * Add/remove prefixed event listener for CSS Transition\n   *\n   * @method PrefixedEvent\n   */\n  PrefixedEvent (element: any, type: any, callback: any, action = 'addEvent') {\n    const prefix = [ 'webkit', 'moz', 'MS', 'o', '' ]\n\n    for (let p = 0; p < prefix.length; p++) {\n      if (!prefix[p]) {\n        type = type.toLowerCase()\n      }\n\n      if (action === 'addEvent') {\n        element.addEventListener(prefix[p] + type, callback, false)\n      } else if (action === 'removeEvent') {\n        element.removeEventListener(prefix[p] + type, callback, false)\n      }\n    }\n  }\n\n  onTransitionEnd (event: any) {\n    if (event.propertyName !== 'margin-right') {\n      return\n    }\n\n    if (this.menuToLoad === 'mainmenu') {\n      // hide submenu\n      videojs.dom.addClass(this.settingsSubMenuEl_, 'vjs-hidden')\n\n      // reset opacity to 0\n      this.settingsSubMenuEl_.style.opacity = '0'\n    }\n  }\n\n  reset () {\n    videojs.dom.addClass(this.settingsSubMenuEl_, 'vjs-hidden')\n    this.settingsSubMenuEl_.style.opacity = '0'\n    this.setMargin()\n  }\n\n  loadMainMenu () {\n    const mainMenuEl = this.mainMenu.el() as HTMLElement\n    this.menuToLoad = 'mainmenu'\n    this.mainMenu.show()\n    mainMenuEl.style.opacity = '0'\n\n    // back button will always take you to main menu, so set dialog sizes\n    const mainMenuAny = this.mainMenu as any\n    this.settingsButton.setDialogSize([ mainMenuAny.width, mainMenuAny.height ])\n\n    // animation not triggered without timeout (some async stuff ?!?)\n    setTimeout(() => {\n      // animate margin and opacity before hiding the submenu\n      // this triggers CSS Transition event\n      this.setMargin()\n      mainMenuEl.style.opacity = '1'\n\n      const firstChild = this.mainMenu.children()[0]\n      if (firstChild) firstChild.focus()\n    }, 0)\n  }\n\n  build () {\n    this.subMenu.on('labelUpdated', () => {\n      this.update()\n    })\n    this.subMenu.on('menuChanged', () => {\n      this.bindClickEvents()\n      this.setSize()\n      this.update()\n    })\n\n    this.settingsSubMenuTitleEl_.innerHTML = this.player().localize(this.subMenu.controlText())\n    this.settingsSubMenuEl_.appendChild(this.subMenu.menu.el())\n    this.panelChildEl.appendChild(this.settingsSubMenuEl_)\n    this.update()\n\n    this.createBackButton()\n    this.setSize()\n    this.bindClickEvents()\n\n    // prefixed event listeners for CSS TransitionEnd\n    this.PrefixedEvent(\n      this.settingsSubMenuEl_,\n      'TransitionEnd',\n      this.transitionEndHandler,\n      'addEvent'\n    )\n  }\n\n  update (event?: any) {\n    let target: HTMLElement = null\n    const subMenu = this.subMenu.name()\n\n    if (event && event.type === 'tap') {\n      target = event.target\n    } else if (event) {\n      target = event.currentTarget\n    }\n\n    // Playback rate menu button doesn't get a vjs-selected class\n    // or sets options_['selected'] on the selected playback rate.\n    // Thus we get the submenu value based on the labelEl of playbackRateMenuButton\n    if (subMenu === 'PlaybackRateMenuButton') {\n      const html = (this.subMenu as any).labelEl_.innerHTML\n\n      setTimeout(() => {\n        this.settingsSubMenuValueEl_.innerHTML = html\n      }, 250)\n    } else {\n      // Loop through the submenu items to find the selected child\n      for (const subMenuItem of this.subMenu.menu.children_) {\n        if (!(subMenuItem instanceof component)) {\n          continue\n        }\n\n        if (subMenuItem.hasClass('vjs-selected')) {\n          const subMenuItemUntyped = subMenuItem as any\n\n          // Prefer to use the function\n          if (typeof subMenuItemUntyped.getLabel === 'function') {\n            this.settingsSubMenuValueEl_.innerHTML = subMenuItemUntyped.getLabel()\n            break\n          }\n\n          this.settingsSubMenuValueEl_.innerHTML = this.player().localize(subMenuItemUntyped.options_.label)\n        }\n      }\n    }\n\n    if (target && !target.classList.contains('vjs-back-button')) {\n      this.settingsButton.hideDialog()\n    }\n  }\n\n  bindClickEvents () {\n    for (const item of this.subMenu.menu.children()) {\n      if (!(item instanceof component)) {\n        continue\n      }\n      item.on([ 'tap', 'click' ], this.submenuClickHandler)\n    }\n  }\n\n  // save size of submenus on first init\n  // if number of submenu items change dynamically more logic will be needed\n  setSize () {\n    this.dialog.removeClass('vjs-hidden')\n    videojs.dom.removeClass(this.settingsSubMenuEl_, 'vjs-hidden')\n    this.size = this.settingsButton.getComponentSize(this.settingsSubMenuEl_)\n    this.setMargin()\n    this.dialog.addClass('vjs-hidden')\n    videojs.dom.addClass(this.settingsSubMenuEl_, 'vjs-hidden')\n  }\n\n  setMargin () {\n    if (!this.size) return\n\n    const [ width ] = this.size\n\n    this.settingsSubMenuEl_.style.marginRight = `-${width}px`\n  }\n\n  /**\n   * Hide the sub menu\n   */\n  hideSubMenu () {\n    // after removing settings item this.el_ === null\n    if (!this.el()) {\n      return\n    }\n\n    if (videojs.dom.hasClass(this.el(), 'open')) {\n      videojs.dom.addClass(this.settingsSubMenuEl_, 'vjs-hidden')\n      videojs.dom.removeClass(this.el(), 'open')\n    }\n  }\n\n}\n\n(SettingsMenuItem as any).prototype.contentElType = 'button'\nvideojs.registerComponent('SettingsMenuItem', SettingsMenuItem)\n\nexport { SettingsMenuItem }\n","import videojs from 'video.js'\nimport { toTitleCase } from '../common'\nimport { SettingsDialog } from './settings-dialog'\nimport { SettingsMenuItem } from './settings-menu-item'\nimport { SettingsPanel } from './settings-panel'\nimport { SettingsPanelChild } from './settings-panel-child'\n\nconst Button = videojs.getComponent('Button')\nconst Menu = videojs.getComponent('Menu')\nconst Component = videojs.getComponent('Component')\n\nexport interface SettingsButtonOptions extends videojs.ComponentOptions {\n  entries: any[]\n  setup?: {\n    maxHeightOffset: number\n  }\n}\n\nclass SettingsButton extends Button {\n  dialog: SettingsDialog\n  dialogEl: HTMLElement\n  menu: videojs.Menu\n  panel: SettingsPanel\n  panelChild: SettingsPanelChild\n\n  addSettingsItemHandler: typeof SettingsButton.prototype.onAddSettingsItem\n  disposeSettingsItemHandler: typeof SettingsButton.prototype.onDisposeSettingsItem\n  documentClickHandler: typeof SettingsButton.prototype.onDocumentClick\n  userInactiveHandler: typeof SettingsButton.prototype.onUserInactive\n\n  private settingsButtonOptions: SettingsButtonOptions\n\n  constructor (player: videojs.Player, options?: SettingsButtonOptions) {\n    super(player, options)\n\n    this.settingsButtonOptions = options\n\n    this.controlText('Settings')\n\n    this.dialog = this.player().addChild('settingsDialog')\n    this.dialogEl = this.dialog.el() as HTMLElement\n    this.menu = null\n    this.panel = this.dialog.addChild('settingsPanel')\n    this.panelChild = this.panel.addChild('settingsPanelChild')\n\n    this.addClass('vjs-settings')\n    this.el().setAttribute('aria-label', 'Settings Button')\n\n    // Event handlers\n    this.addSettingsItemHandler = this.onAddSettingsItem.bind(this)\n    this.disposeSettingsItemHandler = this.onDisposeSettingsItem.bind(this)\n    this.documentClickHandler = this.onDocumentClick.bind(this)\n    this.userInactiveHandler = this.onUserInactive.bind(this)\n\n    this.buildMenu()\n    this.bindEvents()\n\n    // Prepare the dialog\n    this.player().one('play', () => this.hideDialog())\n  }\n\n  onDocumentClick (event: MouseEvent) {\n    const element = event.target as HTMLElement\n\n    if (element?.classList?.contains('vjs-settings') || element?.parentElement?.classList?.contains('vjs-settings')) {\n      return\n    }\n\n    if (!this.dialog.hasClass('vjs-hidden')) {\n      this.hideDialog()\n    }\n  }\n\n  onDisposeSettingsItem (event: any, name: string) {\n    if (name === undefined) {\n      const children = this.menu.children()\n\n      while (children.length > 0) {\n        children[0].dispose()\n        this.menu.removeChild(children[0])\n      }\n\n      this.addClass('vjs-hidden')\n    } else {\n      const item = this.menu.getChild(name)\n\n      if (item) {\n        item.dispose()\n        this.menu.removeChild(item)\n      }\n    }\n\n    this.hideDialog()\n\n    if (this.settingsButtonOptions.entries.length === 0) {\n      this.addClass('vjs-hidden')\n    }\n  }\n\n  dispose () {\n    document.removeEventListener('click', this.documentClickHandler)\n\n    if (this.isInIframe()) {\n      window.removeEventListener('blur', this.documentClickHandler)\n    }\n  }\n\n  onAddSettingsItem (event: any, data: any) {\n    const [ entry, options ] = data\n\n    this.addMenuItem(entry, options)\n    this.removeClass('vjs-hidden')\n  }\n\n  onUserInactive () {\n    if (!this.dialog.hasClass('vjs-hidden')) {\n      this.hideDialog()\n    }\n  }\n\n  bindEvents () {\n    document.addEventListener('click', this.documentClickHandler)\n    if (this.isInIframe()) {\n      window.addEventListener('blur', this.documentClickHandler)\n    }\n\n    this.player().on('addsettingsitem', this.addSettingsItemHandler)\n    this.player().on('disposesettingsitem', this.disposeSettingsItemHandler)\n    this.player().on('userinactive', this.userInactiveHandler)\n  }\n\n  buildCSSClass () {\n    return `vjs-icon-settings ${super.buildCSSClass()}`\n  }\n\n  handleClick () {\n    if (this.dialog.hasClass('vjs-hidden')) {\n      this.showDialog()\n    } else {\n      this.hideDialog()\n    }\n  }\n\n  showDialog () {\n    this.player().peertube().onMenuOpened();\n\n    (this.menu.el() as HTMLElement).style.opacity = '1'\n\n    this.dialog.show()\n    this.el().setAttribute('aria-expanded', 'true')\n\n    this.setDialogSize(this.getComponentSize(this.menu))\n\n    const firstChild = this.menu.children()[0]\n    if (firstChild) firstChild.focus()\n  }\n\n  hideDialog () {\n    this.player_.peertube().onMenuClosed()\n\n    this.dialog.hide()\n    this.el().setAttribute('aria-expanded', 'false')\n\n    this.setDialogSize(this.getComponentSize(this.menu));\n    (this.menu.el() as HTMLElement).style.opacity = '1'\n    this.resetChildren()\n  }\n\n  getComponentSize (element: videojs.Component | HTMLElement) {\n    let width: number = null\n    let height: number = null\n\n    // Could be component or just DOM element\n    if (element instanceof Component) {\n      const el = element.el() as HTMLElement\n\n      width = el.offsetWidth\n      height = el.offsetHeight;\n\n      (element as any).width = width;\n      (element as any).height = height\n    } else {\n      width = element.offsetWidth\n      height = element.offsetHeight\n    }\n\n    return [ width, height ]\n  }\n\n  setDialogSize ([ width, height ]: number[]) {\n    if (typeof height !== 'number') {\n      return\n    }\n\n    const offset = this.settingsButtonOptions.setup.maxHeightOffset\n    const maxHeight = (this.player().el() as HTMLElement).offsetHeight - offset\n\n    const panelEl = this.panel.el() as HTMLElement\n\n    if (height > maxHeight) {\n      height = maxHeight\n      width += 17\n      panelEl.style.maxHeight = `${height}px`\n    } else if (panelEl.style.maxHeight !== '') {\n      panelEl.style.maxHeight = ''\n    }\n\n    this.dialogEl.style.width = `${width}px`\n    this.dialogEl.style.height = `${height}px`\n  }\n\n  buildMenu () {\n    this.menu = new Menu(this.player())\n    this.menu.addClass('vjs-main-menu')\n    const entries = this.settingsButtonOptions.entries\n\n    if (entries.length === 0) {\n      this.addClass('vjs-hidden')\n      this.panelChild.addChild(this.menu)\n      return\n    }\n\n    for (const entry of entries) {\n      this.addMenuItem(entry, this.settingsButtonOptions)\n    }\n\n    this.panelChild.addChild(this.menu)\n  }\n\n  addMenuItem (entry: any, options: any) {\n    const openSubMenu = function (this: any) {\n      if (videojs.dom.hasClass(this.el_, 'open')) {\n        videojs.dom.removeClass(this.el_, 'open')\n      } else {\n        videojs.dom.addClass(this.el_, 'open')\n      }\n    }\n\n    options.name = toTitleCase(entry)\n\n    const newOptions = Object.assign({}, options, { entry, menuButton: this })\n    const settingsMenuItem = new SettingsMenuItem(this.player(), newOptions)\n\n    this.menu.addChild(settingsMenuItem)\n\n    // Hide children to avoid sub menus stacking on top of each other\n    // or having multiple menus open\n    settingsMenuItem.on('click', videojs.bind(this, this.hideChildren))\n\n    // Whether to add or remove selected class on the settings sub menu element\n    settingsMenuItem.on('click', openSubMenu)\n  }\n\n  resetChildren () {\n    for (const menuChild of this.menu.children()) {\n      (menuChild as SettingsMenuItem).reset()\n    }\n  }\n\n  /**\n   * Hide all the sub menus\n   */\n  hideChildren () {\n    for (const menuChild of this.menu.children()) {\n      (menuChild as SettingsMenuItem).hideSubMenu()\n    }\n  }\n\n  isInIframe () {\n    return window.self !== window.top\n  }\n\n}\n\nComponent.registerComponent('SettingsButton', SettingsButton)\n\nexport { SettingsButton }\n","import videojs from 'video.js'\n\nconst Component = videojs.getComponent('Component')\n\nclass SettingsPanel extends Component {\n\n  createEl () {\n    return super.createEl('div', {\n      className: 'vjs-settings-panel',\n      innerHTML: '',\n      tabIndex: -1\n    })\n  }\n}\n\nComponent.registerComponent('SettingsPanel', SettingsPanel)\n\nexport { SettingsPanel }\n","import videojs from 'video.js'\n\nconst Component = videojs.getComponent('Component')\n\nclass SettingsPanelChild extends Component {\n\n  createEl () {\n    return super.createEl('div', {\n      className: 'vjs-settings-panel-child',\n      innerHTML: '',\n      tabIndex: -1\n    })\n  }\n}\n\nComponent.registerComponent('SettingsPanelChild', SettingsPanelChild)\n\nexport { SettingsPanelChild }\n","import videojs from 'video.js'\nimport { PlaylistPluginOptions } from '../../types'\nimport { PlaylistMenu } from './playlist-menu'\n\nconst ClickableComponent = videojs.getComponent('ClickableComponent')\n\nclass PlaylistButton extends ClickableComponent {\n  private playlistInfoElement: HTMLElement\n  private wrapper: HTMLElement\n\n  constructor (player: videojs.Player, options?: PlaylistPluginOptions & { playlistMenu: PlaylistMenu }) {\n    super(player, options as any)\n  }\n\n  createEl () {\n    this.wrapper = super.createEl('div', {\n      className: 'vjs-playlist-button',\n      innerHTML: '',\n      tabIndex: -1\n    }) as HTMLElement\n\n    const icon = super.createEl('div', {\n      className: 'vjs-playlist-icon',\n      innerHTML: '',\n      tabIndex: -1\n    })\n\n    this.playlistInfoElement = super.createEl('div', {\n      className: 'vjs-playlist-info',\n      innerHTML: '',\n      tabIndex: -1\n    }) as HTMLElement\n\n    this.wrapper.appendChild(icon)\n    this.wrapper.appendChild(this.playlistInfoElement)\n\n    this.update()\n\n    return this.wrapper\n  }\n\n  update () {\n    const options = this.options_ as PlaylistPluginOptions\n\n    this.playlistInfoElement.innerHTML = options.getCurrentPosition() + '/' + options.playlist.videosLength\n    this.wrapper.title = this.player().localize('Playlist: {1}', [ options.playlist.displayName ])\n  }\n\n  handleClick () {\n    const playlistMenu = this.getPlaylistMenu()\n    playlistMenu.open()\n  }\n\n  private getPlaylistMenu () {\n    return (this.options_ as any).playlistMenu as PlaylistMenu\n  }\n}\n\nvideojs.registerComponent('PlaylistButton', PlaylistButton)\n\nexport { PlaylistButton }\n","import videojs from 'video.js'\nimport { secondsToTime } from '@shared/core-utils'\nimport { VideoPlaylistElement } from '@shared/models'\nimport { PlaylistItemOptions } from '../../types'\n\nconst Component = videojs.getComponent('Component')\n\nclass PlaylistMenuItem extends Component {\n  private element: VideoPlaylistElement\n\n  constructor (player: videojs.Player, options?: PlaylistItemOptions) {\n    super(player, options as any)\n\n    this.emitTapEvents()\n\n    this.element = options.element\n\n    this.on([ 'click', 'tap' ], () => this.switchPlaylistItem())\n    this.on('keydown', event => this.handleKeyDown(event))\n  }\n\n  createEl () {\n    const options = this.options_ as PlaylistItemOptions\n\n    const li = super.createEl('li', {\n      className: 'vjs-playlist-menu-item',\n      innerHTML: ''\n    }) as HTMLElement\n\n    if (!options.element.video) {\n      li.classList.add('vjs-disabled')\n    }\n\n    const positionBlock = super.createEl('div', {\n      className: 'item-position-block'\n    }) as HTMLElement\n\n    const position = super.createEl('div', {\n      className: 'item-position',\n      innerHTML: options.element.position\n    })\n\n    positionBlock.appendChild(position)\n    li.appendChild(positionBlock)\n\n    if (options.element.video) {\n      this.buildAvailableVideo(li, positionBlock, options)\n    } else {\n      this.buildUnavailableVideo(li)\n    }\n\n    return li\n  }\n\n  setSelected (selected: boolean) {\n    if (selected) this.addClass('vjs-selected')\n    else this.removeClass('vjs-selected')\n  }\n\n  getElement () {\n    return this.element\n  }\n\n  private buildAvailableVideo (li: HTMLElement, positionBlock: HTMLElement, options: PlaylistItemOptions) {\n    const videoElement = options.element\n\n    const player = super.createEl('div', {\n      className: 'item-player'\n    })\n\n    positionBlock.appendChild(player)\n\n    const thumbnail = super.createEl('img', {\n      src: window.location.origin + videoElement.video.thumbnailPath\n    })\n\n    const infoBlock = super.createEl('div', {\n      className: 'info-block'\n    })\n\n    const title = super.createEl('div', {\n      innerHTML: videoElement.video.name,\n      className: 'title'\n    })\n\n    const channel = super.createEl('div', {\n      innerHTML: videoElement.video.channel.displayName,\n      className: 'channel'\n    })\n\n    infoBlock.appendChild(title)\n    infoBlock.appendChild(channel)\n\n    if (videoElement.startTimestamp || videoElement.stopTimestamp) {\n      let html = ''\n\n      if (videoElement.startTimestamp) html += secondsToTime(videoElement.startTimestamp)\n      if (videoElement.stopTimestamp) html += ' - ' + secondsToTime(videoElement.stopTimestamp)\n\n      const timestamps = super.createEl('div', {\n        innerHTML: html,\n        className: 'timestamps'\n      })\n\n      infoBlock.append(timestamps)\n    }\n\n    li.append(thumbnail)\n    li.append(infoBlock)\n  }\n\n  private buildUnavailableVideo (li: HTMLElement) {\n    const block = super.createEl('div', {\n      className: 'item-unavailable',\n      innerHTML: this.player().localize('Unavailable video')\n    })\n\n    li.appendChild(block)\n  }\n\n  private handleKeyDown (event: KeyboardEvent) {\n    if (event.code === 'Space' || event.code === 'Enter') {\n      this.switchPlaylistItem()\n    }\n  }\n\n  private switchPlaylistItem () {\n    const options = this.options_ as PlaylistItemOptions\n\n    options.onClicked()\n  }\n}\n\nComponent.registerComponent('PlaylistMenuItem', PlaylistMenuItem)\n\nexport { PlaylistMenuItem }\n","import videojs from 'video.js'\nimport { VideoPlaylistElement } from '@shared/models'\nimport { PlaylistPluginOptions } from '../../types'\nimport { PlaylistMenuItem } from './playlist-menu-item'\n\nconst Component = videojs.getComponent('Component')\n\nclass PlaylistMenu extends Component {\n  private menuItems: PlaylistMenuItem[]\n\n  constructor (player: videojs.Player, options?: PlaylistPluginOptions) {\n    super(player, options as any)\n\n    const self = this\n\n    function userInactiveHandler () {\n      self.close()\n    }\n\n    this.el().addEventListener('mouseenter', () => {\n      this.player().off('userinactive', userInactiveHandler)\n    })\n\n    this.el().addEventListener('mouseleave', () => {\n      this.player().one('userinactive', userInactiveHandler)\n    })\n\n    this.player().on('click', event => {\n      let current = event.target as HTMLElement\n\n      do {\n        if (\n          current.classList.contains('vjs-playlist-menu') ||\n          current.classList.contains('vjs-playlist-button')\n        ) {\n          return\n        }\n\n        current = current.parentElement\n      } while (current)\n\n      this.close()\n    })\n  }\n\n  createEl () {\n    this.menuItems = []\n\n    const options = this.getOptions()\n\n    const menu = super.createEl('div', {\n      className: 'vjs-playlist-menu',\n      innerHTML: '',\n      tabIndex: -1\n    })\n\n    const header = super.createEl('div', {\n      className: 'header'\n    })\n\n    const headerLeft = super.createEl('div')\n\n    const leftTitle = super.createEl('div', {\n      innerHTML: options.playlist.displayName,\n      className: 'title'\n    })\n\n    const playlistChannel = options.playlist.videoChannel\n    const leftSubtitle = super.createEl('div', {\n      innerHTML: playlistChannel\n        ? this.player().localize('By {1}', [ playlistChannel.displayName ])\n        : '',\n      className: 'channel'\n    })\n\n    headerLeft.appendChild(leftTitle)\n    headerLeft.appendChild(leftSubtitle)\n\n    const tick = super.createEl('div', {\n      className: 'cross'\n    })\n    tick.addEventListener('click', () => this.close())\n\n    header.appendChild(headerLeft)\n    header.appendChild(tick)\n\n    const list = super.createEl('ol')\n\n    for (const playlistElement of options.elements) {\n      const item = new PlaylistMenuItem(this.player(), {\n        element: playlistElement,\n        onClicked: () => this.onItemClicked(playlistElement)\n      })\n\n      list.appendChild(item.el())\n\n      this.menuItems.push(item)\n    }\n\n    menu.appendChild(header)\n    menu.appendChild(list)\n\n    return menu\n  }\n\n  update () {\n    const options = this.getOptions()\n\n    this.updateSelected(options.getCurrentPosition())\n  }\n\n  open () {\n    this.player().addClass('playlist-menu-displayed')\n  }\n\n  close () {\n    this.player().removeClass('playlist-menu-displayed')\n  }\n\n  updateSelected (newPosition: number) {\n    for (const item of this.menuItems) {\n      item.setSelected(item.getElement().position === newPosition)\n    }\n  }\n\n  private getOptions () {\n    return this.options_ as PlaylistPluginOptions\n  }\n\n  private onItemClicked (element: VideoPlaylistElement) {\n    this.getOptions().onItemClicked(element)\n  }\n}\n\nComponent.registerComponent('PlaylistMenu', PlaylistMenu)\n\nexport { PlaylistMenu }\n","import videojs from 'video.js'\nimport { PlaylistPluginOptions } from '../../types'\nimport { PlaylistButton } from './playlist-button'\nimport { PlaylistMenu } from './playlist-menu'\n\nconst Plugin = videojs.getPlugin('plugin')\n\nclass PlaylistPlugin extends Plugin {\n  private playlistMenu: PlaylistMenu\n  private playlistButton: PlaylistButton\n  private options: PlaylistPluginOptions\n\n  constructor (player: videojs.Player, options?: PlaylistPluginOptions) {\n    super(player, options)\n\n    this.options = options\n\n    this.player.ready(() => {\n      player.addClass('vjs-playlist')\n    })\n\n    this.playlistMenu = new PlaylistMenu(player, options)\n    this.playlistButton = new PlaylistButton(player, { ...options, playlistMenu: this.playlistMenu })\n\n    player.addChild(this.playlistMenu, options)\n    player.addChild(this.playlistButton, options)\n  }\n\n  updateSelected () {\n    this.playlistMenu.updateSelected(this.options.getCurrentPosition())\n  }\n}\n\nvideojs.registerPlugin('playlist', PlaylistPlugin)\nexport { PlaylistPlugin }\n","import debug from 'debug'\nimport videojs from 'video.js'\nimport { logger } from '@root-helpers/logger'\nimport { PeerTubeMobileButtons } from './peertube-mobile-buttons'\n\nconst debugLogger = debug('peertube:player:mobile')\n\nconst Plugin = videojs.getPlugin('plugin')\n\nclass PeerTubeMobilePlugin extends Plugin {\n  private static readonly DOUBLE_TAP_DELAY_MS = 250\n  private static readonly SET_CURRENT_TIME_DELAY = 1000\n\n  private peerTubeMobileButtons: PeerTubeMobileButtons\n\n  private seekAmount = 0\n\n  private lastTapEvent: TouchEvent\n  private tapTimeout: ReturnType<typeof setTimeout>\n  private newActiveState: boolean\n\n  private setCurrentTimeTimeout: ReturnType<typeof setTimeout>\n\n  constructor (player: videojs.Player, options: videojs.PlayerOptions) {\n    super(player, options)\n\n    this.peerTubeMobileButtons = player.addChild('PeerTubeMobileButtons', { reportTouchActivity: false }) as PeerTubeMobileButtons\n\n    if (videojs.browser.IS_ANDROID && screen.orientation) {\n      this.handleFullscreenRotation()\n    }\n\n    if (!this.player.options_.userActions) this.player.options_.userActions = {};\n\n    // FIXME: typings\n    (this.player.options_.userActions as any).click = false\n    this.player.options_.userActions.doubleClick = false\n\n    this.player.one('play', () => {\n      this.initTouchStartEvents()\n    })\n  }\n\n  private handleFullscreenRotation () {\n    this.player.on('fullscreenchange', () => {\n      if (!this.player.isFullscreen() || this.isPortraitVideo()) return\n\n      screen.orientation.lock('landscape')\n        .catch(err => logger.error('Cannot lock screen to landscape.', err))\n    })\n  }\n\n  private isPortraitVideo () {\n    return this.player.videoWidth() < this.player.videoHeight()\n  }\n\n  private initTouchStartEvents () {\n    const handleTouchStart = (event: TouchEvent) => {\n      if (this.tapTimeout) {\n        clearTimeout(this.tapTimeout)\n        this.tapTimeout = undefined\n      }\n\n      if (this.lastTapEvent && event.timeStamp - this.lastTapEvent.timeStamp < PeerTubeMobilePlugin.DOUBLE_TAP_DELAY_MS) {\n        debugLogger('Detected double tap')\n\n        this.lastTapEvent = undefined\n        this.onDoubleTap(event)\n        return\n      }\n\n      this.newActiveState = !this.player.userActive()\n\n      this.tapTimeout = setTimeout(() => {\n        debugLogger('No double tap detected, set user active state to %s.', this.newActiveState)\n\n        this.player.userActive(this.newActiveState)\n      }, PeerTubeMobilePlugin.DOUBLE_TAP_DELAY_MS)\n\n      this.lastTapEvent = event\n    }\n\n    this.player.on('touchstart', (event: TouchEvent) => {\n      // Only enable user active on player touch, we listen event on peertube mobile buttons to disable it\n      if (this.player.userActive()) return\n\n      handleTouchStart(event)\n    })\n\n    this.peerTubeMobileButtons.el().addEventListener('touchstart', (event: TouchEvent) => {\n      // Prevent mousemove/click events firing on the player, that conflict with our user active logic\n      event.preventDefault()\n\n      handleTouchStart(event)\n    }, { passive: false })\n  }\n\n  private onDoubleTap (event: TouchEvent) {\n    const playerWidth = this.player.currentWidth()\n\n    const rect = this.findPlayerTarget((event.target as HTMLElement)).getBoundingClientRect()\n    const offsetX = event.targetTouches[0].pageX - rect.left\n\n    debugLogger('Calculating double tap zone (player width: %d, offset X: %d)', playerWidth, offsetX)\n\n    if (offsetX > 0.66 * playerWidth) {\n      if (this.seekAmount < 0) this.seekAmount = 0\n\n      this.seekAmount += 10\n\n      debugLogger('Will forward %d seconds', this.seekAmount)\n    } else if (offsetX < 0.33 * playerWidth) {\n      if (this.seekAmount > 0) this.seekAmount = 0\n\n      this.seekAmount -= 10\n      debugLogger('Will rewind %d seconds', this.seekAmount)\n    }\n\n    this.peerTubeMobileButtons.displayFastSeek(this.seekAmount)\n\n    this.scheduleSetCurrentTime()\n  }\n\n  private findPlayerTarget (target: HTMLElement): HTMLElement {\n    if (target.classList.contains('video-js')) return target\n\n    return this.findPlayerTarget(target.parentElement)\n  }\n\n  private scheduleSetCurrentTime () {\n    this.player.pause()\n    this.player.addClass('vjs-fast-seeking')\n\n    if (this.setCurrentTimeTimeout) clearTimeout(this.setCurrentTimeTimeout)\n\n    this.setCurrentTimeTimeout = setTimeout(() => {\n      let newTime = this.player.currentTime() + this.seekAmount\n      this.seekAmount = 0\n\n      newTime = Math.max(0, newTime)\n      newTime = Math.min(this.player.duration(), newTime)\n\n      this.player.currentTime(newTime)\n      this.seekAmount = 0\n      this.peerTubeMobileButtons.displayFastSeek(0)\n\n      this.player.removeClass('vjs-fast-seeking')\n      this.player.userActive(false)\n\n      this.player.play()\n    }, PeerTubeMobilePlugin.SET_CURRENT_TIME_DELAY)\n  }\n}\n\nvideojs.registerPlugin('peertubeMobile', PeerTubeMobilePlugin)\nexport { PeerTubeMobilePlugin }\n","import videojs from 'video.js'\n\nconst Component = videojs.getComponent('Component')\nclass PeerTubeMobileButtons extends Component {\n\n  private rewind: Element\n  private forward: Element\n  private rewindText: Element\n  private forwardText: Element\n\n  createEl () {\n    const container = super.createEl('div', {\n      className: 'vjs-mobile-buttons-overlay'\n    }) as HTMLDivElement\n\n    const mainButton = super.createEl('div', {\n      className: 'main-button'\n    }) as HTMLDivElement\n\n    mainButton.addEventListener('touchstart', e => {\n      e.stopPropagation()\n\n      if (this.player_.paused() || this.player_.ended()) {\n        this.player_.play()\n        return\n      }\n\n      this.player_.pause()\n    })\n\n    this.rewind = super.createEl('div', { className: 'rewind-button vjs-hidden' })\n    this.forward = super.createEl('div', { className: 'forward-button vjs-hidden' })\n\n    for (let i = 0; i < 3; i++) {\n      this.rewind.appendChild(super.createEl('span', { className: 'icon' }))\n      this.forward.appendChild(super.createEl('span', { className: 'icon' }))\n    }\n\n    this.rewindText = this.rewind.appendChild(super.createEl('div', { className: 'text' }))\n    this.forwardText = this.forward.appendChild(super.createEl('div', { className: 'text' }))\n\n    container.appendChild(this.rewind)\n    container.appendChild(mainButton)\n    container.appendChild(this.forward)\n\n    return container\n  }\n\n  displayFastSeek (amount: number) {\n    if (amount === 0) {\n      this.hideRewind()\n      this.hideForward()\n      return\n    }\n\n    if (amount > 0) {\n      this.hideRewind()\n      this.displayForward(amount)\n      return\n    }\n\n    if (amount < 0) {\n      this.hideForward()\n      this.displayRewind(amount)\n      return\n    }\n  }\n\n  private hideRewind () {\n    this.rewind.classList.add('vjs-hidden')\n    this.rewindText.textContent = ''\n  }\n\n  private displayRewind (amount: number) {\n    this.rewind.classList.remove('vjs-hidden')\n    this.rewindText.textContent = this.player().localize('{1} seconds', [ amount + '' ])\n  }\n\n  private hideForward () {\n    this.forward.classList.add('vjs-hidden')\n    this.forwardText.textContent = ''\n  }\n\n  private displayForward (amount: number) {\n    this.forward.classList.remove('vjs-hidden')\n    this.forwardText.textContent = this.player().localize('{1} seconds', [ amount + '' ])\n  }\n}\n\nvideojs.registerComponent('PeerTubeMobileButtons', PeerTubeMobileButtons)\n\nexport {\n  PeerTubeMobileButtons\n}\n","import videojs from 'video.js'\n\ntype KeyHandler = { accept: (event: KeyboardEvent) => boolean, cb: (e: KeyboardEvent) => void }\n\nconst Plugin = videojs.getPlugin('plugin')\n\nclass PeerTubeHotkeysPlugin extends Plugin {\n  private static readonly VOLUME_STEP = 0.1\n  private static readonly SEEK_STEP = 5\n\n  private readonly handleKeyFunction: (event: KeyboardEvent) => void\n\n  private readonly handlers: KeyHandler[]\n\n  constructor (player: videojs.Player, options: videojs.PlayerOptions) {\n    super(player, options)\n\n    this.handlers = this.buildHandlers()\n\n    this.handleKeyFunction = (event: KeyboardEvent) => this.onKeyDown(event)\n    document.addEventListener('keydown', this.handleKeyFunction)\n  }\n\n  dispose () {\n    document.removeEventListener('keydown', this.handleKeyFunction)\n  }\n\n  private onKeyDown (event: KeyboardEvent) {\n    if (!this.isValidKeyTarget(event.target as HTMLElement)) return\n\n    for (const handler of this.handlers) {\n      if (handler.accept(event)) {\n        handler.cb(event)\n        return\n      }\n    }\n  }\n\n  private buildHandlers () {\n    const handlers: KeyHandler[] = [\n      // Play\n      {\n        accept: e => (e.key === ' ' || e.key === 'MediaPlayPause'),\n        cb: e => {\n          e.preventDefault()\n          e.stopPropagation()\n\n          if (this.player.paused()) this.player.play()\n          else this.player.pause()\n        }\n      },\n\n      // Increase volume\n      {\n        accept: e => this.isNaked(e, 'ArrowUp'),\n        cb: e => {\n          e.preventDefault()\n          this.player.volume(this.player.volume() + PeerTubeHotkeysPlugin.VOLUME_STEP)\n        }\n      },\n\n      // Decrease volume\n      {\n        accept: e => this.isNaked(e, 'ArrowDown'),\n        cb: e => {\n          e.preventDefault()\n          this.player.volume(this.player.volume() - PeerTubeHotkeysPlugin.VOLUME_STEP)\n        }\n      },\n\n      // Rewind\n      {\n        accept: e => this.isNaked(e, 'ArrowLeft') || this.isNaked(e, 'MediaRewind'),\n        cb: e => {\n          e.preventDefault()\n\n          const target = Math.max(0, this.player.currentTime() - PeerTubeHotkeysPlugin.SEEK_STEP)\n          this.player.currentTime(target)\n        }\n      },\n\n      // Forward\n      {\n        accept: e => this.isNaked(e, 'ArrowRight') || this.isNaked(e, 'MediaForward'),\n        cb: e => {\n          e.preventDefault()\n\n          const target = Math.min(this.player.duration(), this.player.currentTime() + PeerTubeHotkeysPlugin.SEEK_STEP)\n          this.player.currentTime(target)\n        }\n      },\n\n      // Fullscreen\n      {\n        // f key or Ctrl + Enter\n        accept: e => this.isNaked(e, 'f') || (!e.altKey && e.ctrlKey && e.key === 'Enter'),\n        cb: e => {\n          e.preventDefault()\n\n          if (this.player.isFullscreen()) this.player.exitFullscreen()\n          else this.player.requestFullscreen()\n        }\n      },\n\n      // Mute\n      {\n        accept: e => this.isNaked(e, 'm'),\n        cb: e => {\n          e.preventDefault()\n\n          this.player.muted(!this.player.muted())\n        }\n      },\n\n      // Increase playback rate\n      {\n        accept: e => e.key === '>',\n        cb: () => {\n          const target = Math.min(this.player.playbackRate() + 0.1, 5)\n\n          this.player.playbackRate(parseFloat(target.toFixed(2)))\n        }\n      },\n\n      // Decrease playback rate\n      {\n        accept: e => e.key === '<',\n        cb: () => {\n          const target = Math.max(this.player.playbackRate() - 0.1, 0.10)\n\n          this.player.playbackRate(parseFloat(target.toFixed(2)))\n        }\n      },\n\n      // Previous frame\n      {\n        accept: e => e.key === ',',\n        cb: () => {\n          this.player.pause()\n\n          // Calculate movement distance (assuming 30 fps)\n          const dist = 1 / 30\n          this.player.currentTime(this.player.currentTime() - dist)\n        }\n      },\n\n      // Next frame\n      {\n        accept: e => e.key === '.',\n        cb: () => {\n          this.player.pause()\n\n          // Calculate movement distance (assuming 30 fps)\n          const dist = 1 / 30\n          this.player.currentTime(this.player.currentTime() + dist)\n        }\n      }\n    ]\n\n    // 0-9 key handlers\n    for (let i = 0; i < 10; i++) {\n      handlers.push({\n        accept: e => e.key === i + '' && !e.ctrlKey, // If using ctrl key, it's a web browser hotkey\n        cb: e => {\n          e.preventDefault()\n\n          this.player.currentTime(this.player.duration() * i * 0.1)\n        }\n      })\n    }\n\n    return handlers\n  }\n\n  private isValidKeyTarget (eventEl: HTMLElement) {\n    const playerEl = this.player.el()\n    const activeEl = document.activeElement\n    const currentElTagName = eventEl.tagName.toLowerCase()\n\n    return (\n      activeEl === playerEl ||\n      activeEl === playerEl.querySelector('.vjs-tech') ||\n      activeEl === playerEl.querySelector('.vjs-control-bar') ||\n      eventEl.id === 'content' ||\n      currentElTagName === 'body' ||\n      currentElTagName === 'video'\n    )\n  }\n\n  private isNaked (event: KeyboardEvent, key: string) {\n    return (!event.ctrlKey && !event.altKey && !event.metaKey && !event.shiftKey && event.key === key)\n  }\n}\n\nvideojs.registerPlugin('peerTubeHotkeysPlugin', PeerTubeHotkeysPlugin)\nexport { PeerTubeHotkeysPlugin }\n","import {\n  CommonOptions,\n  NextPreviousVideoButtonOptions,\n  PeerTubeLinkButtonOptions,\n  PeertubePlayerManagerOptions,\n  PlayerMode\n} from '../../types'\n\nexport class ControlBarOptionsBuilder {\n  private options: CommonOptions\n\n  constructor (\n    globalOptions: PeertubePlayerManagerOptions,\n    private mode: PlayerMode\n  ) {\n    this.options = globalOptions.common\n  }\n\n  getChildrenOptions () {\n    const children = {}\n\n    if (this.options.previousVideo) {\n      Object.assign(children, this.getPreviousVideo())\n    }\n\n    Object.assign(children, { playToggle: {} })\n\n    if (this.options.nextVideo) {\n      Object.assign(children, this.getNextVideo())\n    }\n\n    Object.assign(children, {\n      currentTimeDisplay: {},\n      timeDivider: {},\n      durationDisplay: {},\n      liveDisplay: {},\n\n      flexibleWidthSpacer: {},\n\n      ...this.getProgressControl(),\n\n      p2PInfoButton: {\n        p2pEnabled: this.options.p2pEnabled\n      },\n\n      muteToggle: {},\n      volumeControl: {},\n\n      ...this.getSettingsButton()\n    })\n\n    /*if (this.options.peertubeLink === true) {\n      Object.assign(children, {\n        peerTubeLinkButton: {\n          shortUUID: this.options.videoShortUUID,\n          //instanceName: this.options.instanceName\n        } as PeerTubeLinkButtonOptions\n      })\n    }*/\n\n    Object.assign(children, {\n      PictureInPictureBastyon: {}\n    })\n\n    if (this.options.theaterButton === true) {\n      Object.assign(children, {\n        theaterButton: {}\n      })\n    }\n\n    Object.assign(children, {\n      fullscreenToggle: {}\n    })\n\n    return children\n  }\n\n  private getSettingsButton () {\n    const settingEntries: string[] = []\n\n    settingEntries.push('playbackRateMenuButton')\n\n    //if (this.options.captions === true) settingEntries.push('captionsButton')\n\n    settingEntries.push('resolutionMenuButton')\n\n    return {\n      settingsButton: {\n        setup: {\n          maxHeightOffset: 40\n        },\n        entries: settingEntries\n      }\n    }\n  }\n\n  private getProgressControl () {\n    const loadProgressBar = 'loadProgressBar'\n\n    return {\n      progressControl: {\n        children: {\n          seekBar: {\n            children: {\n              [loadProgressBar]: {},\n              mouseTimeDisplay: {},\n              playProgressBar: {}\n            }\n          }\n        }\n      }\n    }\n  }\n\n  private getPreviousVideo () {\n    const buttonOptions: NextPreviousVideoButtonOptions = {\n      type: 'previous',\n      handler: this.options.previousVideo,\n      isDisabled: () => {\n        if (!this.options.hasPreviousVideo) return false\n\n        return !this.options.hasPreviousVideo()\n      }\n    }\n\n    return { previousVideoButton: buttonOptions }\n  }\n\n  private getNextVideo () {\n    const buttonOptions: NextPreviousVideoButtonOptions = {\n      type: 'next',\n      handler: this.options.nextVideo,\n      isDisabled: () => {\n        if (!this.options.hasNextVideo) return false\n\n        return !this.options.hasNextVideo()\n      }\n    }\n\n    return { nextVideoButton: buttonOptions }\n  }\n}\n","import { basename, dirname } from 'path'\nimport { logger } from '@root-helpers/logger'\n\nclass RedundancyUrlManager {\n\n  constructor (private baseUrls: string[] = []) {\n    // empty\n  }\n\n  removeBySegmentUrl (segmentUrl: string) {\n    logger.info(`Removing redundancy of segment URL ${segmentUrl}.`)\n\n    const baseUrl = dirname(segmentUrl)\n\n    this.baseUrls = this.baseUrls.filter(u => u !== baseUrl && u !== baseUrl + '/')\n  }\n\n  buildUrl (url: string) {\n    const max = this.baseUrls.length + 1\n    const i = this.getRandomInt(max)\n\n    if (i === max - 1) return url\n\n    const newBaseUrl = this.baseUrls[i]\n    const slashPart = newBaseUrl.endsWith('/') ? '' : '/'\n\n    return newBaseUrl + slashPart + basename(url)\n  }\n\n  countBaseUrls () {\n    return this.baseUrls.length\n  }\n\n  private getRandomInt (max: number) {\n    return Math.floor(Math.random() * Math.floor(max))\n  }\n}\n\n// ---------------------------------------------------------------------------\n\nexport {\n  RedundancyUrlManager\n}\n","import { Segment } from 'p2p-media-loader-core-basyton'\nimport { RedundancyUrlManager } from './redundancy-url-manager'\n\nfunction segmentUrlBuilderFactory (redundancyUrlManager: RedundancyUrlManager) {\n  return function segmentBuilder (segment: Segment) {\n    return redundancyUrlManager.buildUrl(segment.url)\n  }\n}\n\n// ---------------------------------------------------------------------------\n\nexport {\n  segmentUrlBuilderFactory\n}\n","function copyToClipboard (text: string) {\n  const el = document.createElement('textarea')\n  el.value = text\n  el.setAttribute('readonly', '')\n  el.style.position = 'absolute'\n  el.style.left = '-9999px'\n  document.body.appendChild(el)\n  el.select()\n  document.execCommand('copy')\n  document.body.removeChild(el)\n}\n\nfunction wait (ms: number) {\n  return new Promise<void>(res => {\n    setTimeout(() => res(), ms)\n  })\n}\n\nexport {\n  copyToClipboard,\n  wait\n}\n","import { basename } from 'path'\nimport { Segment } from 'p2p-media-loader-core-basyton'\nimport { logger } from '@root-helpers/logger'\nimport { wait } from '@root-helpers/utils'\n\ntype SegmentsJSON = { [filename: string]: string | { [byterange: string]: string } }\n\nconst maxRetries = 3\n\nfunction findbyqualityname(segments : any, name : string){\n\n  var result = undefined\n\n  name = name.substring(36)\n\n\n\n  for (var key in segments) {\n    if (segments.hasOwnProperty(key) && key.indexOf(name) > -1) {\n      result = segments[key]\n    }\n  }\n\n\n  return result\n}\n\nfunction segmentValidatorFactory (segmentsSha256Url: string, isLive: boolean) {\n  let segmentsJSON = fetchSha256Segments(segmentsSha256Url)\n  const regex = /bytes=(\\d+)-(\\d+)/\n\n  return async function segmentValidator (segment: Segment, _method: string, _peerId: string, retry = 1) {\n    // Wait for hash generation from the server\n    if (isLive) await wait(1000)\n\n    const filename = basename(segment.url)\n\n    const segments = (await segmentsJSON)\n\n    const segmentValue = segments[filename] || findbyqualityname(segments, filename)\n\n\n\n    if (!segmentValue && retry > maxRetries) {\n      throw new Error(`Unknown segment name ${filename} in segment validator`)\n    }\n\n    if (!segmentValue) {\n      logger.info(`Refetching sha segments for ${filename}`)\n\n      await wait(1000)\n\n      segmentsJSON = fetchSha256Segments(segmentsSha256Url)\n      await segmentValidator(segment, _method, _peerId, retry + 1)\n\n      return\n    }\n\n    let hashShouldBe: string\n    let range = ''\n\n    if (typeof segmentValue === 'string') {\n      hashShouldBe = segmentValue\n    } else {\n      const captured = regex.exec(segment.range)\n      range = captured[1] + '-' + captured[2]\n\n      hashShouldBe = segmentValue[range]\n    }\n\n    if (hashShouldBe === undefined) {\n      throw new Error(`Unknown segment name ${filename}/${range} in segment validator`)\n    }\n\n\n    console.log('segment.data', segment.url, range, segment.data)\n\n    const calculatedSha = await sha256Hex(segment.data)\n    if (calculatedSha !== hashShouldBe) {\n\n      \n\n      throw new Error(\n        `Hashes does not correspond for segment ${filename}/${range}` +\n        `(expected: ${hashShouldBe} instead of ${calculatedSha})`\n      )\n    }\n  }\n}\n\n// ---------------------------------------------------------------------------\n\nexport {\n  segmentValidatorFactory\n}\n\n// ---------------------------------------------------------------------------\n\nfunction fetchSha256Segments (url: string) {\n  return fetch(url)\n    .then(res => res.json() as Promise<SegmentsJSON>)\n    .catch(err => {\n      logger.error('Cannot get sha256 segments', err)\n      return {}\n    })\n}\n\nasync function sha256Hex (data?: ArrayBuffer) {\n  if (!data) return undefined\n\n  if (window.crypto.subtle) {\n    return window.crypto.subtle.digest('SHA-256', data)\n      .then(data => bufferToHex(data))\n  }\n\n  // Fallback for non HTTPS context\n  const shaModule = (await import('sha.js') as any).default\n  // eslint-disable-next-line new-cap\n  return new shaModule.sha256().update(data).digest('hex')\n}\n\n// Thanks: https://stackoverflow.com/a/53307879\nfunction bufferToHex (buffer?: ArrayBuffer) {\n  if (!buffer) return ''\n\n  let s = ''\n  const h = '0123456789abcdef'\n  const o = new Uint8Array(buffer)\n\n  o.forEach((v: any) => {\n    s += h[v >> 4] + h[v & 15]\n  })\n\n  return s\n}\n","import { HybridLoaderSettings } from 'p2p-media-loader-core-basyton'\nimport { HlsJsEngineSettings } from 'p2p-media-loader-hlsjs-basyton'\nimport { logger } from '@root-helpers/logger'\nimport { LiveVideoLatencyMode } from '@shared/models'\nimport { getAverageBandwidthInStore } from '../../peertube-player-local-storage'\nimport { P2PMediaLoader, P2PMediaLoaderPluginOptions } from '../../types'\nimport { PeertubePlayerManagerOptions } from '../../types/manager-options'\nimport { getRtcConfig } from '../common'\nimport { RedundancyUrlManager } from '../p2p-media-loader/redundancy-url-manager'\nimport { segmentUrlBuilderFactory } from '../p2p-media-loader/segment-url-builder'\nimport { segmentValidatorFactory } from '../p2p-media-loader/segment-validator'\n//import CapLevelController from './peertube-cap-level-controller'\n\nexport class HLSOptionsBuilder {\n\n  constructor (\n    private options: PeertubePlayerManagerOptions,\n    private p2pMediaLoaderModule?: any\n  ) {\n\n  }\n\n  getPluginOptions () {\n    const commonOptions = this.options.common\n\n    const redundancyUrlManager = new RedundancyUrlManager(this.options.p2pMediaLoader.redundancyBaseUrls)\n\n    const p2pMediaLoaderConfig = this.getP2PMediaLoaderOptions(redundancyUrlManager)\n    const loader = new this.p2pMediaLoaderModule.Engine(p2pMediaLoaderConfig).createLoaderClass() as P2PMediaLoader\n\n    const p2pMediaLoader: P2PMediaLoaderPluginOptions = {\n      redundancyUrlManager,\n      type: 'application/x-mpegURL',\n      startTime: commonOptions.startTime,\n      src: this.options.p2pMediaLoader.playlistUrl,\n      loader\n    }\n\n    const hlsjs = {\n      levelLabelHandler: (level: { height: number, width: number }) => {\n        const resolution = Math.min(level.height || 0, level.width || 0)\n\n        const file = this.options.p2pMediaLoader.videoFiles.find(f => f.resolution.id === resolution)\n        // We don't have files for live videos\n        if (!file) return level.height\n\n        let label = file.resolution.label\n        if (file.fps >= 50) label += file.fps\n\n        return label\n      }\n    }\n\n    const html5 = {\n      hlsjsConfig: this.getHLSJSOptions(loader)\n    }\n\n    return { p2pMediaLoader, hlsjs, html5 }\n  }\n\n  // ---------------------------------------------------------------------------\n\n  private getP2PMediaLoaderOptions (redundancyUrlManager: RedundancyUrlManager): HlsJsEngineSettings {\n    let consumeOnly = false\n    if ((navigator as any)?.connection?.type === 'cellular' /*|| (window as any).cordova*/) {\n      logger.info('We are on a cellular connection: disabling seeding.')\n      consumeOnly = true\n    }\n\n    const trackerAnnounce = this.options.p2pMediaLoader.trackerAnnounce\n                                                 .filter(t => t.startsWith('ws'))\n\n    const specificLiveOrVODOptions = this.options.common.isLive\n      ? this.getP2PMediaLoaderLiveOptions()\n      : this.getP2PMediaLoaderVODOptions()\n\n    return {\n      loader: {\n        trackerAnnounce,\n        rtcConfig: getRtcConfig(),\n\n        simultaneousHttpDownloads: 1,\n        httpFailedSegmentTimeout: 1000,\n\n        segmentValidator:  !this.options.common.localTransport ? segmentValidatorFactory(this.options.p2pMediaLoader.segmentsSha256Url, this.options.common.isLive) : undefined,\n        segmentUrlBuilder: segmentUrlBuilderFactory(redundancyUrlManager),\n\n        useP2P: this.options.common.p2pEnabled,\n        consumeOnly,\n        segmentsStorage : this.options.segmentsStorage,\n\n        localTransport : this.options.common.localTransport,\n\n        ...specificLiveOrVODOptions\n      },\n      segments: {\n        assetsStorage : this.options.assetsStorage,\n        swarmId: this.options.p2pMediaLoader.playlistUrl,\n        forwardSegmentCount: specificLiveOrVODOptions.p2pDownloadMaxPriority ?? 20\n      }\n    }\n  }\n\n  private getP2PMediaLoaderLiveOptions (): Partial<HybridLoaderSettings> {\n    const base = {\n      requiredSegmentsPriority: 1\n    }\n\n    const latencyMode = this.options.common.liveOptions.latencyMode\n\n    switch (latencyMode) {\n      case LiveVideoLatencyMode.SMALL_LATENCY:\n        return {\n          ...base,\n\n          useP2P: false,\n          httpDownloadProbability: 1\n        }\n\n      case LiveVideoLatencyMode.HIGH_LATENCY:\n        return base\n\n      default:\n        return base\n    }\n  }\n\n  private getP2PMediaLoaderVODOptions (): Partial<HybridLoaderSettings> {\n    return {\n      requiredSegmentsPriority: 3,\n      skipSegmentBuilderPriority: 1,\n\n      cachedSegmentExpiration: 10 * 60 * 1000,\n      cachedSegmentsCount: 30,\n\n      httpDownloadMaxPriority: 9,\n      httpDownloadProbability: 0.06,\n      httpDownloadProbabilitySkipIfNoPeers: true,\n\n      p2pDownloadMaxPriority: 50\n    }\n  }\n\n  // ---------------------------------------------------------------------------\n\n  private getHLSJSOptions (loader: P2PMediaLoader) {\n    const specificLiveOrVODOptions = this.options.common.isLive\n      ? this.getHLSLiveOptions()\n      : this.getHLSVODOptions()\n\n    //autoLevelEnabled\n\n    const base = {\n      capLevelToPlayerSize: true,\n      autoStartLoad: false,\n\n      loader,\n\n      ...specificLiveOrVODOptions\n    }\n\n\n    const averageBandwidth = getAverageBandwidthInStore()\n    if (!averageBandwidth) return base\n\n    return {\n      ...base,\n\n      abrEwmaDefaultEstimate: averageBandwidth * 8, // We want bit/s\n      backBufferLength: 90,\n      startLevel: -1,\n      testBandwidth: false,\n      debug: false,\n\n      //autoLevelEnabled : !(this.options.common.videoDuration > 0 && this.options.common.videoDuration < 60000)\n\n     // capLevelController : CapLevelController\n    }\n  }\n\n  private getHLSLiveOptions () {\n    const latencyMode = this.options.common.liveOptions.latencyMode\n\n    switch (latencyMode) {\n      case LiveVideoLatencyMode.SMALL_LATENCY:\n        return {\n          liveSyncDurationCount: 2\n        }\n\n      case LiveVideoLatencyMode.HIGH_LATENCY:\n        return {\n          liveSyncDurationCount: 10\n        }\n\n      default:\n        return {\n          liveSyncDurationCount: 5\n        }\n    }\n  }\n\n  private getHLSVODOptions () {\n    return {\n      liveSyncDurationCount: 5\n    }\n  }\n}\n","import { PeertubePlayerManagerOptions } from '../../types'\n\nexport class WebTorrentOptionsBuilder {\n\n  constructor (\n    private options: PeertubePlayerManagerOptions,\n    private autoPlayValue: any\n  ) {\n\n  }\n\n  getPluginOptions () {\n    const commonOptions = this.options.common\n    const webtorrentOptions = this.options.webtorrent\n    const p2pMediaLoaderOptions = this.options.p2pMediaLoader\n\n    const autoplay = this.autoPlayValue === 'play'\n\n    const webtorrent = {\n      autoplay,\n\n      playerRefusedP2P: commonOptions.p2pEnabled === false,\n      videoDuration: commonOptions.videoDuration,\n      playerElement: commonOptions.playerElement,\n\n      videoFiles: webtorrentOptions.videoFiles.length !== 0\n        ? webtorrentOptions.videoFiles\n        // The WebTorrent plugin won't be able to play these files, but it will fallback to HTTP mode\n        : p2pMediaLoaderOptions?.videoFiles || [],\n\n      startTime: commonOptions.startTime\n    }\n\n    return { webtorrent }\n  }\n}\n","import videojs from 'video.js'\nimport { copyToClipboard } from '@root-helpers/utils'\nimport { isIOS, isSafari } from '@root-helpers/web-browser'\nimport { buildVideoLink, decorateVideoLink, pick } from '@shared/core-utils'\nimport { isDefaultLocale } from '@shared/core-utils/i18n'\nimport { VideoJSPluginOptions } from '../../types'\nimport { CommonOptions, PeertubePlayerManagerOptions, PlayerMode } from '../../types/manager-options'\nimport { ControlBarOptionsBuilder } from './control-bar-options-builder'\nimport { HLSOptionsBuilder } from './hls-options-builder'\nimport { WebTorrentOptionsBuilder } from './webtorrent-options-builder'\n\nexport class ManagerOptionsBuilder {\n\n  constructor (\n    private mode: PlayerMode,\n    private options: PeertubePlayerManagerOptions,\n    private p2pMediaLoaderModule?: any\n  ) {\n\n  }\n\n  getVideojsOptions (alreadyPlayed: boolean): videojs.PlayerOptions {\n    const commonOptions = this.options.common\n\n    let autoplay = this.getAutoPlayValue(commonOptions.autoplay, alreadyPlayed)\n    const html5 = {\n      preloadTextTracks: false\n    }\n\n    const plugins: VideoJSPluginOptions = {\n      peertube: {\n        mode: this.mode,\n        autoplay, // Use peertube plugin autoplay because we could get the file by webtorrent\n\n        ...pick(commonOptions, [\n          'videoViewUrl',\n          'authorizationHeader',\n          'startTime',\n          'videoDuration',\n          'subtitle',\n        //  'videoCaptions',\n          'stopTime',\n          'isLive',\n          'videoUUID',\n        ])\n      }\n    }\n\n    /*if (commonOptions.playlist) {\n      plugins.playlist = commonOptions.playlist\n    }*/\n\n\n\n    if (this.mode === 'p2p-media-loader') {\n      const hlsOptionsBuilder = new HLSOptionsBuilder(this.options, this.p2pMediaLoaderModule)\n      const options = hlsOptionsBuilder.getPluginOptions()\n\n      Object.assign(plugins, pick(options, [ 'hlsjs', 'p2pMediaLoader' ]))\n      Object.assign(html5, options.html5)\n    } else if (this.mode === 'webtorrent') {\n      const webtorrentOptionsBuilder = new WebTorrentOptionsBuilder(this.options, this.getAutoPlayValue(autoplay, alreadyPlayed))\n\n      Object.assign(plugins, webtorrentOptionsBuilder.getPluginOptions())\n\n      // WebTorrent plugin handles autoplay, because we do some hackish stuff in there\n      autoplay = false\n    }\n\n    Object.assign(plugins, {\n      hotkeys : {}\n    })\n\n    const controlBarOptionsBuilder = new ControlBarOptionsBuilder(this.options, this.mode)\n\n    const videojsOptions = {\n      html5,\n\n      // We don't use text track settings for now\n      textTrackSettings: false as any, // FIXME: typings\n      controls: commonOptions.controls !== undefined ? commonOptions.controls : true,\n      loop: commonOptions.loop !== undefined ? commonOptions.loop : false,\n\n      muted: commonOptions.muted !== undefined\n        ? commonOptions.muted\n        : undefined, // Undefined so the player knows it has to check the local storage\n\n      autoplay: this.getAutoPlayValue(autoplay, alreadyPlayed),\n\n      poster: commonOptions.poster,\n      inactivityTimeout: commonOptions.inactivityTimeout,\n      playbackRates: [ 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2 ],\n\n      plugins,\n\n      sources : commonOptions.sources,\n\n      controlBar: {\n        children: controlBarOptionsBuilder.getChildrenOptions() as any // FIXME: typings\n      },\n\n\n    }\n\n    if (commonOptions.language && !isDefaultLocale(commonOptions.language)) {\n      Object.assign(videojsOptions, { language: commonOptions.language })\n    }\n\n    return videojsOptions\n  }\n\n  private getAutoPlayValue (autoplay: any, alreadyPlayed: boolean) {\n    if (autoplay !== true) return autoplay\n\n    // On first play, disable autoplay to avoid issues\n    // But if the player already played videos, we can safely autoplay next ones\n    if (isIOS() || isSafari()) {\n      return alreadyPlayed ? 'play' : false\n    }\n\n    return 'play'\n  }\n\n  getContextMenuOptions (player: videojs.Player, commonOptions: CommonOptions) {\n    const videoUUID = commonOptions.videoUUID\n    const serverUrl = commonOptions.serverUrl\n\n    const content = () => {\n      const isLoopEnabled = player.options_['loop']\n\n      const items = [\n        {\n          icon: 'repeat',\n          label: player.localize('Play in loop') + (isLoopEnabled ? '<span class=\"vjs-icon-tick-white\"></span>' : ''),\n          listener: function () {\n            player.options_['loop'] = !isLoopEnabled\n          }\n        },\n        {\n          // icon: 'repeat',\n          label: 'Send video playback information to devs',\n          listener: function (this: videojs.Player) {\n            (this as any).tech_.hlsProvider.sendLogsCache(videoUUID, serverUrl);\n          }\n        },\n        // {\n        //   label: player.localize('Copy the video URL'),\n        //   listener: function () {\n        //     copyToClipboard(buildVideoLink({ shortUUID: commonOptions.videoShortUUID }))\n        //   }\n        // },\n        // {\n        //   label: player.localize('Copy the video URL at the current time'),\n        //   listener: function (this: videojs.Player) {\n        //     const url = buildVideoLink({ shortUUID: commonOptions.videoShortUUID })\n\n        //     copyToClipboard(decorateVideoLink({ url, startTime: this.currentTime() }))\n        //   }\n        // },\n        /*{\n          icon: 'code',\n          label: player.localize('Copy embed code'),\n          listener: () => {\n            copyToClipboard(buildVideoOrPlaylistEmbed(commonOptions.embedUrl, commonOptions.embedTitle))\n          }\n        }*/\n      ]\n\n      /*if (this.mode === 'webtorrent') {\n        items.push({\n          label: player.localize('Copy magnet URI'),\n          listener: function (this: videojs.Player) {\n            copyToClipboard(this.webtorrent().getCurrentVideoFile().magnetUri)\n          }\n        })\n      }*/\n\n      items.push({\n        icon: 'info',\n        label: player.localize('Stats for nerds'),\n        listener: () => {\n          player.stats().show()\n        }\n      })\n\n      return items.map(i => ({\n        ...i,\n        label: `<span class=\"vjs-icon-${i.icon || 'link-2'}\"></span>` + i.label\n      }))\n    }\n\n    return { content }\n  }\n}\n","//@ts-nocheck\n\nimport { Events } from 'hls.js/src/events';\n\nimport type {\n  BufferCodecsData,\n  MediaAttachingData,\n  FPSDropLevelCappingData,\n} from 'hls.js/src/types/events';\nimport type { ComponentAPI } from 'hls.js/src/types/component-api';\nimport type Hls from \"hls.js\";\n\n\nclass CapLevelController implements ComponentAPI {\n  public autoLevelCapping: number;\n  public firstLevel: number;\n  public media: HTMLVideoElement | null;\n  public restrictedLevels: Array<number>;\n  public timer: number | undefined;\n  public paused: Boolean\n\n  private hls: Hls;\n\n  private streamController?: any;\n  public clientRect: { width: number; height: number } | null;\n  public clientRectLast: { width: number; height: number } | null;\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n    this.autoLevelCapping = Number.POSITIVE_INFINITY;\n    this.firstLevel = -1;\n    this.media = null;\n    this.restrictedLevels = [];\n    this.timer = undefined;\n    this.clientRect = null;\n    this.paused = true\n\n    /*this.hls.pauseCapping = () => {\n        this.paused = true\n    }\n\n    this.hls.resumeCapping = () => {\n        this.paused = false\n    }*/\n\n    this.registerListeners();\n  }\n\n  public setStreamController(streamController: StreamController) {\n    this.streamController = streamController;\n  }\n\n  public destroy() {\n    this.unregisterListener();\n    if (this.hls.config.capLevelToPlayerSize) {\n      this.stopCapping();\n    }\n    this.media = null;\n    this.clientRect = null;\n    // @ts-ignore\n    this.hls = this.streamController = null;\n  }\n\n  protected registerListeners() {\n    const { hls } = this;\n    hls.on(Events.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this);\n    hls.on(Events.MEDIA_ATTACHING, this.onMediaAttaching, this);\n    hls.on(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.on(Events.BUFFER_CODECS, this.onBufferCodecs, this);\n    hls.on(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n  }\n\n  protected unregisterListener() {\n    const { hls } = this;\n    hls.off(Events.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this);\n    hls.off(Events.MEDIA_ATTACHING, this.onMediaAttaching, this);\n    hls.off(Events.MANIFEST_PARSED, this.onManifestParsed, this);\n    hls.off(Events.BUFFER_CODECS, this.onBufferCodecs, this);\n    hls.off(Events.MEDIA_DETACHING, this.onMediaDetaching, this);\n  }\n\n  protected onFpsDropLevelCapping(\n    event: Events.FPS_DROP_LEVEL_CAPPING,\n    data: FPSDropLevelCappingData\n  ) {\n    // Don't add a restricted level more than once\n    if (\n      CapLevelController.isLevelAllowed(\n        data.droppedLevel,\n        this.restrictedLevels\n      )\n    ) {\n      this.restrictedLevels.push(data.droppedLevel);\n    }\n  }\n\n  protected onMediaAttaching(\n    event: Events.MEDIA_ATTACHING,\n    data: MediaAttachingData\n  ) {\n    this.media = data.media instanceof HTMLVideoElement ? data.media : null;\n  }\n\n  protected onManifestParsed(\n    event: any,\n    data: any\n  ) {\n    const hls = this.hls;\n    this.restrictedLevels = [];\n    this.firstLevel = data.firstLevel;\n    if (hls.config.capLevelToPlayerSize && data.video) {\n      // Start capping immediately if the manifest has signaled video codecs\n      this.startCapping();\n    }\n  }\n\n  // Only activate capping when playing a video stream; otherwise, multi-bitrate audio-only streams will be restricted\n  // to the first level\n  protected onBufferCodecs(\n    event: Events.BUFFER_CODECS,\n    data: BufferCodecsData\n  ) {\n    const hls = this.hls;\n    if (hls.config.capLevelToPlayerSize && data.video) {\n      // If the manifest did not signal a video codec capping has been deferred until we're certain video is present\n      this.startCapping();\n    }\n  }\n\n  protected onMediaDetaching() {\n    this.stopCapping();\n  }\n\n  detectPlayerSize() {\n    if (this.media && this.mediaHeight > 0 && this.mediaWidth > 0) {\n      const levels = this.hls.levels;\n      \n      if (levels.length) {\n        const hls = this.hls;\n        hls.autoLevelCapping = this.getMaxLevel(levels.length - 1);\n\n        if (\n          hls.autoLevelCapping > this.autoLevelCapping &&\n          this.streamController\n        ) {\n\n          // if auto level capping has a higher value for the previous one, flush the buffer using nextLevelSwitch\n          // usually happen when the user go to the fullscreen mode.\n          this.streamController.nextLevelSwitch();\n        }\n        this.autoLevelCapping = hls.autoLevelCapping;\n      }\n    }\n  }\n\n  /*\n   * returns level should be the one with the dimensions equal or greater than the media (player) dimensions (so the video will be downscaled)\n   */\n  getMaxLevel(capLevelIndex: number): number {\n    const levels = this.hls.levels;\n    if (!levels.length) {\n      return -1;\n    }\n\n    const validLevels = levels.filter(\n      (level, index) =>\n        CapLevelController.isLevelAllowed(index, this.restrictedLevels) &&\n        index <= capLevelIndex\n    );\n\n\n\n    this.clientRect = null;\n    return CapLevelController.getMaxLevelByMediaSize(\n      validLevels,\n      this.mediaWidth,\n      this.mediaHeight\n    );\n  }\n\n  capp(){\n    this.autoLevelCapping = Number.POSITIVE_INFINITY;\n    this.hls.firstLevel = this.getMaxLevel(this.firstLevel);\n    \n    this.detectPlayerSize();\n  }\n\n  startCapping() {\n    if (this.timer) {\n      // Don't reset capping if started twice; this can happen if the manifest signals a video codec\n      return;\n    }\n    this.autoLevelCapping = Number.POSITIVE_INFINITY;\n    this.hls.firstLevel = this.getMaxLevel(this.firstLevel);\n    self.clearInterval(this.timer);\n    this.timer = self.setInterval(this.detectPlayerSize.bind(this), 10000);\n    this.detectPlayerSize();\n  }\n\n  stopCapping() {\n    this.restrictedLevels = [];\n    this.firstLevel = -1;\n    //this.autoLevelCapping = Number.POSITIVE_INFINITY;\n    \n    if (this.timer) {\n      self.clearInterval(this.timer);\n      this.timer = undefined;\n    }\n  }\n\n\n  getDimensions(): { width: number; height: number } {\n\n    if (this.paused && this.clientRectLast){\n        return this.clientRectLast\n    }\n\n    if (this.clientRect) {\n      return this.clientRect;\n    }\n    const media = this.media;\n    const boundsRect = {\n      width: 0,\n      height: 0,\n    };\n\n    if (media) {\n      const clientRect = media.getBoundingClientRect();\n      boundsRect.width = clientRect.width;\n      boundsRect.height = clientRect.height;\n      if (!boundsRect.width && !boundsRect.height) {\n        // When the media element has no width or height (equivalent to not being in the DOM),\n        // then use its width and height attributes (media.width, media.height)\n        boundsRect.width =\n          clientRect.right - clientRect.left || media.width || 0;\n        boundsRect.height =\n          clientRect.bottom - clientRect.top || media.height || 0;\n      }\n    }\n\n    this.clientRectLast = this.clientRect = boundsRect;\n    \n    return boundsRect;\n  }\n\n  get mediaWidth(): number {\n    return this.getDimensions().width * this.contentScaleFactor;\n  }\n\n  get mediaHeight(): number {\n    return this.getDimensions().height * this.contentScaleFactor;\n  }\n\n  get contentScaleFactor(): number {\n    let pixelRatio = 1;\n    try {\n      pixelRatio = self.devicePixelRatio;\n    } catch (e) {\n      /* no-op */\n    }\n\n    if (pixelRatio > 1.5) pixelRatio = 1.5\n\n    return pixelRatio;\n  }\n\n  static isLevelAllowed(\n    level: number,\n    restrictedLevels: Array<number> = []\n  ): boolean {\n    return restrictedLevels.indexOf(level) === -1;\n  }\n\n  static getMaxLevelByMediaSize(\n    levels: Array<any>,\n    width: number,\n    height: number\n  ): number {\n    if (!levels || !levels.length) {\n      return -1;\n    }\n\n    // Levels can have the same dimensions but differing bandwidths - since levels are ordered, we can look to the next\n    // to determine whether we've chosen the greatest bandwidth for the media's dimensions\n    const atGreatestBandiwdth = (curLevel : any, nextLevel : any) => {\n      if (!nextLevel) {\n        return true;\n      }\n\n      return (\n        curLevel.width !== nextLevel.width ||\n        curLevel.height !== nextLevel.height\n      );\n    };\n\n\n    // If we run through the loop without breaking, the media's dimensions are greater than every level, so default to\n    // the max level\n    let maxLevelIndex = levels.length - 1;\n\n    for (let i = 0; i < levels.length; i += 1) {\n      const level = levels[i];\n      if (\n        (level.width >= width || level.height >= height) &&\n        atGreatestBandiwdth(level, levels[i + 1])\n      ) {\n        maxLevelIndex = i;\n        break;\n      }\n    }\n\n    return maxLevelIndex;\n  }\n}\n\nexport default CapLevelController;\n","import EwmaBandWidthEstimator from 'hls.js/src/utils/ewma-bandwidth-estimator';\nimport { Events } from 'hls.js/src/events';\nimport { BufferHelper } from 'hls.js/src/utils/buffer-helper';\nimport { ErrorDetails } from 'hls.js/src/errors';\nimport { PlaylistLevelType } from 'hls.js/src/types/loader';\nimport { logger } from 'hls.js/src/utils/logger';\n\n\nimport type { Bufferable } from 'hls.js/src/utils/buffer-helper';\n//import type { LoaderStats } from 'hls.js/src/types/loader';\nimport type Hls from \"hls.js\";\nimport type {\n  FragLoadingData,\n  FragLoadedData,\n  FragBufferedData,\n  ErrorData,\n  LevelLoadedData,\n} from 'hls.js/src/types/events';\nimport type { ComponentAPI } from 'hls.js/src/types/component-api';\n\nclass AbrController implements ComponentAPI {\n  protected hls: Hls;\n  private lastLoadedFragLevel: number = 0;\n  private _nextAutoLevel: number = -1;\n  private timer?: number;\n  private onCheck: Function = this._abandonRulesCheck.bind(this);\n  private fragCurrent: any | null = null;\n  private partCurrent: any | null = null;\n  private bitrateTestDelay: number = 0;\n\n  public readonly bwEstimator: EwmaBandWidthEstimator;\n\n  constructor(hls: Hls) {\n    this.hls = hls;\n\n    const config = hls.config;\n    this.bwEstimator = new EwmaBandWidthEstimator(\n      config.abrEwmaSlowVoD,\n      config.abrEwmaFastVoD,\n      config.abrEwmaDefaultEstimate\n    );\n\n    this.registerListeners();\n  }\n\n  protected registerListeners() {\n    const { hls } = this;\n    hls.on(Events.FRAG_LOADING, this.onFragLoading as any, this);\n    hls.on(Events.FRAG_LOADED, this.onFragLoaded as any, this);\n    hls.on(Events.FRAG_BUFFERED, this.onFragBuffered as any, this);\n    hls.on(Events.LEVEL_LOADED, this.onLevelLoaded as any, this);\n    hls.on(Events.ERROR, this.onError as any, this);\n  }\n\n  protected unregisterListeners() {\n    const { hls } = this;\n    hls.off(Events.FRAG_LOADING, this.onFragLoading as any, this);\n    hls.off(Events.FRAG_LOADED, this.onFragLoaded as any, this);\n    hls.off(Events.FRAG_BUFFERED, this.onFragBuffered as any, this);\n    hls.off(Events.LEVEL_LOADED, this.onLevelLoaded as any, this);\n    hls.off(Events.ERROR, this.onError as any, this);\n  }\n\n  public destroy() {\n    this.unregisterListeners();\n    this.clearTimer();\n    // @ts-ignore\n    this.hls = this.onCheck = null;\n    this.fragCurrent = this.partCurrent = null;\n  }\n\n  protected onFragLoading(event: Events.FRAG_LOADING, data: FragLoadingData) {\n    const frag = data.frag;\n    if (frag.type === PlaylistLevelType.MAIN) {\n      if (!this.timer) {\n        this.fragCurrent = frag;\n        this.partCurrent = data.part ?? null;\n        this.timer = self.setInterval(this.onCheck, 100);\n      }\n    }\n  }\n\n  protected onLevelLoaded(event: Events.LEVEL_LOADED, data: LevelLoadedData) {\n    const config = this.hls.config;\n    if (data.details.live) {\n      this.bwEstimator.update(config.abrEwmaSlowLive, config.abrEwmaFastLive);\n    } else {\n      this.bwEstimator.update(config.abrEwmaSlowVoD, config.abrEwmaFastVoD);\n    }\n  }\n\n  /*\n      This method monitors the download rate of the current fragment, and will downswitch if that fragment will not load\n      quickly enough to prevent underbuffering\n    */\n  private _abandonRulesCheck() {\n    const { fragCurrent: frag, partCurrent: part, hls } = this;\n    const { autoLevelEnabled, config, media } = hls;\n    if (!frag || !media) {\n      return;\n    }\n\n    const stats: any = part ? part.stats : frag.stats;\n    const duration = part ? part.duration : frag.duration;\n    // If frag loading is aborted, complete, or from lowest level, stop timer and return\n    if (\n      stats.aborted ||\n      (stats.loaded && stats.loaded === stats.total) ||\n      frag.level === 0\n    ) {\n      this.clearTimer();\n      // reset forced auto level value so that next level will be selected\n      this._nextAutoLevel = -1;\n      return;\n    }\n\n    // This check only runs if we're in ABR mode and actually playing\n    if (\n      !autoLevelEnabled ||\n      media.paused ||\n      !media.playbackRate ||\n      !media.readyState\n    ) {\n      return;\n    }\n\n    const bufferInfo = hls.mainForwardBufferInfo;\n    if (bufferInfo === null) {\n      return;\n    }\n\n    const requestDelay = performance.now() - stats.loading.start;\n    const playbackRate = Math.abs(media.playbackRate);\n    // In order to work with a stable bandwidth, only begin monitoring bandwidth after half of the fragment has been loaded\n    if (requestDelay <= (500 * duration) / playbackRate) {\n      return;\n    }\n\n    const loadedFirstByte = stats.loaded && stats.loading.first;\n    const bwEstimate: number = this.bwEstimator.getEstimate();\n    const { levels, minAutoLevel } = hls;\n    const level = levels[frag.level];\n    const expectedLen =\n      stats.total ||\n      Math.max(stats.loaded, Math.round((duration * level.maxBitrate) / 8));\n    const loadRate = loadedFirstByte ? (stats.loaded * 1000) / requestDelay : 0;\n\n    // fragLoadDelay is an estimate of the time (in seconds) it will take to buffer the remainder of the fragment\n    const fragLoadedDelay = loadRate\n      ? (expectedLen - stats.loaded) / loadRate\n      : (expectedLen * 8) / bwEstimate;\n\n    // bufferStarvationDelay is an estimate of the amount time (in seconds) it will take to exhaust the buffer\n    const bufferStarvationDelay = bufferInfo.len / playbackRate;\n\n    // Only downswitch if the time to finish loading the current fragment is greater than the amount of buffer left\n    if (fragLoadedDelay <= bufferStarvationDelay) {\n      return;\n    }\n\n    let fragLevelNextLoadedDelay: number = Number.POSITIVE_INFINITY;\n    let nextLoadLevel: number;\n    // Iterate through lower level and try to find the largest one that avoids rebuffering\n    for (\n      nextLoadLevel = frag.level - 1;\n      nextLoadLevel > minAutoLevel;\n      nextLoadLevel--\n    ) {\n      // compute time to load next fragment at lower level\n      // 0.8 : consider only 80% of current bw to be conservative\n      // 8 = bits per byte (bps/Bps)\n      const levelNextBitrate = levels[nextLoadLevel].maxBitrate;\n      fragLevelNextLoadedDelay = loadRate\n        ? (duration * levelNextBitrate) / (8 * 0.8 * loadRate)\n        : (duration * levelNextBitrate) / bwEstimate;\n\n      if (fragLevelNextLoadedDelay < bufferStarvationDelay) {\n        break;\n      }\n    }\n    // Only emergency switch down if it takes less time to load a new fragment at lowest level instead of continuing\n    // to load the current one\n    if (fragLevelNextLoadedDelay >= fragLoadedDelay) {\n      return;\n    }\n    logger.warn(`Fragment ${frag.sn}${\n      part ? ' part ' + part.index : ''\n    } of level ${\n      frag.level\n    } is loading too slowly and will cause an underbuffer; aborting and switching to level ${nextLoadLevel}\n      Current BW estimate: ${\n        Number.isFinite(bwEstimate) ? (bwEstimate / 1024).toFixed(3) : 'Unknown'\n      } Kb/s\n      Estimated load time for current fragment: ${fragLoadedDelay.toFixed(3)} s\n      Estimated load time for the next fragment: ${fragLevelNextLoadedDelay.toFixed(\n        3\n      )} s\n      Time to underbuffer: ${bufferStarvationDelay.toFixed(3)} s`);\n    hls.nextLoadLevel = nextLoadLevel;\n    if (loadedFirstByte) {\n      // If there has been loading progress, sample bandwidth\n      this.bwEstimator.sample(requestDelay, stats.loaded);\n    }\n    this.clearTimer();\n    if (frag.loader) {\n      this.fragCurrent = this.partCurrent = null;\n      frag.loader.abort();\n    }\n    hls.trigger(Events.FRAG_LOAD_EMERGENCY_ABORTED, { frag, part, stats });\n  }\n\n  protected onFragLoaded(\n    event: Events.FRAG_LOADED,\n    { frag, part }: FragLoadedData\n  ) {\n    if (\n      frag.type === PlaylistLevelType.MAIN &&\n      Number.isFinite(frag.sn as number)\n    ) {\n      const stats = part ? part.stats : frag.stats;\n      const duration = part ? part.duration : frag.duration;\n      // stop monitoring bw once frag loaded\n      this.clearTimer();\n      // store level id after successful fragment load\n      this.lastLoadedFragLevel = frag.level;\n      // reset forced auto level value so that next level will be selected\n      this._nextAutoLevel = -1;\n\n      // compute level average bitrate\n      if (this.hls.config.abrMaxWithRealBitrate) {\n        const level = this.hls.levels[frag.level];\n        const loadedBytes =\n          (level.loaded ? level.loaded.bytes : 0) + stats.loaded;\n        const loadedDuration =\n          (level.loaded ? level.loaded.duration : 0) + duration;\n        level.loaded = { bytes: loadedBytes, duration: loadedDuration };\n        level.realBitrate = Math.round((8 * loadedBytes) / loadedDuration);\n      }\n      if (frag.bitrateTest) {\n        const fragBufferedData: FragBufferedData = {\n          stats,\n          frag,\n          part,\n          id: frag.type,\n        };\n        this.onFragBuffered(Events.FRAG_BUFFERED, fragBufferedData);\n      }\n    }\n  }\n\n  protected onFragBuffered(\n    event: Events.FRAG_BUFFERED,\n    data: any //FragBufferedData\n  ) {\n    const { frag, part } = data;\n    const stats = part ? part.stats : frag.stats;\n\n    if (stats.aborted) {\n      return;\n    }\n    // Only count non-alt-audio frags which were actually buffered in our BW calculations\n    if (frag.type !== PlaylistLevelType.MAIN || frag.sn === 'initSegment') {\n      return;\n    }\n    // Use the difference between parsing and request instead of buffering and request to compute fragLoadingProcessing;\n    // rationale is that buffer appending only happens once media is attached. This can happen when config.startFragPrefetch\n    // is used. If we used buffering in that case, our BW estimate sample will be very large.\n    const processingMs = stats.parsing.end - stats.loading.start;\n\n    if(stats.bwEstimateSample)\n      this.bwEstimator.sample(processingMs, stats.loaded);\n\n    stats.bwEstimate = this.bwEstimator.getEstimate();\n    \n    if (frag.bitrateTest) {\n      this.bitrateTestDelay = processingMs / 1000;\n    } else {\n      this.bitrateTestDelay = 0;\n    }\n  }\n\n  protected onError(event: Events.ERROR, data: ErrorData) {\n    // stop timer in case of frag loading error\n    switch (data.details) {\n      case ErrorDetails.FRAG_LOAD_ERROR:\n      case ErrorDetails.FRAG_LOAD_TIMEOUT:\n        this.clearTimer();\n        break;\n      default:\n        break;\n    }\n  }\n\n  clearTimer() {\n    self.clearInterval(this.timer);\n    this.timer = undefined;\n  }\n\n  // return next auto level\n  get nextAutoLevel() {\n\n    const forcedAutoLevel = this._nextAutoLevel;\n    const bwEstimator = this.bwEstimator;\n    // in case next auto level has been forced, and bw not available or not reliable, return forced value\n    if (forcedAutoLevel !== -1 && !bwEstimator.canEstimate()) {\n      return forcedAutoLevel;\n    }\n\n    // compute next level using ABR logic\n    let nextABRAutoLevel = this.getNextABRAutoLevel();\n\n\n    // use forced auto level when ABR selected level has errored\n    if (forcedAutoLevel !== -1 && this.hls.levels[nextABRAutoLevel].loadError) {\n      return forcedAutoLevel;\n    }\n    // if forced auto level has been defined, use it to cap ABR computed quality level\n    if (forcedAutoLevel !== -1) {\n      nextABRAutoLevel = Math.min(forcedAutoLevel, nextABRAutoLevel);\n    }\n\n    return nextABRAutoLevel;\n  }\n\n  private getNextABRAutoLevel() {\n    const { fragCurrent, partCurrent, hls } = this;\n    const { maxAutoLevel, config, minAutoLevel, media } = hls;\n    const currentFragDuration = partCurrent\n      ? partCurrent.duration\n      : fragCurrent\n      ? fragCurrent.duration\n      : 0;\n    const pos = media ? media.currentTime : 0;\n\n    // playbackRate is the absolute value of the playback rate; if media.playbackRate is 0, we use 1 to load as\n    // if we're playing back at the normal rate.\n    const playbackRate =\n      media && media.playbackRate !== 0 ? Math.abs(media.playbackRate) : 1.0;\n    const avgbw = this.bwEstimator\n      ? this.bwEstimator.getEstimate()\n      : config.abrEwmaDefaultEstimate;\n    // bufferStarvationDelay is the wall-clock time left until the playback buffer is exhausted.\n    const bufferInfo = hls.mainForwardBufferInfo;\n    const bufferStarvationDelay =\n      (bufferInfo ? bufferInfo.len : 0) / playbackRate;\n\n    // First, look to see if we can find a level matching with our avg bandwidth AND that could also guarantee no rebuffering at all\n    let bestLevel = this.findBestLevel(\n      avgbw,\n      minAutoLevel,\n      maxAutoLevel,\n      bufferStarvationDelay,\n      config.abrBandWidthFactor,\n      config.abrBandWidthUpFactor\n    );\n    if (bestLevel >= 0) {\n      return bestLevel;\n    }\n    logger.trace(\n      `${\n        bufferStarvationDelay ? 'rebuffering expected' : 'buffer is empty'\n      }, finding optimal quality level`\n    );\n    // not possible to get rid of rebuffering ... let's try to find level that will guarantee less than maxStarvationDelay of rebuffering\n    // if no matching level found, logic will return 0\n    let maxStarvationDelay = currentFragDuration\n      ? Math.min(currentFragDuration, config.maxStarvationDelay)\n      : config.maxStarvationDelay;\n    let bwFactor = config.abrBandWidthFactor;\n    let bwUpFactor = config.abrBandWidthUpFactor;\n\n    if (!bufferStarvationDelay) {\n      // in case buffer is empty, let's check if previous fragment was loaded to perform a bitrate test\n      const bitrateTestDelay = this.bitrateTestDelay;\n      if (bitrateTestDelay) {\n        // if it is the case, then we need to adjust our max starvation delay using maxLoadingDelay config value\n        // max video loading delay used in  automatic start level selection :\n        // in that mode ABR controller will ensure that video loading time (ie the time to fetch the first fragment at lowest quality level +\n        // the time to fetch the fragment at the appropriate quality level is less than ```maxLoadingDelay``` )\n        // cap maxLoadingDelay and ensure it is not bigger 'than bitrate test' frag duration\n        const maxLoadingDelay = currentFragDuration\n          ? Math.min(currentFragDuration, config.maxLoadingDelay)\n          : config.maxLoadingDelay;\n        maxStarvationDelay = maxLoadingDelay - bitrateTestDelay;\n        logger.trace(\n          `bitrate test took ${Math.round(\n            1000 * bitrateTestDelay\n          )}ms, set first fragment max fetchDuration to ${Math.round(\n            1000 * maxStarvationDelay\n          )} ms`\n        );\n        // don't use conservative factor on bitrate test\n        bwFactor = bwUpFactor = 1;\n      }\n    }\n    bestLevel = this.findBestLevel(\n      avgbw,\n      minAutoLevel,\n      maxAutoLevel,\n      bufferStarvationDelay + maxStarvationDelay,\n      bwFactor,\n      bwUpFactor\n    );\n    return Math.max(bestLevel, 0);\n  }\n\n  private findBestLevel(\n    currentBw: number,\n    minAutoLevel: number,\n    maxAutoLevel: number,\n    maxFetchDuration: number,\n    bwFactor: number,\n    bwUpFactor: number\n  ): number {\n    const {\n      fragCurrent,\n      partCurrent,\n      lastLoadedFragLevel: currentLevel,\n    } = this;\n    const { levels } = this.hls;\n    const level = levels[currentLevel];\n    const live = !!level?.details?.live;\n    const currentCodecSet = level?.codecSet;\n\n    const currentFragDuration = partCurrent\n      ? partCurrent.duration\n      : fragCurrent\n      ? fragCurrent.duration\n      : 0;\n    for (let i = maxAutoLevel; i >= minAutoLevel; i--) {\n      const levelInfo = levels[i];\n\n      if (\n        !levelInfo ||\n        (currentCodecSet && levelInfo.codecSet !== currentCodecSet)\n      ) {\n        continue;\n      }\n\n      const levelDetails = levelInfo.details;\n      const avgDuration =\n        (partCurrent\n          ? levelDetails?.partTarget\n          : levelDetails?.averagetargetduration) || currentFragDuration;\n\n      let adjustedbw: number;\n      // follow algorithm captured from stagefright :\n      // https://android.googlesource.com/platform/frameworks/av/+/master/media/libstagefright/httplive/LiveSession.cpp\n      // Pick the highest bandwidth stream below or equal to estimated bandwidth.\n      // consider only 80% of the available bandwidth, but if we are switching up,\n      // be even more conservative (70%) to avoid overestimating and immediately\n      // switching back.\n      if (i <= currentLevel) {\n        adjustedbw = bwFactor * currentBw;\n      } else {\n        adjustedbw = bwUpFactor * currentBw;\n      }\n\n      const bitrate: number = levels[i].maxBitrate;\n      const fetchDuration: number = (bitrate * avgDuration) / adjustedbw;\n\n      logger.trace(\n        `level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: ${i}/${Math.round(\n          adjustedbw\n        )}/${bitrate}/${avgDuration}/${maxFetchDuration}/${fetchDuration}`\n      );\n\n\n\n      // if adjusted bw is greater than level bitrate AND\n      if (\n        adjustedbw > bitrate &&\n        // fragment fetchDuration unknown OR live stream OR fragment fetchDuration less than max allowed fetch duration, then this level matches\n        // we don't account for max Fetch Duration for live streams, this is to avoid switching down when near the edge of live sliding window ...\n        // special case to support startLevel = -1 (bitrateTest) on live streams : in that case we should not exit loop so that findBestLevel will return -1\n        (fetchDuration === 0 ||\n          !Number.isFinite(fetchDuration) ||\n          (live && !this.bitrateTestDelay) ||\n          fetchDuration < maxFetchDuration)\n      ) {\n\n        // as we are looping from highest to lowest, this will return the best achievable quality level\n        return i;\n      }\n    }\n    // not enough time budget even with quality level 0 ... rebuffering might happen\n    return -1;\n  }\n\n  set nextAutoLevel(nextLevel) {\n    this._nextAutoLevel = nextLevel;\n  }\n}\n\nexport default AbrController;\n","// Thanks https://github.com/streamroot/videojs-hlsjs-plugin\n// We duplicated this plugin to choose the hls.js version we want, because streamroot only provide a bundled file\n\nimport Hlsjs, { ErrorData, HlsConfig, Level, LevelSwitchingData, ManifestParsedData } from 'hls.js'\nimport videojs from 'video.js'\nimport { logger, Logger } from '@root-helpers/logger'\nimport { HlsjsConfigHandlerOptions, PeerTubeResolution, VideoJSTechHLS } from '../../types'\nimport CapLevelController from './cap-level-controller'\nimport AbrController from './abr-controler'\n\ntype ErrorCounts = {\n  [ type: string ]: number\n}\n\ntype Metadata = {\n  levels: Level[]\n}\n\ntype HookFn = (player: videojs.Player, hljs: Hlsjs) => void\n\nconst VIDEO_HLS_ERROR = 'HLS Error'\n\nconst registerSourceHandler = function (vjs: typeof videojs) {\n  if (!Hlsjs.isSupported()) {\n    logger.warn('Hls.js is not supported in this browser!')\n    return\n  }\n\n  const html5 = vjs.getTech('Html5')\n\n  if (!html5) {\n    logger.error('No Hml5 tech found in videojs')\n    return\n  }\n\n  // FIXME: typings\n  (html5 as any).registerSourceHandler({\n    canHandleSource: function (source: videojs.Tech.SourceObject) {\n      const hlsTypeRE = /^application\\/x-mpegURL|application\\/vnd\\.apple\\.mpegurl$/i\n      const hlsExtRE = /\\.m3u8/i\n\n      if (hlsTypeRE.test(source.type)) return 'probably'\n      if (hlsExtRE.test(source.src)) return 'maybe'\n\n      return ''\n    },\n\n    handleSource: function (source: videojs.Tech.SourceObject, tech: VideoJSTechHLS) {\n      if (tech.hlsProvider) {\n        tech.hlsProvider.dispose()\n      }\n\n      tech.hlsProvider = new Html5Hlsjs(vjs, source, tech)\n\n      return tech.hlsProvider\n    }\n  }, 0);\n\n  // FIXME: typings\n  (vjs as any).Html5Hlsjs = Html5Hlsjs\n}\n\nfunction hlsjsConfigHandler (this: videojs.Player, options: HlsjsConfigHandlerOptions) {\n  const player = this\n\n  if (!options) return\n\n  if (!player.srOptions_) {\n    player.srOptions_ = {}\n  }\n\n  if (!player.srOptions_.hlsjsConfig) {\n    player.srOptions_.hlsjsConfig = options.hlsjsConfig\n  }\n\n\n\n  if (options.levelLabelHandler && !player.srOptions_.levelLabelHandler) {\n    player.srOptions_.levelLabelHandler = options.levelLabelHandler\n  }\n}\n\nconst registerConfigPlugin = function (vjs: typeof videojs) {\n  // Used in Brightcove since we don't pass options directly there\n  const registerVjsPlugin = vjs.registerPlugin || vjs.plugin\n  registerVjsPlugin('hlsjs', hlsjsConfigHandler)\n}\n\nclass Html5Hlsjs {\n  private static readonly hooks: { [id: string]: HookFn[] } = {}\n\n  private readonly videoElement: HTMLVideoElement\n  private readonly errorCounts: ErrorCounts = {}\n  private readonly player: videojs.Player\n  private readonly tech: videojs.Tech\n  private readonly source: videojs.Tech.SourceObject\n  private readonly vjs: typeof videojs\n\n  private maxNetworkErrorRecovery = 10\n\n  private hls: Hlsjs\n  private hlsjsConfig: Partial<HlsConfig & { cueHandler: any }> = null\n\n  private videoLogger: Logger\n\n  private _duration: number = null\n  private metadata: Metadata = null\n  private isLive: boolean = null\n  private dvrDuration: number = null\n  private edgeMargin: number = null\n\n  private handlers: { [ id in 'play' ]: EventListener } = {\n    play: null\n  }\n\n  constructor (vjs: typeof videojs, source: videojs.Tech.SourceObject, tech: videojs.Tech) {\n    this.vjs = vjs\n    this.source = source\n\n    this.tech = tech;\n    (this.tech as any).name_ = 'Hlsjs'\n\n    this.videoElement = tech.el() as HTMLVideoElement\n    this.player = vjs((tech.options_ as any).playerId)\n\n    this.videoLogger = new Logger(true)\n\n    this.videoElement.addEventListener('error', event => {\n      let errorTxt: string\n      const mediaError = ((event.currentTarget || event.target) as HTMLVideoElement).error\n\n      if (!mediaError) return\n\n      logger.info(mediaError)\n      switch (mediaError.code) {\n        case mediaError.MEDIA_ERR_ABORTED:\n          errorTxt = 'You aborted the video playback'\n          break\n        case mediaError.MEDIA_ERR_DECODE:\n          errorTxt = 'The video playback was aborted due to a corruption problem or because the video used features ' +\n                     'your browser did not support'\n          this._handleMediaError(mediaError)\n          break\n        case mediaError.MEDIA_ERR_NETWORK:\n          errorTxt = 'A network error caused the video download to fail part-way'\n          break\n        case mediaError.MEDIA_ERR_SRC_NOT_SUPPORTED:\n          errorTxt = 'The video could not be loaded, either because the server or network failed or because the format is not supported'\n          break\n\n        default:\n          errorTxt = mediaError.message\n      }\n\n      logger.error(`MEDIA_ERROR: ${errorTxt}`)\n    })\n\n    this.initialize()\n  }\n\n  duration () {\n    if (this._duration === Infinity) return Infinity\n    if (!isNaN(this.videoElement.duration)) return this.videoElement.duration\n\n    return this._duration || 0\n  }\n\n  seekable () {\n    if (this.hls.media) {\n      if (!this.isLive) {\n        return this.vjs.createTimeRanges(0, this.hls.media.duration)\n      }\n\n      // Video.js doesn't seem to like floating point timeranges\n      const startTime = Math.round(this.hls.media.duration - this.dvrDuration)\n      const endTime = Math.round(this.hls.media.duration - this.edgeMargin)\n\n      return this.vjs.createTimeRanges(startTime, endTime)\n    }\n\n    return this.vjs.createTimeRanges()\n  }\n\n  // See comment for `initialize` method.\n  dispose () {\n    this.videoElement.removeEventListener('play', this.handlers.play)\n\n    // FIXME: https://github.com/video-dev/hls.js/issues/4092\n    const untypedHLS = this.hls as any\n\n    untypedHLS.log = untypedHLS.warn = () => {\n      // empty\n    }\n\n\n    this.videoLogger.destroyLogs()\n\n    this.hls.destroy()\n  }\n\n  static addHook (type: string, callback: HookFn) {\n    Html5Hlsjs.hooks[type] = this.hooks[type] || []\n    Html5Hlsjs.hooks[type].push(callback)\n  }\n\n  static removeHook (type: string, callback: HookFn) {\n    if (Html5Hlsjs.hooks[type] === undefined) return false\n\n    const index = Html5Hlsjs.hooks[type].indexOf(callback)\n    if (index === -1) return false\n\n    Html5Hlsjs.hooks[type].splice(index, 1)\n\n    return true\n  }\n\n  private _executeHooksFor (type: string) {\n    if (Html5Hlsjs.hooks[type] === undefined) {\n      return\n    }\n\n    // ES3 and IE < 9\n    for (let i = 0; i < Html5Hlsjs.hooks[type].length; i++) {\n      Html5Hlsjs.hooks[type][i](this.player, this.hls)\n    }\n  }\n\n  private _handleMediaError (error: any) {\n\n    if(error.code == 3){\n\n      var time = this.player.currentTime() + 2\n\n      this.dispose()\n      this._initHlsjs()\n\n      this.player.currentTime(time)\n      this.player.play()\n      this.hls.once(Hlsjs.Events.FRAG_LOADED, () => {\n        this.player.play()\n      })\n\n\n      return\n    }\n\n    if (this.errorCounts[Hlsjs.ErrorTypes.MEDIA_ERROR] === 1) {\n      logger.info('trying to recover media error')\n      this.hls.recoverMediaError()\n      return\n    }\n\n    if (this.errorCounts[Hlsjs.ErrorTypes.MEDIA_ERROR] === 2) {\n      logger.info('2nd try to recover media error (by swapping audio codec')\n      this.hls.swapAudioCodec()\n      this.hls.recoverMediaError()\n      return\n    }\n\n    if (this.errorCounts[Hlsjs.ErrorTypes.MEDIA_ERROR] > 2) {\n      logger.info('bubbling media error up to VIDEOJS')\n      this.hls.destroy()\n      this.tech.error = () => error\n      this.tech.trigger('error')\n    }\n  }\n\n  private _handleNetworkError (error: any) {\n\n    if (navigator.onLine === false) return\n\n    if (this.errorCounts[Hlsjs.ErrorTypes.NETWORK_ERROR] <= this.maxNetworkErrorRecovery) {\n      logger.info('trying to recover network error')\n\n      // Wait 1 second and retry\n      setTimeout(() => this.hls.startLoad(), 1000)\n\n      // Reset error count on success\n      this.hls.once(Hlsjs.Events.FRAG_LOADED, () => {\n        this.errorCounts[Hlsjs.ErrorTypes.NETWORK_ERROR] = 0\n      })\n\n      return\n    }\n\n    logger.info('bubbling network error up to VIDEOJS')\n    this.hls.destroy()\n    this.tech.error = () => error\n    this.tech.trigger('error')\n  }\n\n  private _onError (_event: any, data: ErrorData) {\n    const error: { message: string, code?: number } = {\n      message: `HLS.js error: ${data.type} - fatal: ${data.fatal} - ${data.details}`\n    }\n\n    this.videoLogger.log(error.message, {\n      id: VIDEO_HLS_ERROR\n    })\n\n    // increment/set error count\n    if (this.errorCounts[data.type]) this.errorCounts[data.type] += 1\n    else this.errorCounts[data.type] = 1\n\n    if(!data.fatal) logger.warn(error.message)\n    else logger.error(error.message, { data })\n\n    if (data.type === Hlsjs.ErrorTypes.NETWORK_ERROR) {\n      error.code = 2\n      this._handleNetworkError(error)\n    } else if (data.fatal && data.type === Hlsjs.ErrorTypes.MEDIA_ERROR && data.details !== 'manifestIncompatibleCodecsError') {\n      error.code = 3\n      this._handleMediaError(error)\n    } else if (data.fatal) {\n      this.hls.destroy()\n      logger.info('bubbling error up to VIDEOJS')\n      this.tech.error = () => error as any\n      this.tech.trigger('error')\n    }\n  }\n\n  private buildLevelLabel (level: Level) {\n    if (this.player.srOptions_.levelLabelHandler) {\n      return this.player.srOptions_.levelLabelHandler(level as any)\n    }\n\n    if (level.height) return level.height + 'p'\n    if (level.width) return Math.round(level.width * 9 / 16) + 'p'\n    if (level.bitrate) return (level.bitrate / 1000) + 'kbps'\n\n    return '0'\n  }\n\n  private _notifyVideoQualities () {\n    if (!this.metadata) return\n\n    const resolutions: PeerTubeResolution[] = []\n\n    this.metadata.levels.forEach((level, index) => {\n      resolutions.push({\n        id: index,\n        height: level.height,\n        width: level.width,\n        bitrate: level.bitrate,\n        label: this.buildLevelLabel(level),\n        selected: level.id === this.hls.manualLevel,\n\n        selectCallback: () => {\n          this.hls.currentLevel = index\n        }\n      })\n    })\n\n    resolutions.push({\n      id: -1,\n      label: this.player.localize('Auto'),\n      selected: true,\n      selectCallback: () => this.hls.currentLevel = -1\n    })\n\n    this.player.peertubeResolutions().add(resolutions)\n  }\n\n  private _startLoad () {\n    this.hls.startLoad(-1)\n    this.videoElement.removeEventListener('play', this.handlers.play)\n  }\n\n  private _oneLevelObjClone (obj: { [ id: string ]: any }) {\n    const result = {}\n    const objKeys = Object.keys(obj)\n    for (let i = 0; i < objKeys.length; i++) {\n      result[objKeys[i]] = obj[objKeys[i]]\n    }\n\n    return result\n  }\n\n  public sendLogsCache (videoId: String, serverUrl: String) {\n    this.videoLogger.returnLog(videoId, serverUrl)\n  }\n\n  private _onMetaData (_event: any, data: ManifestParsedData) {\n    // This could arrive before 'loadedqualitydata' handlers is registered, remember it so we can raise it later\n    this.metadata = data\n    this._notifyVideoQualities()\n  }\n\n  private _initHlsjs () {\n    const techOptions = this.tech.options_ as HlsjsConfigHandlerOptions\n    const srOptions_ = this.player.srOptions_\n\n    const hlsjsConfigRef = srOptions_?.hlsjsConfig || techOptions.hlsjsConfig\n    // Hls.js will write to the reference thus change the object for later streams\n    this.hlsjsConfig = hlsjsConfigRef ? this._oneLevelObjClone(hlsjsConfigRef) : {}\n\n    if ([ '', 'auto' ].includes(this.videoElement.preload) && !this.videoElement.autoplay && this.hlsjsConfig.autoStartLoad === undefined) {\n      this.hlsjsConfig.autoStartLoad = false\n    }\n\n    // If the user explicitly sets autoStartLoad to false, we're not going to enter the if block above\n    // That's why we have a separate if block here to set the 'play' listener\n    if (this.hlsjsConfig.autoStartLoad === false) {\n      this.handlers.play = this._startLoad.bind(this)\n      this.videoElement.addEventListener('play', this.handlers.play)\n    }\n\n\n    //@ts-ignore\n    this.hlsjsConfig.capLevelController = CapLevelController\n    this.hlsjsConfig.abrController = AbrController as any\n    this.hlsjsConfig.abrBandWidthUpFactor = 0.3\n\n    //if(!data.details.live && data.details.totalduration      )\n\n    this.hlsjsConfig.debug = this.videoLogger\n\n    this.hls = new Hlsjs(this.hlsjsConfig)\n\n\n\n    //@ts-ignore\n    this.player.hls = this.hls;\n    //(this.player as any).hls = this.hls;\n\n    //this._executeHooksFor('beforeinitialize')\n\n    this.hls.on(Hlsjs.Events.ERROR, (event, data) => this._onError(event, data))\n    this.hls.on(Hlsjs.Events.MANIFEST_PARSED, (event, data) => this._onMetaData(event, data))\n    this.hls.on(Hlsjs.Events.LEVEL_LOADED, (event, data) => {\n      // The DVR plugin will auto seek to \"live edge\" on start up\n      if (this.hlsjsConfig.liveSyncDuration) {\n        this.edgeMargin = this.hlsjsConfig.liveSyncDuration\n      } else if (this.hlsjsConfig.liveSyncDurationCount) {\n        this.edgeMargin = this.hlsjsConfig.liveSyncDurationCount * data.details.targetduration\n      }\n\n      this.isLive = data.details.live\n      this.dvrDuration = data.details.totalduration\n\n      this._duration = this.isLive ? Infinity : data.details.totalduration\n\n      this.player.duration(Math.round(this._duration))\n\n      //if(this._duration < 60){\n        //this.player.peertubeResolutions().disableAutoResolution()\n      //}\n\n      // Increase network error recovery for lives since they can be broken (server restart, stream interruption etc)\n      if (this.isLive) this.maxNetworkErrorRecovery = 300\n    })\n\n    this.hls.once(Hlsjs.Events.FRAG_LOADED, () => {\n      // Emit custom 'loadedmetadata' event for parity with `videojs-contrib-hls`\n      // Ref: https://github.com/videojs/videojs-contrib-hls#loadedmetadata\n      this.tech.trigger('loadedmetadata')\n    })\n\n    this.hls.on(Hlsjs.Events.LEVEL_SWITCHING, (_e, data: LevelSwitchingData) => {\n\n      const resolutionId = this.hls.autoLevelEnabled\n        ? -1\n        : data.level\n\n      const autoResolutionChosenId = this.hls.autoLevelEnabled\n        ? data.level\n        : -1\n\n      this.player.peertubeResolutions().select({ id: resolutionId, autoResolutionChosenId, byEngine: true })\n    })\n\n    this.hls.attachMedia(this.videoElement)\n\n    this.hls.loadSource(this.source.src)\n  }\n\n  private initialize () {\n    this._initHlsjs()\n  }\n}\n\nexport {\n  Html5Hlsjs,\n  registerSourceHandler,\n  registerConfigPlugin\n}\n","import Hlsjs from 'hls.js'\nimport videojs from 'video.js'\nimport { Events, Segment } from 'p2p-media-loader-core-basyton'\nimport { Engine, initHlsJsPlayer, initVideoJsContribHlsJsPlayer } from 'p2p-media-loader-hlsjs-basyton'\nimport { timeToInt } from '@shared/core-utils'\nimport { P2PMediaLoaderPluginOptions, PlayerNetworkInfo } from '../../types'\nimport { registerConfigPlugin, registerSourceHandler } from './hls-plugin'\nimport { logger } from '@root-helpers/logger'\n\nregisterConfigPlugin(videojs)\nregisterSourceHandler(videojs)\n\nconst Plugin = videojs.getPlugin('plugin')\nclass P2pMediaLoaderPlugin extends Plugin {\n\n  private readonly CONSTANTS = {\n    INFO_SCHEDULER: 1000 // Don't change this\n  }\n  private readonly options: P2PMediaLoaderPluginOptions\n\n  private hlsjs: Hlsjs\n  private p2pEngine: Engine\n  private statsP2PBytes = {\n    pendingDownload: [] as number[],\n    pendingUpload: [] as number[],\n    numPeers: 0,\n    totalDownload: 0,\n    totalUpload: 0\n  }\n  private statsHTTPBytes = {\n    pendingDownload: [] as number[],\n    pendingUpload: [] as number[],\n    totalDownload: 0,\n    totalUpload: 0\n  }\n  private startTime: number\n\n  private networkInfoInterval: any\n\n  constructor (player: videojs.Player, options?: P2PMediaLoaderPluginOptions | any) {\n    super(player)\n\n    this.options = options\n\n    if(!this.options) return\n\n\n    // FIXME: typings https://github.com/Microsoft/TypeScript/issues/14080\n    if (!(videojs as any).Html5Hlsjs) {\n      logger.warn('HLS.js does not seem to be supported. Try to fallback to built in HLS.')\n\n      if (!player.canPlayType('application/vnd.apple.mpegurl')) {\n        const message = 'Cannot fallback to built-in HLS'\n        logger.warn(message)\n\n        player.ready(() => player.trigger('error', new Error(message)))\n        return\n      }\n    } else {\n     \n\n      initVideoJsContribHlsJsPlayer(player)\n    }\n\n    this.startTime = timeToInt(this.options.startTime)\n\n    player.src({\n      type: this.options.type,\n      src: this.options.src\n    })\n\n    player.ready(() => {\n      this.initializeCore()\n\n\n      this.hlsjs = (player as any).hls\n\n      if ((videojs as any).Html5Hlsjs) {\n        this.initializePlugin()\n      }\n    })\n  }\n\n  dispose () {\n\n    if (this.hlsjs) this.hlsjs.destroy()\n    if (this.p2pEngine) this.p2pEngine.destroy()\n\n    clearInterval(this.networkInfoInterval)\n  }\n\n  getCurrentLevel () {\n    return this.hlsjs.levels[this.hlsjs.currentLevel]\n  }\n\n  getLiveLatency () {\n    return Math.round(this.hlsjs.latency)\n  }\n\n  getHLSJS () {\n    return this.hlsjs\n  }\n\n  private initializeCore () {\n    this.player.one('play', () => {\n      this.player.addClass('vjs-has-big-play-button-clicked')\n    })\n\n    this.player.one('canplay', () => {\n      if (this.startTime) {\n        this.player.currentTime(this.startTime)\n      }\n    })\n  }\n\n  private initializePlugin () {\n    initHlsJsPlayer(this.hlsjs)\n\n    this.p2pEngine = this.options.loader.getEngine()\n\n    this.p2pEngine.on(Events.SegmentError, (segment: Segment, err) => {\n      logger.error(`Segment ${segment.id} error.`, err)\n\n      if(segment.requestUrl)\n        this.options.redundancyUrlManager.removeBySegmentUrl(segment.requestUrl)\n    })\n\n    this.statsP2PBytes.numPeers = 1 + this.options.redundancyUrlManager.countBaseUrls()\n\n    this.runStats()\n  }\n\n  private runStats () {\n    this.p2pEngine.on(Events.PieceBytesDownloaded, (method: string, _segment, bytes: number) => {\n      const elem = method === 'p2p' ? this.statsP2PBytes : this.statsHTTPBytes\n\n      elem.pendingDownload.push(bytes)\n      elem.totalDownload += bytes\n    })\n\n    this.p2pEngine.on(Events.PieceBytesUploaded, (method: string, _segment, bytes: number) => {\n      const elem = method === 'p2p' ? this.statsP2PBytes : this.statsHTTPBytes\n\n      elem.pendingUpload.push(bytes)\n      elem.totalUpload += bytes\n    })\n\n    this.p2pEngine.on(Events.PeerConnect, () => this.statsP2PBytes.numPeers++)\n    this.p2pEngine.on(Events.PeerClose, () => this.statsP2PBytes.numPeers--)\n\n    this.networkInfoInterval = setInterval(() => {\n      const p2pDownloadSpeed = this.arraySum(this.statsP2PBytes.pendingDownload)\n      const p2pUploadSpeed = this.arraySum(this.statsP2PBytes.pendingUpload)\n\n      const httpDownloadSpeed = this.arraySum(this.statsHTTPBytes.pendingDownload)\n      const httpUploadSpeed = this.arraySum(this.statsHTTPBytes.pendingUpload)\n\n      this.statsP2PBytes.pendingDownload = []\n      this.statsP2PBytes.pendingUpload = []\n      this.statsHTTPBytes.pendingDownload = []\n      this.statsHTTPBytes.pendingUpload = []\n\n      return this.player.trigger('p2pInfo', {\n        source: 'p2p-media-loader',\n        http: {\n          downloadSpeed: httpDownloadSpeed,\n          uploadSpeed: httpUploadSpeed,\n          downloaded: this.statsHTTPBytes.totalDownload,\n          uploaded: this.statsHTTPBytes.totalUpload\n        },\n        p2p: {\n          downloadSpeed: p2pDownloadSpeed,\n          uploadSpeed: p2pUploadSpeed,\n          numPeers: this.statsP2PBytes.numPeers,\n          downloaded: this.statsP2PBytes.totalDownload,\n          uploaded: this.statsP2PBytes.totalUpload\n        },\n        bandwidthEstimate: (this.hlsjs as any).bandwidthEstimate / 8\n      } as PlayerNetworkInfo)\n    }, this.CONSTANTS.INFO_SCHEDULER)\n  }\n\n  private arraySum (data: number[]) {\n    return data.reduce((a: number, b: number) => a + b, 0)\n  }\n}\n\nvideojs.registerPlugin('p2pMediaLoader', P2pMediaLoaderPlugin)\nexport { P2pMediaLoaderPlugin }\n","import '@peertube/videojs-contextmenu'\nimport './shared/upnext/end-card'\nimport './shared/upnext/upnext-plugin'\nimport './shared/stats/stats-card'\nimport './shared/stats/stats-plugin'\nimport './shared/bezels/bezels-plugin'\nimport './shared/peertube/peertube-plugin'\nimport './shared/resolutions/peertube-resolutions-plugin'\nimport './shared/control-bar/next-previous-video-button'\nimport './shared/control-bar/p2p-info-button'\n//import './shared/control-bar/peertube-link-button'\nimport './shared/control-bar/picture-in-picture-bastyon'\nimport './shared/control-bar/peertube-load-progress-bar'\nimport './shared/control-bar/theater-button'\nimport './shared/settings/resolution-menu-button'\nimport './shared/settings/resolution-menu-item'\nimport './shared/settings/settings-dialog'\nimport './shared/settings/settings-menu-button'\nimport './shared/settings/settings-menu-item'\nimport './shared/settings/settings-panel'\nimport './shared/settings/settings-panel-child'\nimport './shared/playlist/playlist-plugin'\nimport './shared/mobile/peertube-mobile-plugin'\nimport './shared/mobile/peertube-mobile-buttons'\nimport './shared/hotkeys/peertube-hotkeys-plugin'\nimport \"./shared/videojs-helpers/hotkeys.js\";\n\nimport videojs from 'video.js'\nimport { logger } from '@root-helpers/logger'\nimport { isMobile } from '@root-helpers/web-browser'\nimport { saveAverageBandwidth } from './peertube-player-local-storage'\nimport { ManagerOptionsBuilder } from './shared/manager-options'\nimport { TranslationsManager } from './translations-manager'\nimport { CommonOptions, PeertubePlayerManagerOptions, PlayerMode, PlayerNetworkInfo } from './types'\nimport './shared/p2p-media-loader/p2p-media-loader-plugin'\nimport * as p2pMediaLoaderModule from 'p2p-media-loader-hlsjs-basyton'\n\n\n\nconst Fn: any = require('./shared/videojs-helpers/fn.js');\n\n\nconst Slider = videojs.getComponent('Slider') as any\nconst SeekBar = videojs.getComponent('SeekBar') as any\n\nSlider.prototype.update = function(){\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    }\n\n    // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n    const progress = this.getProgress();\n\n    if (progress === this.progress_) {\n      return progress;\n    }\n\n    this.progress_ = progress;\n\n    // Set the new bar width or height\n    var el = this.bar.el()\n\n    if(!this.vertical()){\n      //el.style['transform-origin'] = 'left'\n      el.style['transform'] = 'scaleX('+(progress).toFixed(2)+')'\n    }\n    else{\n      el.style['transform-origin'] = 'bottom'\n      el.style['transform'] = 'scaleY('+(progress).toFixed(2)+')'\n    }\n\n    return progress;\n}\n\nSeekBar.prototype.getPercent = function getPercent () {\n  const time = this.player_.currentTime()\n  const percent = time / this.player_.duration()\n  return percent >= 1 ? 1 : percent\n}\n\nSeekBar.prototype.setEventHandlers_ = function () {\n\n  this.update_ = Fn.bind(this, this.update);\n  this.update = Fn.throttle(this.update_, Fn.UPDATE_REFRESH_INTERVAL);\n\n  this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n  if (this.player_.liveTracker) {\n    this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n  }\n\n  // when playing, let's ensure we smoothly update the play progress bar\n  // via an interval\n  this.updateInterval = null;\n\n  this.enableIntervalHandler_ = (e :any) => this.enableInterval_(e);\n  this.disableIntervalHandler_ = (e :any) => this.disableInterval_(e);\n\n  this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n\n  this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n  // we don't need to update the play progress if the document is hidden,\n  // also, this causes the CPU to spike and eventually crash the page on IE11.\n  if ('hidden' in document && 'visibilityState' in document) {\n    this.on(document, 'visibilitychange', this.toggleVisibility_);\n  }\n}\n\nSeekBar.prototype.enableInterval_ = function() {\n  if (this.updateInterval) {\n    return;\n\n  }\n  this.updateInterval = this.setInterval(this.update, Fn.UPDATE_REFRESH_INTERVAL);\n}\n\nSeekBar.prototype.update = function (event : any) {\n  if (document.visibilityState === 'hidden') {\n    return;\n  }\n\n  const percent = this.getPercent();\n\n  var el = this.bar.el()\n\n  el.style['transform-origin'] = 'left'\n  el.style['transform'] = 'scaleX('+(percent).toFixed(2)+')'\n\n  return percent;\n  \n}\n\nconst CaptionsButton = videojs.getComponent('CaptionsButton') as any\n// Change Captions to Subtitles/CC\nCaptionsButton.prototype.controlText_ = 'Subtitles/CC'\n// We just want to display 'Off' instead of 'captions off', keep a space so the variable == true (hacky I know)\nCaptionsButton.prototype.label_ = ' '\n\nexport class PeertubePlayerManager {\n  private static playerElementClassName: string\n  private static onPlayerChange: (player: videojs.Player) => void\n  private static alreadyPlayed = false\n  //private static pluginsManager: PluginsManager\n\n  private static videojsDecodeErrors = 0\n\n\n  private static p2pMediaLoaderModule: any\n\n  static initState () {\n    this.alreadyPlayed = false\n  }\n\n  static async initialize (mode: PlayerMode, options: PeertubePlayerManagerOptions, onPlayerChange: (player: videojs.Player) => void) {\n    //this.pluginsManager = options.pluginsManager\n\n    this.onPlayerChange = onPlayerChange\n    this.playerElementClassName = options.common.playerElement.className\n\n    //if (mode === 'webtorrent') await import('./shared/webtorrent/webtorrent-plugin')\n\n\n    if (mode === 'p2p-media-loader') {\n      this.p2pMediaLoaderModule = p2pMediaLoaderModule\n    }\n\n\n    return this.buildPlayer(mode, options)\n  }\n\n  private static async buildPlayer (mode: PlayerMode, options: PeertubePlayerManagerOptions): Promise<videojs.Player> {\n    const videojsOptionsBuilder = new ManagerOptionsBuilder(mode, options, this.p2pMediaLoaderModule)\n    const videojsOptions = videojsOptionsBuilder.getVideojsOptions(this.alreadyPlayed)\n\n    /*const videojsOptions = await this.pluginsManager.runHook(\n      'filter:internal.player.videojs.options.result',\n      videojsOptionsBuilder.getVideojsOptions(this.alreadyPlayed)\n    )*/\n\n    // If video is audio\n    if (options && options.isAudio && videojsOptions && videojsOptions.controlBar && videojsOptions.controlBar.children) {\n      videojsOptions.controlBar.children['settingsButton'].entries = ['playbackRateMenuButton'];\n      videojsOptions.controlBar.fullscreenToggle = false;\n      videojsOptions.bigPlayButton = false;\n      videojsOptions.inactivityTimeout = 0;\n      // Mouse events\n      videojsOptions.userActions = videojsOptions.userActions || {}\n      videojsOptions.userActions.doubleClick = false;\n    }\n\n    const self = this\n    return new Promise(res => {\n      videojs(options.common.playerElement, videojsOptions, function (this: videojs.Player) {\n        const player = this\n\n        //let alreadyFallback = false\n\n        const handleError = () => {\n          //if (alreadyFallback) return\n          //alreadyFallback = true\n\n          if (mode === 'p2p-media-loader') {\n            //self.tryToRecoverHLSError(player.error(), player, options)\n          } else {\n            /// remove torrent /// self.maybeFallbackToWebTorrent(mode, player, options)\n          }\n        }\n\n        if (options && options.isAudio)\n          player.addClass('vjs-is-audio')\n\n        player.one('error', () => handleError())\n\n        player.one('play', () => {\n          self.alreadyPlayed = true\n        })\n\n        self.addContextMenu(videojsOptionsBuilder, player, options.common)\n\n        if (isMobile() || options.mobile) player.peertubeMobile()\n        //if (options.common.enableHotkeys === true) player.peerTubeHotkeysPlugin()\n        if (options.common.controlBar === false) player.controlBar.addClass('control-bar-hidden')\n\n        player.bezels()\n\n        if(mode != 'localvideo'){\n          \n          player.stats({\n            videoUUID: options.common.videoUUID,\n            videoIsLive: options.common.isLive,\n            mode,\n            p2pEnabled: options.common.p2pEnabled\n          })\n\n          player.on('p2pInfo', (_, data: PlayerNetworkInfo) => {\n            if (data.source !== 'p2p-media-loader' || isNaN(data.bandwidthEstimate)) return\n\n            saveAverageBandwidth(data.bandwidthEstimate)\n          })\n\n        }\n        else{\n          player.on('durationchange', () => {\n            console.log(\"?????????????\")\n            if(player.duration() != options.common.videoDuration)\n              player.duration(options.common.videoDuration)\n          })\n\n        }\n\n        return res(player)\n      })\n    })\n  }\n\n  private static async tryToRecoverHLSError (err: any, currentPlayer: videojs.Player, options: PeertubePlayerManagerOptions) {\n    if (err.code === 3) { // Decode error\n\n      // Display a notification to user\n      if (this.videojsDecodeErrors === 0) {\n        options.common.errorNotifier(currentPlayer.localize('The video failed to play, will try to fast forward.'))\n      }\n\n      if (this.videojsDecodeErrors === 20) {\n        this.maybeFallbackToWebTorrent('p2p-media-loader', currentPlayer, options)\n        return\n      }\n\n      logger.info('Fast forwarding HLS to recover from an error.')\n\n      this.videojsDecodeErrors++\n\n      options.common.startTime = currentPlayer.currentTime() + 2\n      options.common.autoplay = true\n      this.rebuildAndUpdateVideoElement(currentPlayer, options.common)\n\n      const newPlayer = await this.buildPlayer('p2p-media-loader', options)\n      this.onPlayerChange(newPlayer)\n    } else {\n      this.maybeFallbackToWebTorrent('p2p-media-loader', currentPlayer, options)\n    }\n  }\n\n  private static async maybeFallbackToWebTorrent (\n    currentMode: PlayerMode,\n    currentPlayer: videojs.Player,\n    options: PeertubePlayerManagerOptions\n  ) {\n\n    if (options.webtorrent.videoFiles.length === 0 || currentMode === 'webtorrent') {\n      currentPlayer.peertube().displayFatalError()\n      return\n    }\n\n    logger.info('Fallback to webtorrent.')\n\n    this.rebuildAndUpdateVideoElement(currentPlayer, options.common)\n\n    //await import('./shared/webtorrent/webtorrent-plugin')\n\n    const newPlayer = await this.buildPlayer('webtorrent', options)\n    this.onPlayerChange(newPlayer)\n  }\n\n  private static rebuildAndUpdateVideoElement (player: videojs.Player, commonOptions: CommonOptions) {\n    const newVideoElement = document.createElement('video')\n    newVideoElement.className = this.playerElementClassName\n\n    // VideoJS wraps our video element inside a div\n    let currentParentPlayerElement = commonOptions.playerElement.parentNode\n    // Fix on IOS, don't ask me why\n    if (!currentParentPlayerElement) currentParentPlayerElement = document.getElementById(commonOptions.playerElement.id).parentNode\n\n    currentParentPlayerElement.parentNode.insertBefore(newVideoElement, currentParentPlayerElement)\n\n    commonOptions.playerElement = newVideoElement\n    commonOptions.onPlayerElementChange(newVideoElement)\n\n    player.dispose()\n\n    return newVideoElement\n  }\n\n  private static addContextMenu (optionsBuilder: ManagerOptionsBuilder, player: videojs.Player, commonOptions: CommonOptions) {\n    const options = optionsBuilder.getContextMenuOptions(player, commonOptions)\n\n    player.contextmenuUI(options)\n  }\n}\n\n// ############################################################################\n\nexport {\n  videojs\n}\n","module.exports = require('path-browserify')\n","/**\n * @file guid.js\n * @module guid\n */\n\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nconst _initialGuid = 3;\n\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\nlet _guid = _initialGuid;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nexport function newGUID() {\n  return _guid++;\n}\n\n/**\n * Reset the unique auto-incrementing ID for testing only.\n */\nexport function resetGuidInTestsOnly() {\n  _guid = _initialGuid;\n}","\n/**\n * @file fn.js\n * @module fn\n */\n import { newGUID } from './guid.js';\n import window from 'global/window';\n \n export const UPDATE_REFRESH_INTERVAL = 30;\n \n /**\n  * Bind (a.k.a proxy or context). A simple method for changing the context of\n  * a function.\n  *\n  * It also stores a unique id on the function so it can be easily removed from\n  * events.\n  *\n  * @function\n  * @param    {Mixed} context\n  *           The object to bind as scope.\n  *\n  * @param    {Function} fn\n  *           The function to be bound to a scope.\n  *\n  * @param    {number} [uid]\n  *           An optional unique ID for the function to be set\n  *\n  * @return   {Function}\n  *           The new function that will be bound into the context given\n  */\n export const bind = function(context, fn, uid) {\n   // Make sure the function has a unique ID\n   if (!fn.guid) {\n     fn.guid = newGUID();\n   }\n \n   // Create the new function that changes the context\n   const bound = fn.bind(context);\n \n   // Allow for the ability to individualize this function\n   // Needed in the case where multiple objects might share the same prototype\n   // IF both items add an event listener with the same function, then you try to remove just one\n   // it will remove both because they both have the same guid.\n   // when using this, you need to use the bind method when you remove the listener as well.\n   // currently used in text tracks\n   bound.guid = (uid) ? uid + '_' + fn.guid : fn.guid;\n \n   return bound;\n };\n \n /**\n  * Wraps the given function, `fn`, with a new function that only invokes `fn`\n  * at most once per every `wait` milliseconds.\n  *\n  * @function\n  * @param    {Function} fn\n  *           The function to be throttled.\n  *\n  * @param    {number}   wait\n  *           The number of milliseconds by which to throttle.\n  *\n  * @return   {Function}\n  */\n export const throttle = function(fn, wait) {\n   let last = window.performance.now();\n \n   const throttled = function(...args) {\n     const now = window.performance.now();\n \n     if (now - last >= wait) {\n       fn(...args);\n       last = now;\n     }\n   };\n \n   return throttled;\n };\n \n /**\n  * Creates a debounced function that delays invoking `func` until after `wait`\n  * milliseconds have elapsed since the last time the debounced function was\n  * invoked.\n  *\n  * Inspired by lodash and underscore implementations.\n  *\n  * @function\n  * @param    {Function} func\n  *           The function to wrap with debounce behavior.\n  *\n  * @param    {number} wait\n  *           The number of milliseconds to wait after the last invocation.\n  *\n  * @param    {boolean} [immediate]\n  *           Whether or not to invoke the function immediately upon creation.\n  *\n  * @param    {Object} [context=window]\n  *           The \"context\" in which the debounced function should debounce. For\n  *           example, if this function should be tied to a Video.js player,\n  *           the player can be passed here. Alternatively, defaults to the\n  *           global `window` object.\n  *\n  * @return   {Function}\n  *           A debounced function.\n  */\n export const debounce = function(func, wait, immediate, context = window) {\n   let timeout;\n \n   const cancel = () => {\n     context.clearTimeout(timeout);\n     timeout = null;\n   };\n \n   /* eslint-disable consistent-this */\n   const debounced = function() {\n     const self = this;\n     const args = arguments;\n \n     let later = function() {\n       timeout = null;\n       later = null;\n       if (!immediate) {\n         func.apply(self, args);\n       }\n     };\n \n     if (!timeout && immediate) {\n       func.apply(self, args);\n     }\n \n     context.clearTimeout(timeout);\n     timeout = context.setTimeout(later, wait);\n   };\n   /* eslint-enable consistent-this */\n \n   debounced.cancel = cancel;\n \n   return debounced;\n };","/*\n * Video.js Hotkeys\n * https://github.com/ctd1500/videojs-hotkeys\n *\n * Copyright (c) 2015 Chris Dougherty\n * Licensed under the Apache-2.0 license.\n */\n\n;(function(root, factory) {\n    if (typeof window !== 'undefined' && window.videojs) {\n      factory(window.videojs);\n    } else if (typeof define === 'function' && define.amd) {\n      define('videojs-hotkeys', ['video.js'], function (module) {\n        return factory(module.default || module);\n      });\n    } else if (typeof module !== 'undefined' && module.exports) {\n      module.exports = factory(require('video.js'));\n    }\n  }(this, function (videojs) {\n    \"use strict\";\n    if (typeof window !== 'undefined') {\n      window['videojs_hotkeys'] = { version: \"0.2.27\" };\n    }\n\n  \n    var hotkeys = function(options) {\n      var player = this;\n      var pEl = player.el();\n      var doc = document;\n      var def_options = {\n        volumeStep: 0.1,\n        seekStep: 5,\n        enableMute: true,\n        enableVolumeScroll: true,\n        enableHoverScroll: false,\n        enableFullscreen: true,\n        enableNumbers: true,\n        enableJogStyle: false,\n        alwaysCaptureHotkeys: false,\n        captureDocumentHotkeys: false,\n        documentHotkeysFocusElementFilter: function () { return false },\n        enableModifiersForNumbers: true,\n        enableInactiveFocus: true,\n        skipInitialFocus: false,\n        playPauseKey: playPauseKey,\n        rewindKey: rewindKey,\n        forwardKey: forwardKey,\n        volumeUpKey: volumeUpKey,\n        volumeDownKey: volumeDownKey,\n        muteKey: muteKey,\n        fullscreenKey: fullscreenKey,\n        customKeys: {}\n      };\n  \n      var cPlay = 1,\n        cRewind = 2,\n        cForward = 3,\n        cVolumeUp = 4,\n        cVolumeDown = 5,\n        cMute = 6,\n        cFullscreen = 7;\n  \n      // Use built-in merge function from Video.js v5.0+ or v4.4.0+\n      var mergeOptions = videojs.mergeOptions || videojs.util.mergeOptions;\n      options = mergeOptions(def_options, options || {});\n  \n      var volumeStep = options.volumeStep,\n        seekStep = options.seekStep,\n        enableMute = options.enableMute,\n        enableVolumeScroll = options.enableVolumeScroll,\n        enableHoverScroll = options.enableHoverScroll,\n        enableFull = options.enableFullscreen,\n        enableNumbers = options.enableNumbers,\n        enableJogStyle = options.enableJogStyle,\n        alwaysCaptureHotkeys = options.alwaysCaptureHotkeys,\n        captureDocumentHotkeys = options.captureDocumentHotkeys,\n        documentHotkeysFocusElementFilter = options.documentHotkeysFocusElementFilter,\n        enableModifiersForNumbers = options.enableModifiersForNumbers,\n        enableInactiveFocus = options.enableInactiveFocus,\n        skipInitialFocus = options.skipInitialFocus;\n  \n      var videojsVer = videojs.VERSION;\n  \n      // Set default player tabindex to handle keydown and doubleclick events\n      if (!pEl.hasAttribute('tabIndex')) {\n        pEl.setAttribute('tabIndex', '-1');\n      }\n  \n      // Remove player outline to fix video performance issue\n      pEl.style.outline = \"none\";\n  \n      if (alwaysCaptureHotkeys || !player.autoplay()) {\n        if (!skipInitialFocus) {\n          player.one('play', function() {\n            pEl.focus(); // Fixes the .vjs-big-play-button handing focus back to body instead of the player\n          });\n        }\n      }\n  \n      if (enableInactiveFocus) {\n        player.on('userinactive', function() {\n          // When the control bar fades, re-apply focus to the player if last focus was a control button\n          var cancelFocusingPlayer = function() {\n            clearTimeout(focusingPlayerTimeout);\n          };\n          var focusingPlayerTimeout = setTimeout(function() {\n            player.off('useractive', cancelFocusingPlayer);\n            var activeElement = doc.activeElement;\n            var controlBar = pEl.querySelector('.vjs-control-bar');\n            if (activeElement && activeElement.parentElement == controlBar) {\n              pEl.focus();\n            }\n          }, 10);\n  \n          player.one('useractive', cancelFocusingPlayer);\n        });\n      }\n  \n      player.on('play', function() {\n        // Fix allowing the YouTube plugin to have hotkey support.\n        var ifblocker = pEl.querySelector('.iframeblocker');\n        if (ifblocker && ifblocker.style.display === '') {\n          ifblocker.style.display = \"block\";\n          ifblocker.style.bottom = \"39px\";\n        }\n      });\n  \n      var keyDown = function keyDown(event) {\n        var ewhich = event.which, wasPlaying, seekTime;\n        var ePreventDefault = event.preventDefault.bind(event);\n        var duration = player.duration();\n        // When controls are disabled, hotkeys will be disabled as well\n        if (player.controls()) {\n  \n          // Don't catch keys if any control buttons are focused, unless alwaysCaptureHotkeys is true\n          var activeEl = doc.activeElement;\n          if (\n            alwaysCaptureHotkeys ||\n            (captureDocumentHotkeys && documentHotkeysFocusElementFilter(activeEl)) ||\n  \n            activeEl == pEl ||\n            activeEl == pEl.querySelector('.vjs-tech') ||\n            activeEl == pEl.querySelector('.vjs-control-bar') ||\n            activeEl == pEl.querySelector('.iframeblocker')\n          ) {\n  \n            switch (checkKeys(event, player)) {\n              // Spacebar toggles play/pause\n              case cPlay:\n                ePreventDefault();\n                if (alwaysCaptureHotkeys || captureDocumentHotkeys) {\n                  // Prevent control activation with space\n                  event.stopPropagation();\n                }\n  \n                if (player.paused()) {\n                  silencePromise(player.play());\n                } else {\n                  player.pause();\n                }\n                break;\n  \n              // Seeking with the left/right arrow keys\n              case cRewind: // Seek Backward\n                wasPlaying = !player.paused();\n                ePreventDefault();\n                /*if (wasPlaying) {\n                  player.pause();\n                }*/\n                seekTime = player.currentTime() - seekStepD(event);\n                // The flash player tech will allow you to seek into negative\n                // numbers and break the seekbar, so try to prevent that.\n                if (seekTime <= 0) {\n                  seekTime = 0;\n                }\n\n                player.currentTime(seekTime);\n               /* if (wasPlaying) {\n                  silencePromise(player.play());\n                }*/\n                break;\n              case cForward: // Seek Forward\n                wasPlaying = !player.paused();\n                ePreventDefault();\n                /*if (wasPlaying) {\n                  player.pause();\n                }*/\n                seekTime = player.currentTime() + seekStepD(event);\n                // Fixes the player not sending the end event if you\n                // try to seek past the duration on the seekbar.\n                if (seekTime >= duration) {\n                  seekTime = wasPlaying ? duration - .001 : duration;\n                }\n                player.currentTime(seekTime);\n                /*if (wasPlaying) {\n                  silencePromise(player.play());\n                }*/\n                break;\n  \n              // Volume control with the up/down arrow keys\n              case cVolumeDown:\n                ePreventDefault();\n                if (!enableJogStyle) {\n                  player.volume(player.volume() - volumeStep);\n                } else {\n                  seekTime = player.currentTime() - 1;\n                  if (player.currentTime() <= 1) {\n                    seekTime = 0;\n                  }\n                  player.currentTime(seekTime);\n                }\n                break;\n              case cVolumeUp:\n                ePreventDefault();\n                if (!enableJogStyle) {\n                  player.volume(player.volume() + volumeStep);\n                } else {\n                  seekTime = player.currentTime() + 1;\n                  if (seekTime >= duration) {\n                    seekTime = duration;\n                  }\n                  player.currentTime(seekTime);\n                }\n                break;\n  \n              // Toggle Mute with the M key\n              case cMute:\n                if (enableMute) {\n                  player.muted(!player.muted());\n                }\n                break;\n  \n              // Toggle Fullscreen with the F key\n              case  cFullscreen:\n                if (enableFull) {\n                  if (player.isFullscreen()) {\n                    player.exitFullscreen();\n                  } else {\n                    player.requestFullscreen();\n                  }\n                }\n                break;\n  \n              default:\n                // Number keys from 0-9 skip to a percentage of the video. 0 is 0% and 9 is 90%\n                if ((ewhich > 47 && ewhich < 59) || (ewhich > 95 && ewhich < 106)) {\n                  // Do not handle if enableModifiersForNumbers set to false and keys are Ctrl, Cmd or Alt\n                  if (enableModifiersForNumbers || !(event.metaKey || event.ctrlKey || event.altKey)) {\n                    if (enableNumbers) {\n                      var sub = 48;\n                      if (ewhich > 95) {\n                        sub = 96;\n                      }\n                      var number = ewhich - sub;\n                      ePreventDefault();\n                      player.currentTime(player.duration() * number * 0.1);\n                    }\n                  }\n                }\n  \n                // Handle any custom hotkeys\n                for (var customKey in options.customKeys) {\n                  var customHotkey = options.customKeys[customKey];\n                  // Check for well formed custom keys\n                  if (customHotkey && customHotkey.key && customHotkey.handler) {\n                    // Check if the custom key's condition matches\n                    if (customHotkey.key(event)) {\n                      ePreventDefault();\n                      customHotkey.handler(player, options, event);\n                    }\n                  }\n                }\n            }\n          }\n        }\n      };\n  \n      var doubleClick = function doubleClick(event) {\n        // Video.js added double-click fullscreen in 7.1.0\n        if (videojsVer != null && videojsVer <= \"7.1.0\") {\n          // When controls are disabled, hotkeys will be disabled as well\n          if (player.controls()) {\n  \n            // Don't catch clicks if any control buttons are focused\n            var activeEl = event.relatedTarget || event.toElement || doc.activeElement;\n            if (activeEl == pEl ||\n                activeEl == pEl.querySelector('.vjs-tech') ||\n                activeEl == pEl.querySelector('.iframeblocker')) {\n  \n              if (enableFull) {\n                if (player.isFullscreen()) {\n                  player.exitFullscreen();\n                } else {\n                  player.requestFullscreen();\n                }\n              }\n            }\n          }\n        }\n      };\n  \n      var volumeHover = false;\n      var volumeSelector = pEl.querySelector('.vjs-volume-menu-button') || pEl.querySelector('.vjs-volume-panel');\n      if (volumeSelector != null) {\n        volumeSelector.onmouseover = function() { volumeHover = true; };\n        volumeSelector.onmouseout = function() { volumeHover = false; };\n      }\n  \n      var mouseScroll = function mouseScroll(event) {\n        if (enableHoverScroll) {\n          // If we leave this undefined then it can match non-existent elements below\n          var activeEl = 0;\n        } else {\n          var activeEl = doc.activeElement;\n        }\n  \n        // When controls are disabled, hotkeys will be disabled as well\n        if (player.controls()) {\n          if (alwaysCaptureHotkeys ||\n              activeEl == pEl ||\n              activeEl == pEl.querySelector('.vjs-tech') ||\n              activeEl == pEl.querySelector('.iframeblocker') ||\n              activeEl == pEl.querySelector('.vjs-control-bar') ||\n              volumeHover) {\n  \n            if (enableVolumeScroll) {\n              event = window.event || event;\n              var delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\n              event.preventDefault();\n  \n              if (delta == 1) {\n                player.volume(player.volume() + volumeStep);\n              } else if (delta == -1) {\n                player.volume(player.volume() - volumeStep);\n              }\n            }\n          }\n        }\n      };\n  \n      var checkKeys = function checkKeys(e, player) {\n        // Allow some modularity in defining custom hotkeys\n  \n        // Play/Pause check\n        if (options.playPauseKey(e, player)) {\n          return cPlay;\n        }\n  \n        // Seek Backward check\n        if (options.rewindKey(e, player)) {\n          return cRewind;\n        }\n  \n        // Seek Forward check\n        if (options.forwardKey(e, player)) {\n          return cForward;\n        }\n  \n        // Volume Up check\n        if (options.volumeUpKey(e, player)) {\n          return cVolumeUp;\n        }\n  \n        // Volume Down check\n        if (options.volumeDownKey(e, player)) {\n          return cVolumeDown;\n        }\n  \n        // Mute check\n        if (options.muteKey(e, player)) {\n          return cMute;\n        }\n  \n        // Fullscreen check\n        if (options.fullscreenKey(e, player)) {\n          return cFullscreen;\n        }\n      };\n  \n      function playPauseKey(e) {\n        // Space bar or MediaPlayPause\n        return (e.which === 32 || e.which === 179);\n      }\n  \n      function rewindKey(e) {\n        // Left Arrow or MediaRewind\n        return (e.which === 37 || e.which === 177);\n      }\n  \n      function forwardKey(e) {\n        // Right Arrow or MediaForward\n        return (e.which === 39 || e.which === 176);\n      }\n  \n      function volumeUpKey(e) {\n        // Up Arrow\n        return (e.which === 38);\n      }\n  \n      function volumeDownKey(e) {\n        // Down Arrow\n        return (e.which === 40);\n      }\n  \n      function muteKey(e) {\n        // M key\n        return (e.which === 77);\n      }\n  \n      function fullscreenKey(e) {\n        // F key\n        return (e.which === 70);\n      }\n  \n      function seekStepD(e) {\n        // SeekStep caller, returns an int, or a function returning an int\n        return (typeof seekStep === \"function\" ? seekStep(e) : seekStep);\n      }\n  \n      function silencePromise(value) {\n        if (value != null && typeof value.then === 'function') {\n          value.then(null, function(e) {});\n        }\n      }\n\n\n      var active = false\n\n\n      player.on('enablehotkeys', function(){\n\n\n        player.on('keydown', keyDown);\n        player.on('dblclick', doubleClick);\n        player.on('mousewheel', mouseScroll);\n        player.on(\"DOMMouseScroll\", mouseScroll);\n    \n        if (captureDocumentHotkeys) {\n          document.addEventListener('keydown', keyDown);\n        }\n\n        active = true\n      })\n\n      var off = function(){\n\n        if(active){\n          player.off('keydown', keyDown);\n          player.off('dblclick', doubleClick);\n          player.off('mousewheel', mouseScroll);\n          player.off(\"DOMMouseScroll\", mouseScroll);\n      \n          if (captureDocumentHotkeys) {\n            document.removeEventListener('keydown', keyDown);\n          }\n        }\n\n        active = false\n       \n      }\n  \n      player.on('disablehotkeys', off)\n      player.on('dispose', function(){\n\n        off()\n\n        player = null\n        pEl = null\n      })\n  \n      return this;\n    };\n  \n    var registerPlugin = videojs.registerPlugin || videojs.plugin;\n    registerPlugin('hotkeys', hotkeys);\n  }));"],"names":["EndCard","player","options","dashOffsetTotal","dashOffsetStart","interval","upNextEvents","videojs","ticks","totalTicks","options_","timeout","on","_","condition","addClass","showCard","canceled","removeClass","container","style","display","next","trigger","className","innerHTML","this","headText","cancelText","suspendedText","autoplayRing","getElementsByClassName","title","cancelButton","suspendedMessage","nextButton","onclick","cb","setAttribute","getTitle","one","clearTimeout","goToPercent","percent","newOffset","Math","max","tick","update","suspended","innerText","setTimeout","bind","UpNextPlugin","settings","ready","addChild","timeToInt","time","matches","match","parseInt","secondsToTime","seconds","full","symbol","hourSymbol","minuteSymbol","secondsSymbol","hours","floor","minutes","pick","object","keys","result","key","Object","prototype","hasOwnProperty","call","I18N_LOCALE_ALIAS","getCompleteLocale","locale","concat","map","l","TEXT_RULES","TEXT_WITH_HTML_RULES","toTitleCase","str","charAt","toUpperCase","slice","dictionaryBytes","type","decimals","bytes","value","format","find","d","length","toFixed","StatsCard","metadataStore","intervalMs","playerNetworkInfo","containerEl","infoListEl","closeButton","tabindex","hide","appendChild","populateInfoBlocks","player_","event","data","mode","source","p2pStats","p2p","httpStats","http","downloadSpeed","join","uploadSpeed","totalDownloaded","downloaded","totalUploaded","uploaded","numPeers","averageBandwidth","bandwidthEstimate","downloadedFromServer","downloadedFromPeers","updateInterval","show","setInterval","buildHLSOptions","populateInfoValues","err","logger","clearInterval","progress","latency","p2pMediaLoader","level","getCurrentLevel","codecs","videoCodec","audioCodec","undefined","resolution","height","attrs","buffer","timeRangesToString","buffered","videoIsLive","getLiveLatency","bufferedPercent","playerMode","buildInfoRow","localize","uuid","viewport","volume","color","connection","network","transferred","download","bufferProgress","bufferState","liveLatency","root","colorSpace","videoQuality","getVideoPlaybackQuality","frames","document","documentElement","clientWidth","window","innerWidth","clientHeight","innerHeight","devicePixelRatio","droppedVideoFrames","totalVideoFrames","duration","round","muted","networkActivity","totalTransferred","downloadBreakdown","setInfoValue","p2pEnabled","videoUUID","el","labelText","valueHTML","label","r","i","start","end","StatsForNerdsPlugin","statsCard","isMobile","test","navigator","userAgent","PauseBezel","seeking","ended","showBezel","BezelsPlugin","KEY_PREFIX","getLocalStorage","localStorage","getItem","setLocalStorage","setItem","_a","debugLogger","debug","PeerTubePlugin","CONSTANTS","USER_VIEW_VIDEO_INTERVAL","menuOpened","mouseInControlBar","mouseInSettings","videoViewUrl","authorizationHeader","startTime","initialInactivityTimeout","inactivityTimeout","autoplay","playerOptions","valueNumber","parseFloat","isNaN","getStoredVolume","getStoredMute","defaultSubtitle","subtitle","toString","stopTime","self","onTimeUpdate","currentTime","pause","off","textTracks","addEventListener","showing","tracks_","t","kind","language","videoDuration","initializePlayer","runUserViewing","videoViewInterval","alterInactivity","listenControlBarMouse","listenFullScreenChange","lastViewEvent","lastCurrentTime","notifyUserIsWatching","abs","catch","JSON","stringify","parse","error","getStoredVideoWatchHistory","date","Date","toISOString","viewEvent","Promise","resolve","body","headers","Headers","set","fetch","method","e","isFullscreen","focus","controlBar","settingsButton","dialog","setInactivityTimeout","reportUserActivity","cache_","PeerTubeResolutionsPlugin","resolutions","autoResolutionEnabled","push","currentSelection","getSelected","sort","selected","id","autoResolutionChosenId","byEngine","selectCallback","a","b","NextPreviousVideoButton","nextPreviousVideoButtonOptions","button","nextIcon","handler","isDisabled","P2pInfoButton","div","subDivWebtorrent","downloadIcon","downloadSpeedText","downloadSpeedNumber","downloadSpeedUnit","uploadIcon","uploadSpeedText","uploadSpeedNumber","uploadSpeedUnit","peersText","peersNumber","subDivHttp","subDivHttpText","textContent","PictureInPictureBastyon","controlText","buildElement","classList","add","Component","registerComponent","PeerTubeLoadProgressBar","TheaterButton","enabled","getStoredTheater","THEATER_MODE_CLASS","handleTheaterChange","theaterEnabled","isTheaterEnabled","toggleClass","hasClass","ResolutionMenuItem","selectable","autoResolutionChosen","resolutionId","peertubeResolutions","updateSelection","updateAutoResolution","select","selectedResolution","getAutoResolutionChosen","isAutoResolutionEnabeld","Menu","ResolutionMenuButton","buildQualities","labelEl_","component","children","menu","child","getResolutions","m","addClickListener","SettingsDialog","uniqueId","dialogLabelId","dialogDescriptionId","tabIndex","role","MenuItem","SettingsMenuItem","menuButton","mainMenu","panel","getChild","panelChild","panelChildEl","size","menuToLoad","subMenuName","entry","SubMenuComponent","Error","newOptions","assign","subMenu","subMenuClass","buildCSSClass","split","settingsSubMenuEl_","eventHandlers","build","submenuClickHandler","bindClickEvents","reset","onSubmenuClick","transitionEndHandler","onTransitionEnd","target","currentTarget","contains","loadMainMenu","settingsSubMenuTitleEl_","settingsSubMenuValueEl_","opacity","marginRight","setDialogSize","firstChild","element","callback","action","prefix","p","toLowerCase","removeEventListener","propertyName","setMargin","mainMenuEl","mainMenuAny","width","setSize","createBackButton","PrefixedEvent","name","html","subMenuItem","children_","subMenuItemUntyped","getLabel","hideDialog","item","getComponentSize","contentElType","Button","SettingsButton","settingsButtonOptions","dialogEl","addSettingsItemHandler","onAddSettingsItem","disposeSettingsItemHandler","onDisposeSettingsItem","documentClickHandler","onDocumentClick","userInactiveHandler","onUserInactive","buildMenu","bindEvents","parentElement","_b","_c","dispose","removeChild","entries","isInIframe","addMenuItem","showDialog","peertube","onMenuOpened","onMenuClosed","resetChildren","offsetWidth","offsetHeight","offset","setup","maxHeightOffset","maxHeight","panelEl","settingsMenuItem","hideChildren","el_","menuChild","hideSubMenu","top","SettingsPanel","SettingsPanelChild","PlaylistButton","wrapper","icon","playlistInfoElement","getCurrentPosition","playlist","videosLength","displayName","getPlaylistMenu","open","playlistMenu","PlaylistMenuItem","emitTapEvents","switchPlaylistItem","handleKeyDown","li","video","positionBlock","position","buildAvailableVideo","buildUnavailableVideo","videoElement","thumbnail","src","location","origin","thumbnailPath","infoBlock","channel","startTimestamp","stopTimestamp","timestamps","append","block","code","onClicked","PlaylistMenu","close","current","menuItems","getOptions","header","headerLeft","leftTitle","playlistChannel","videoChannel","leftSubtitle","list","playlistElement","elements","onItemClicked","updateSelected","newPosition","setSelected","getElement","PlaylistPlugin","playlistButton","PeerTubeMobilePlugin","seekAmount","peerTubeMobileButtons","reportTouchActivity","screen","orientation","handleFullscreenRotation","userActions","click","doubleClick","initTouchStartEvents","isPortraitVideo","lock","videoWidth","videoHeight","handleTouchStart","tapTimeout","lastTapEvent","timeStamp","DOUBLE_TAP_DELAY_MS","onDoubleTap","newActiveState","userActive","preventDefault","passive","playerWidth","currentWidth","rect","findPlayerTarget","getBoundingClientRect","offsetX","targetTouches","pageX","left","displayFastSeek","scheduleSetCurrentTime","setCurrentTimeTimeout","newTime","min","play","SET_CURRENT_TIME_DELAY","PeerTubeMobileButtons","mainButton","stopPropagation","paused","rewind","forward","rewindText","forwardText","amount","hideRewind","hideForward","displayForward","displayRewind","remove","PeerTubeHotkeysPlugin","handlers","buildHandlers","handleKeyFunction","onKeyDown","isValidKeyTarget","accept","isNaked","VOLUME_STEP","SEEK_STEP","altKey","ctrlKey","exitFullscreen","requestFullscreen","playbackRate","eventEl","playerEl","activeEl","activeElement","currentElTagName","tagName","querySelector","metaKey","shiftKey","ControlBarOptionsBuilder","globalOptions","common","previousVideo","getPreviousVideo","playToggle","nextVideo","getNextVideo","currentTimeDisplay","timeDivider","durationDisplay","liveDisplay","flexibleWidthSpacer","getProgressControl","p2PInfoButton","muteToggle","volumeControl","getSettingsButton","theaterButton","fullscreenToggle","settingEntries","progressControl","seekBar","mouseTimeDisplay","playProgressBar","previousVideoButton","hasPreviousVideo","nextVideoButton","hasNextVideo","RedundancyUrlManager","baseUrls","segmentUrl","baseUrl","dirname","filter","u","url","getRandomInt","newBaseUrl","slashPart","endsWith","basename","random","segmentUrlBuilderFactory","redundancyUrlManager","segment","buildUrl","wait","ms","res","findbyqualityname","segments","substring","indexOf","segmentValidatorFactory","segmentsSha256Url","isLive","segmentsJSON","fetchSha256Segments","regex","_method","_peerId","retry","hashShouldBe","filename","segmentValue","segmentValidator","range","captured","exec","console","log","calculatedSha","sha256Hex","then","json","crypto","subtle","digest","bufferToHex","default","sha256","s","h","Uint8Array","forEach","v","HLSOptionsBuilder","p2pMediaLoaderModule","commonOptions","redundancyBaseUrls","p2pMediaLoaderConfig","getP2PMediaLoaderOptions","loader","Engine","createLoaderClass","playlistUrl","hlsjs","levelLabelHandler","file","videoFiles","f","fps","html5","hlsjsConfig","getHLSJSOptions","consumeOnly","trackerAnnounce","startsWith","specificLiveOrVODOptions","getP2PMediaLoaderLiveOptions","getP2PMediaLoaderVODOptions","rtcConfig","iceServers","urls","username","credential","simultaneousHttpDownloads","httpFailedSegmentTimeout","localTransport","segmentUrlBuilder","useP2P","segmentsStorage","assetsStorage","swarmId","forwardSegmentCount","p2pDownloadMaxPriority","base","requiredSegmentsPriority","liveOptions","latencyMode","httpDownloadProbability","skipSegmentBuilderPriority","cachedSegmentExpiration","cachedSegmentsCount","httpDownloadMaxPriority","httpDownloadProbabilitySkipIfNoPeers","getHLSLiveOptions","getHLSVODOptions","capLevelToPlayerSize","autoStartLoad","getAverageBandwidthInStore","abrEwmaDefaultEstimate","backBufferLength","startLevel","testBandwidth","liveSyncDurationCount","WebTorrentOptionsBuilder","autoPlayValue","webtorrentOptions","webtorrent","p2pMediaLoaderOptions","playerRefusedP2P","playerElement","ManagerOptionsBuilder","alreadyPlayed","getAutoPlayValue","preloadTextTracks","plugins","getPluginOptions","webtorrentOptionsBuilder","hotkeys","controlBarOptionsBuilder","videojsOptions","textTrackSettings","controls","loop","poster","playbackRates","sources","getChildrenOptions","platform","maxTouchPoints","includes","serverUrl","content","isLoopEnabled","items","listener","tech_","hlsProvider","sendLogsCache","stats","CapLevelController","hls","autoLevelCapping","Number","POSITIVE_INFINITY","firstLevel","media","restrictedLevels","timer","clientRect","registerListeners","levels","maxLevelIndex","curLevel","nextLevel","streamController","unregisterListener","config","stopCapping","Events","onFpsDropLevelCapping","onMediaAttaching","onManifestParsed","onBufferCodecs","onMediaDetaching","isLevelAllowed","droppedLevel","HTMLVideoElement","startCapping","mediaHeight","mediaWidth","getMaxLevel","nextLevelSwitch","capLevelIndex","validLevels","index","getMaxLevelByMediaSize","detectPlayerSize","clientRectLast","boundsRect","right","bottom","getDimensions","contentScaleFactor","pixelRatio","AbrController","lastLoadedFragLevel","_nextAutoLevel","onCheck","_abandonRulesCheck","fragCurrent","partCurrent","bitrateTestDelay","bwEstimator","EwmaBandWidthEstimator","abrEwmaSlowVoD","abrEwmaFastVoD","onFragLoading","onFragLoaded","onFragBuffered","onLevelLoaded","onError","unregisterListeners","clearTimer","frag","PlaylistLevelType","part","details","live","abrEwmaSlowLive","abrEwmaFastLive","autoLevelEnabled","aborted","loaded","total","readyState","bufferInfo","mainForwardBufferInfo","requestDelay","performance","now","loading","loadedFirstByte","first","bwEstimate","getEstimate","minAutoLevel","expectedLen","maxBitrate","loadRate","fragLoadedDelay","bufferStarvationDelay","len","nextLoadLevel","fragLevelNextLoadedDelay","levelNextBitrate","sn","isFinite","sample","abort","abrMaxWithRealBitrate","loadedBytes","loadedDuration","realBitrate","bitrateTest","processingMs","parsing","bwEstimateSample","ErrorDetails","forcedAutoLevel","canEstimate","nextABRAutoLevel","getNextABRAutoLevel","loadError","maxAutoLevel","currentFragDuration","avgbw","bestLevel","findBestLevel","abrBandWidthFactor","abrBandWidthUpFactor","maxStarvationDelay","bwFactor","bwUpFactor","maxLoadingDelay","currentBw","maxFetchDuration","currentLevel","currentCodecSet","codecSet","levelInfo","adjustedbw","levelDetails","avgDuration","partTarget","averagetargetduration","bitrate","fetchDuration","Html5Hlsjs","vjs","tech","errorCounts","maxNetworkErrorRecovery","_duration","metadata","dvrDuration","edgeMargin","name_","playerId","videoLogger","Logger","errorTxt","mediaError","MEDIA_ERR_ABORTED","MEDIA_ERR_DECODE","_handleMediaError","MEDIA_ERR_NETWORK","MEDIA_ERR_SRC_NOT_SUPPORTED","message","initialize","hooks","splice","Infinity","createTimeRanges","endTime","untypedHLS","warn","destroyLogs","destroy","_initHlsjs","once","Hlsjs","recoverMediaError","swapAudioCodec","onLine","startLoad","_event","fatal","_handleNetworkError","srOptions_","buildLevelLabel","manualLevel","obj","objKeys","videoId","returnLog","_notifyVideoQualities","hlsjsConfigRef","_oneLevelObjClone","preload","_startLoad","capLevelController","abrController","_onError","_onMetaData","liveSyncDuration","targetduration","totalduration","_e","attachMedia","loadSource","registerPlugin","plugin","getTech","registerSourceHandler","canHandleSource","handleSource","P2pMediaLoaderPlugin","INFO_SCHEDULER","statsP2PBytes","pendingDownload","pendingUpload","totalDownload","totalUpload","statsHTTPBytes","initVideoJsContribHlsJsPlayer","canPlayType","initializeCore","initializePlugin","p2pEngine","networkInfoInterval","initHlsJsPlayer","getEngine","requestUrl","removeBySegmentUrl","countBaseUrls","runStats","_segment","elem","p2pDownloadSpeed","arraySum","p2pUploadSpeed","httpDownloadSpeed","httpUploadSpeed","reduce","Fn","require","Slider","SeekBar","bar","getProgress","progress_","vertical","getPercent","setEventHandlers_","update_","throttle","UPDATE_REFRESH_INTERVAL","liveTracker","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","visibilityState","CaptionsButton","controlText_","label_","PeertubePlayerManager","onPlayerChange","playerElementClassName","buildPlayer","videojsOptionsBuilder","getVideojsOptions","isAudio","bigPlayButton","addContextMenu","mobile","peertubeMobile","bezels","currentPlayer","videojsDecodeErrors","errorNotifier","maybeFallbackToWebTorrent","rebuildAndUpdateVideoElement","newPlayer","currentMode","displayFatalError","newVideoElement","createElement","currentParentPlayerElement","parentNode","getElementById","insertBefore","onPlayerElementChange","optionsBuilder","getContextMenuOptions","contextmenuUI","module","exports","_guid","context","fn","uid","guid","bound","last","debounce","func","immediate","cancel","debounced","args","arguments","later","apply","factory","version","pEl","doc","volumeStep","mergeOptions","util","seekStep","enableMute","enableVolumeScroll","enableHoverScroll","enableFullscreen","enableNumbers","enableJogStyle","alwaysCaptureHotkeys","captureDocumentHotkeys","documentHotkeysFocusElementFilter","enableModifiersForNumbers","enableInactiveFocus","skipInitialFocus","playPauseKey","which","rewindKey","forwardKey","volumeUpKey","volumeDownKey","muteKey","fullscreenKey","customKeys","enableFull","videojsVer","VERSION","hasAttribute","outline","cancelFocusingPlayer","focusingPlayerTimeout","ifblocker","keyDown","wasPlaying","seekTime","ewhich","ePreventDefault","checkKeys","seekStepD","sub","number","customKey","customHotkey","relatedTarget","toElement","volumeHover","volumeSelector","onmouseover","onmouseout","mouseScroll","delta","wheelDelta","detail","active","define"],"sourceRoot":""}