name: Build Binaries

on:
  workflow_dispatch:

jobs:

  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Save HEAD information
        run: git --no-pager log --decorate=short --pretty=oneline -n1 > head.txt
      - name: Archive repo
        run: |
          mkdir -p /tmp/repo
          rsync -ah --exclude={'.git','.gitignore','.github','node_modules','.well-known'} ./ /tmp/repo/
          cd /tmp/repo
          tar czf /tmp/repo.tgz ./
      - name: Upload artifact repo.tgz
        uses: actions/upload-artifact@v4
        with:
          name: repo.tgz
          path: /tmp/repo.tgz
      - name: Save artifact head.txt
        uses: actions/upload-artifact@v4
        with:
          name: head
          path: ./head.txt
          
  build-macos:
    needs: prepare
    runs-on: macos-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: repo.tgz
      - name: Unpack artifact
        run: tar xzf repo.tgz
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Prepare building
        run: |
          npm i
          npm run build:proxy16
          npm run dev:lotos -- -sha=${{ github.sha }}
      - name: Prepare for app notarization
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.APPLE_API_KEY }}' > ~/private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8
          echo '${{ secrets.APPLECERT }}' | base64 -d > applecert.p12
      - name: Building
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASS }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          CSC_LINK: 'file://applecert.p12'
          CSC_KEY_PASSWORD: ${{ secrets.APPLECERTPWD }}
        run: |
          npm run distm
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos
          path: ./dist/LotosSetup.dmg
        
  build-unix:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: repo.tgz
      - name: Unpack artifact
        run: tar xzf repo.tgz
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Prepare building
        run: |
          apt update && apt install -y binutils rpm
          npm i
          npm run build:proxy16
          npm run dev:lotos -- -sha=${{ github.sha }}
      - name: Building
        run: |
          npm run distl
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: unix
          path: |
            ./dist/LotosSetup.deb
            ./dist/LotosSetup.rpm
            ./dist/Lotos.AppImage
    
  build-windows:
    needs: prepare
    runs-on: windows-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: repo.tgz
      - name: Unpack artifact
        run: tar xzf repo.tgz
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Prepare building
        run: |
          npm i
          npm run build:proxy16
          npm run dev:lotos -- -sha=${{ github.sha }}
      - name: Building
        run: |
          npm run dist
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: ./dist/LotosSetup.exe

  build-android:
    needs: prepare
    runs-on: ubuntu-20.04
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: repo.tgz
      - name: Unpack artifact
        run: tar xzf repo.tgz
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Cordova
        run: |
          npm i -g cordova@10
          cordova --version
      - name: Prepare building
        run: |
          npm i
          npm run build:proxy16
          npm run minimize:cordova -- -sha=${{ github.sha }}
          cd ./cordova
          npm i
      - name: Prepare configuration
        run: |
          cd ./cordova
          echo "${{ secrets.ANDROID_SECRET_KEY }}" | base64 -d > lotos.keystore
          echo "${{ secrets.ANDROID_BUILD_CONF }}" | base64 -d > build.json
          echo "${{ secrets.ANDROID_FIREBASE_CONF }}" | base64 -d > google-services.json
      - name: Fixing Android Build Tool Issue
        run: |
            cd $ANDROID_HOME/build-tools/33.0.0
            mv d8 dx
            cd lib
            mv d8.jar dx.jar
      - name: Configure Cordova Plugins
        run: |
          cd ./cordova
          npm run android-add
      - name: Building
        run: |
          cd ./cordova
          npm run android-build
      - name: Rename apk binary
        run: |
          cd ./cordova/platforms/android/app/build/outputs/apk/release
          mv app-release.apk Lotos.apk
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: ./cordova/platforms/android/app/build/outputs/apk/release/Lotos.apk

  build-android-gf:
    needs: prepare
    runs-on: ubuntu-20.04
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: repo.tgz
      - name: Unpack artifact
        run: tar xzf repo.tgz
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Cordova
        run: |
          npm i -g cordova@10
          cordova --version
      - name: Prepare building
        run: |
          npm i
          npm run build:proxy16
          npm run minimize:cordova:gfree -- -sha=${{ github.sha }} -run=${{ github.run_number }}${{ github.run_attempt }}
          cd ./cordova
          npm i
      - name: Prepare configuration
        run: |
          cd ./cordova
          echo "${{ secrets.ANDROID_SECRET_KEY }}" | base64 -d > lotos.keystore
          echo "${{ secrets.ANDROID_BUILD_CONF }}" | base64 -d > buildgfree.json
          echo "${{ secrets.ANDROID_FIREBASE_CONF }}" | base64 -d > google-services.json
      - name: Fixing Android Build Tool Issue
        run: |
            cd $ANDROID_HOME/build-tools/33.0.0
            mv d8 dx
            cd lib
            mv d8.jar dx.jar
      - name: Configure Cordova Plugins
        run: |
          cd ./cordova
          npm run android-add
      - name: Building
        run: |
          cd ./cordova
          npm run android-build-gfree
      - name: Rename apk binary
        run: |
          cd ./cordova/platforms/android/app/build/outputs/apk/release
          mv app-release.apk LotosGF.apk
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-gfree
          path: ./cordova/platforms/android/app/build/outputs/apk/release/LotosGF.apk
